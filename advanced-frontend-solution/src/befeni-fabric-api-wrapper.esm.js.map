{"version":3,"file":"befeni-fabric-api-wrapper.esm.js","sources":["../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/index.js","../node_modules/object-to-formdata/dist/index.module.js","../src/utils.ts","../src/builder/Builder.ts","../src/builder/FabricBuilder.ts","../src/builder/ButtonBuilder.ts","../src/builder/ThreadBuilder.ts","../src/builder/ShirtGalleryBuilder.ts","../src/cache.ts","../src/base.ts","../src/collection/index.ts","../src/instance/InstanceAbstract.ts","../src/instance/ButtonColor.ts","../src/instance/Fabric.ts","../src/instance/FabricCompositionLabel.ts","../src/instance/FabricBook.ts","../src/instance/FabricBookCategory.ts","../src/instance/Consultant.ts","../src/instance/FabricImage.ts","../src/instance/ShirtBootstrapData.ts","../src/instance/ShirtGalleryItem.ts","../src/instance/ShirtImage.ts","../src/instance/ThreadColor.ts","../src/instance/EmbroideryThreadColor.ts","../src/traits/ThreadTrait.ts","../src/traits/ButtonTrait.ts","../src/traits/FabricTrait.ts","../src/traits/FabricBookTrait.ts","../src/traits/FabricBookCategoryTrait.ts","../src/traits/ShopDataTrait.ts","../src/traits/ShirtGalleryTrait.ts","../src/traits/AuthenticationTrait.ts","../src/traits/AccountTrait.ts","../node_modules/tslib/tslib.es6.js","../node_modules/@formatjs/icu-messageformat-parser/lib/error.js","../node_modules/@formatjs/icu-messageformat-parser/lib/types.js","../node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js","../node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js","../node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js","../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js","../node_modules/@formatjs/icu-skeleton-parser/lib/number.js","../node_modules/@formatjs/icu-messageformat-parser/lib/index.js","../node_modules/@formatjs/fast-memoize/lib/index.js","../node_modules/intl-messageformat/lib/src/error.js","../node_modules/intl-messageformat/lib/src/formatters.js","../node_modules/intl-messageformat/lib/src/core.js","../node_modules/@formatjs/intl/lib/src/error.js","../node_modules/@formatjs/intl/lib/src/utils.js","../node_modules/@formatjs/intl/lib/src/message.js","../node_modules/@formatjs/ecma402-abstract/lib/utils.js","../node_modules/@formatjs/intl/lib/src/dateTime.js","../node_modules/@formatjs/intl/lib/src/displayName.js","../node_modules/@formatjs/intl/lib/src/list.js","../node_modules/@formatjs/intl/lib/src/plural.js","../node_modules/@formatjs/intl/lib/src/relativeTime.js","../node_modules/@formatjs/intl/lib/src/number.js","../src/translations/de.ts","../src/translations/en.ts","../src/index.ts","../node_modules/@formatjs/intl/lib/src/create-intl.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","module.exports = require('./lib/axios');","const isUndefined = (value) => value === undefined;\n\nconst isNull = (value) => value === null;\n\nconst isBoolean = (value) => typeof value === 'boolean';\n\nconst isObject = (value) => value === Object(value);\n\nconst isArray = (value) => Array.isArray(value);\n\nconst isDate = (value) => value instanceof Date;\n\nconst isBlob = (value) =>\n  value &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.slice === 'function';\n\nconst isFile = (value) =>\n  isBlob(value) &&\n  typeof value.name === 'string' &&\n  (typeof value.lastModifiedDate === 'object' ||\n    typeof value.lastModified === 'number');\n\nconst serialize = (obj, cfg, fd, pre) => {\n  cfg = cfg || {};\n\n  cfg.indices = isUndefined(cfg.indices) ? false : cfg.indices;\n\n  cfg.nullsAsUndefineds = isUndefined(cfg.nullsAsUndefineds)\n    ? false\n    : cfg.nullsAsUndefineds;\n\n  cfg.booleansAsIntegers = isUndefined(cfg.booleansAsIntegers)\n    ? false\n    : cfg.booleansAsIntegers;\n\n  cfg.allowEmptyArrays = isUndefined(cfg.allowEmptyArrays)\n    ? false\n    : cfg.allowEmptyArrays;\n\n  fd = fd || new FormData();\n\n  if (isUndefined(obj)) {\n    return fd;\n  } else if (isNull(obj)) {\n    if (!cfg.nullsAsUndefineds) {\n      fd.append(pre, '');\n    }\n  } else if (isBoolean(obj)) {\n    if (cfg.booleansAsIntegers) {\n      fd.append(pre, obj ? 1 : 0);\n    } else {\n      fd.append(pre, obj);\n    }\n  } else if (isArray(obj)) {\n    if (obj.length) {\n      obj.forEach((value, index) => {\n        const key = pre + '[' + (cfg.indices ? index : '') + ']';\n\n        serialize(value, cfg, fd, key);\n      });\n    } else if (cfg.allowEmptyArrays) {\n      fd.append(pre + '[]', '');\n    }\n  } else if (isDate(obj)) {\n    fd.append(pre, obj.toISOString());\n  } else if (isObject(obj) && !isFile(obj) && !isBlob(obj)) {\n    Object.keys(obj).forEach((prop) => {\n      const value = obj[prop];\n\n      if (isArray(value)) {\n        while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n          prop = prop.substring(0, prop.length - 2);\n        }\n      }\n\n      const key = pre ? pre + '[' + prop + ']' : prop;\n\n      serialize(value, cfg, fd, key);\n    });\n  } else {\n    fd.append(pre, obj);\n  }\n\n  return fd;\n};\n\nmodule.exports = {\n  serialize,\n};\n","import { AxiosResponse } from 'axios';\n\nexport function applyMixins(derivedCtor: any, constructors: any[]) {\n    constructors.forEach((baseCtor) => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n            Object.defineProperty(\n                derivedCtor.prototype,\n                name,\n                Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n                Object.create(null)\n            );\n        });\n    });\n}\n\nexport type ResultType = {\n    status: string|boolean,\n    data: []|{}\n}\n\nexport type CollectionResultType = {\n    ststus: string|boolean,\n    data: {\n        collection: Array<any>,\n        pagination: { [index: string]: number}\n    }\n}\n\nexport type ExtendedCollectionResultType = {\n    ststus: string|boolean,\n    data: {\n        collection: Array<any>,\n        curated_books: Array<any>,\n        my_books: Array<any>,\n        pagination: { [index: string]: number}\n    }\n}\n\nexport class GenericResult {\n\n    private result: ResultType|CollectionResultType;\n\n    constructor(data: ResultType|CollectionResultType) {\n        this.result = data;\n    }\n\n    public getResults(): ResultType|CollectionResultType {\n        return this.result;\n    }\n\n}\n\nexport type ConsultantSystemAuthResult = {\n    user_info: string,\n    is_client: boolean,\n};\n\nexport type AccessToken = {\n    access_token: string,\n    token_type: string,\n    expires_in: number,\n    api_base_url: string\n};","import BuilderInterface from './BuilderInterface';\nimport Base from '../base';\nimport { FabricBuilder} from './FabricBuilder'\nimport { HttpMethod, ApiResponse} from '../types';\nimport { GenericResult, ResultType, applyMixins } from '../utils';\n\ntype BuilderParams = {\n\tcolumns?: string,\n\tfilters?: string,\n\tsearch?: string,\n\tincludes?: string,\n\tsort?: string,\n\trelationships?: string,\n\tpage?: number,\n\tper_page?: number,\n\tcustom_fields?: string\n}\n\nexport class Builder implements BuilderInterface {\n\n    /**\n      * the HTTP client to make requests with\n      * @type {[type]}\n      */\n    private client: Base;\n\n    /**\n     * Columns to include in the API results\n     * @type {string[]}\n     */\n    private columns: string[] = [];\n\n    /**\n     * Whether or not to filter the results\n     * @type {boolean}\n     */\n    private filterResults: boolean = false;\n\n    /**\n     * An array of columns to search in if the results are being\n     * filtered\n     * @type {string[]}\n     */\n    private filterFields: string[] = [];\n\n\t/**\n\t * An array of custom columns to include the search results\n\t * filtered\n\t * @type {string[]}\n\t */\n\tprivate customFields: string[] = [];\n\n    /**\n     * the filter term if the results are being filtered\n     * @type {string}\n     */\n    private filterTerm: string = '';\n\n    /**\n     * a key-value [field=>value] list with fields and \n     * what values will be directly included on that field\n     * @type { [index: string]: any }\n     */\n    private whereEqualsVals: { [index: string]: any } = {};\n\n    /**\n     * [field=>direction(asc/desc)] to sort the results by\n     * @type { [index: string]: 'asc' | 'desc' }\n     */\n    private sort: { [index: string]: 'asc' | 'desc' } = {};\n\n    /**\n     * whether or not to paginate the results\n     * @type {boolean}\n     */\n    private shouldPaginate: boolean = false;\n\n    /**\n     * page number for pagination\n     * @type {number}\n     */\n    private pageVal: number = 0;\n\n    /**\n     * number of results to return per page\n     * @type {number}\n     */\n    private resultsPerPageVal: number = 20;\n\n    /**\n     * relationships to include with base model\n     * @type {string[]}\n     */\n    private relationships: string[] = [];\n\n    /**\n\t * Class Constructor\n\t * @param {Base} base [description]\n\t */\n\tconstructor(base: Base) {\n        this.client = base;\n    }\n\n\t/**\n     * Set an array of columns to include in the \n     * result from the API\n     * @param  {string[]} columns\n     * @return {BuilderInterface}        \n     */\n    public select(columns: string[]): BuilderInterface {\n    \tthis.columns = columns;\n    \treturn this;\n    }\n\n    /**\n     * Sets a term to filter the results by and the columns\n     * in which the occurence of the term is searched in\n     * @param  {string} term    \n     * @param  {string[]} columns \n     * @return {BuilderInterface}         \n     */\n    public filter(term: string, columns: string[]): BuilderInterface {\n    \tif(columns.length <= 0) {\n    \t\tthrow new Error('Need at least one field to filter by');\n    \t}\n\n    \tthis.filterResults = true;\n    \tthis.filterTerm    = term;\n    \tthis.filterFields  = columns;\n    \treturn this;\n    }\n\n\t/**\n\t * Add a custom field to be fetched with the standard fields\n\t * @param name\n\t */\n\tpublic addCustomField(name: string): BuilderInterface {\n\t\tthis.customFields.push(name);\n\t\treturn this;\n\t}\n\n    /**\n     * Sets a field to sort by and it's direction\n     * @param  {string} field\n     * @param  {string} direction\n     * @return {BuilderInterface}\n     */\n    public sortBy(field: string, direction: \"asc\" | \"desc\"): BuilderInterface {\n    \tthis.sort[field] = direction;\n    \treturn this;\n    }\n\n\t/**\n\t * Clear the sort by field.\n\t * This is useful when the same client is used by many endpoint\n\t * and we wish to clear the previously added sorting\n\t */\n\tpublic clearSortBy(): BuilderInterface {\n\t\tthis.sort = {};\n\t\treturn this;\n\t}\n   \n    /**\n      * Sets a field and value (can be array) that the API will\n      * search specifically on.\n      * @param  {string} field\n      * @param  {string|number|boolean|[]<any>} value\n      * @return {BuilderInterface}           \n      */\n    public whereEquals(field: string, value: string|number|boolean|Array<any>): BuilderInterface {\n    \tif(this.whereEqualsVals.hasOwnProperty(field)) {\n    \t\tthrow new Error('Field has already been set');\n    \t}\n    \tthis.whereEqualsVals[field] = value;\n\t\treturn this;\n    }\n\n    /**\n     * Sets the page to retireve results from\n     * @param  {number} page\n     * @return {BuilderInterface}     \n     */\n    public page(page: number): BuilderInterface {\n    \tthis.shouldPaginate = true;\n        this.pageVal = page;\n        return this;\n    }\n\n    /**\n     * Sets the number of results to be returned\n     * per page\n     * @param  {number} results\n     * @return {BuilderInterface}\n     */\n    public resultsPerPage(results: number): BuilderInterface {\n        this.shouldPaginate = true;\n        this.resultsPerPageVal = results;\n        if(this.pageVal <= 0) {\n        \tthis.pageVal = 1;\n        }\n    \treturn this;\n    }\n\n    /**\n     * Adds a relationship to the query\n     * @param  {string} relationship\n     * @return {BuilderInterface}\n     */\n    public addRelationship(relationship: string): BuilderInterface {\n    \tthis.relationships.push(relationship);\n    \treturn this;\n    }\n    \n    /**\n     * Main execution of the builder, this generates\n     * the required parameters, headers and body for the\n     * request to the client\n     * @param  {string} method\n     * @param  {string} url\n     * @param  { [index: string]: any } passedInParams\n     * @param  {boolean} isShopRequest If true, the request will be sent to the Shop API endpoint.\n     * @param  {boolean} shouldCache If true, the response will be cached\n     * @return {BuilderInterface}\n     */\n    public async execute(method: HttpMethod, url: string, \n    \tpassedInParams: { [index: string]: any }, isShopRequest: boolean = false, shouldCache: boolean = false): Promise<GenericResult|undefined> {\n\n    \tif(this.client === null) {\n    \t\tthrow new Error('HTTP Client needs to be set');\n    \t}\n\n    \tconst params:BuilderParams = {};\n\n    \tObject.assign(params, passedInParams);\n\n    \tif(this.columns.length > 0) {\n    \t\tparams.columns = this.columns.join(',');\n    \t}\n\n    \tif(this.filterResults) {\n    \t\tparams.filters = this.filterFields.join(',');\n    \t\tparams.search  = this.filterTerm;\n    \t}\n\n    \tif(this.customFields.length > 0) {\n    \t\tparams.custom_fields = this.customFields.join(',');\n\t\t}\n\n    \tif(Object.keys(this.whereEqualsVals).length > 0) {\n    \t\tparams.includes = '';\n    \t\tObject.keys(this.whereEqualsVals).map((key, index) => {\n    \t\t\tif(Array.isArray(this.whereEqualsVals[key])) {\n    \t\t\t\tparams.includes += `${key}:${this.whereEqualsVals[key].join(',')}|`;\n    \t\t\t} else {\n    \t\t\t\tparams.includes += `${key}:${this.whereEqualsVals[key]}|`;\n    \t\t\t}\n    \t\t});\n    \t\tparams.includes.replace(/|(\\s+)?$/, ''); \n    \t}\n\n    \tif(Object.keys(this.sort).length > 0) {\n    \t\tparams.sort = '';\n    \t\tObject.keys(this.sort).map((key, index) => {\n    \t\t\tparams.sort += `${key}:${this.sort[key]},`;\n    \t\t});\n    \t\tparams.sort.replace(/,(\\s+)?$/, ''); \n    \t}\n\n    \tif(this.shouldPaginate) {\n    \t\tparams.page = this.pageVal;\n    \t\tparams.per_page = this.resultsPerPageVal;\n    \t}\n\n    \tif(this.relationships.length > 0) {\n    \t\tparams.relationships = this.relationships.join(',');\n    \t}\n\n    \treturn await this.client.request(method, url, params, isShopRequest, shouldCache);\n\n    }\n\n}\n","import BuilderInterface from './BuilderInterface';\nimport { Builder } from './Builder';\nimport Base from '../base';\n\nexport class FabricBuilder extends Builder implements BuilderInterface {\n\n\t/**\n     * Excludes the seasonal fabric by only picking\n     * everything but seasonal as fabric type\n     * @return <BuilderInterface>\n     */\n    public excludeSeasonalFabrics(): BuilderInterface {\n    \tthis.whereEquals('type', ['Main', 'Contrast', 'Other']);\n        return this;\n    }\n\n    /**\n     * Filters the fabrics so only 100% cotton fabrics\n     * are returned\n     * @return <BuilderInterface>\n     */\n    public includeCottonOnlyFabrics(): BuilderInterface {\n    \tthis.whereEquals('fiber_1', 'Cotton');\n    \tthis.whereEquals('fiber_1_percentage', 100);\n    \treturn this;\n    }\n\n    /**\n     * Only return the suitable for male fabrics\n     * @return <BuilderInterface>\n     */\n    public removeLadyFabrics(): BuilderInterface {\n    \tthis.whereEquals('gender_suitable_for', 'male');\n    \treturn this;\n    }\n\n    /**\n     * Only return the suitable for male fabrics\n     * @return <BuilderInterface>\n     */\n    public withInventory(): BuilderInterface {\n        this.addCustomField('inventory');\n        return this;\n    }\n\n}","import BuilderInterface from './BuilderInterface';\nimport { Builder } from './Builder';\nimport Base from '../base';\nimport { GenericResult } from '../utils';\nimport { HttpMethod } from '../types';\n\nexport class ButtonBuilder extends Builder implements BuilderInterface {\n\n    private whereVals: { [index: string]: any } = {};\n\n    /**\n      * For API endpoints that do not implement the\n      * GenericListRequest (?) class, this allows us to set\n      * fields \n      * @param  {string} field\n      * @param  {string|number|boolean|[]<any>} value\n      * @return {BuilderInterface}           \n      */\n    public where(field: string, value: string|number|boolean|Array<any>): BuilderInterface {\n        if(this.whereVals.hasOwnProperty(field)) {\n            throw new Error('Field has already been set');\n        }\n        this.whereVals[field] = value;\n        return this;\n    }\n\n    /**\n     * Main execution of the builder, this generates\n     * the required parameters, headers and body for the\n     * request to the client\n     * @param  {string} method\n     * @param  {string} url\n     * @param  { [index: string]: any } passedInParams\n     * @return {BuilderInterface}\n     */\n    public async execute(method: HttpMethod, url: string, \n        passedInParams: { [index: string]: any }): Promise<GenericResult|undefined> {\n\n        if(Object.keys(this.whereVals).length > 0) {\n            Object.keys(this.whereVals).map((key, index) => {\n                passedInParams[key] = this.whereVals[key];\n            });\n\n        }\n\n        return super.execute(method, url, passedInParams);\n\n    }\n\n}","import BuilderInterface from './BuilderInterface';\nimport { Builder } from './Builder';\nimport Base from '../base';\nimport { GenericResult } from '../utils';\nimport { HttpMethod } from '../types';\n\nexport class ThreadBuilder extends Builder implements BuilderInterface {\n\n    private whereVals: { [index: string]: any } = {};\n\n    /**\n      * For API endpoints that do not implement the\n      * GenericListRequest (?) class, this allows us to set\n      * fields \n      * @param  {string} field\n      * @param  {string|number|boolean|[]<any>} value\n      * @return {BuilderInterface}           \n      */\n    public where(field: string, value: string|number|boolean|Array<any>): BuilderInterface {\n        if(this.whereVals.hasOwnProperty(field)) {\n            throw new Error('Field has already been set');\n        }\n        this.whereVals[field] = value;\n        return this;\n    }\n\n    /**\n     * Main execution of the builder, this generates\n     * the required parameters, headers and body for the\n     * request to the client\n     * @param  {string} method\n     * @param  {string} url\n     * @param  { [index: string]: any } passedInParams\n     * @return {BuilderInterface}\n     */\n    public async execute(method: HttpMethod, url: string, \n        passedInParams: { [index: string]: any }): Promise<GenericResult|undefined> {\n\n        if(Object.keys(this.whereVals).length > 0) {\n            Object.keys(this.whereVals).map((key, index) => {\n                passedInParams[key] = this.whereVals[key];\n            });\n\n        }\n\n        return super.execute(method, url, passedInParams);\n\n    }\n\n}","import BuilderInterface from './BuilderInterface';\nimport { Builder } from './Builder';\nimport Base from '../base';\nimport { GenericResult } from '../utils';\nimport { HttpMethod } from '../types';\nimport { FabricPattern, FabricType, FabricWeave } from '../instance/Fabric';\n\nexport class ShirtGalleryBuilder extends Builder implements BuilderInterface {\n\n\t/**\n\t * Set fabric filters\n\t * \n\t * @param {numbers[]} fabricIds\n\t */ \n\tpublic includeFabrics(fabricIds: number[]): ShirtGalleryBuilder {\n\t\tif(fabricIds.length > 0) {\n\t\t\tthis.whereEquals('fabric', fabricIds);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the fabric family filters\n\t * \n\t * @param {number[]} familyIds\n\t */ \n\tpublic includeFamilies(familyIds: number[]): ShirtGalleryBuilder {\n\t\tif(familyIds.length > 0) {\n\t\t\tthis.whereEquals('family', familyIds);\n\t\t}\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the contrast fabric family filters\n\t * \n\t * @param {number[]} contrastFamilyIds\n\t */ \n\tpublic includeContrastFamilies(contrastFamilyIds: number[]): ShirtGalleryBuilder {\n\t\tif(contrastFamilyIds.length > 0) {\n\t\t\tthis.whereEquals('contrast_family', contrastFamilyIds);\n\t\t}\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the fabric pattern filters\n\t * \n\t * @param {FabricPattern[]} patterns\n\t */\n\tpublic includeFabricPatterns(patterns: FabricPattern[]): ShirtGalleryBuilder {\n\t\tif(patterns.length > 0) {\n\t\t\tthis.whereEquals('pattern', patterns);\n\t\t}\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the fabric type filters\n\t * \n\t * @param {FabricType[]} types\n\t */\n\tpublic includeFabricTypes(types: FabricType[]): ShirtGalleryBuilder {\n\t\tif(types.length > 0) {\n\t\t\tthis.whereEquals('fabrics.type', types);\n\t\t}\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the fabric weave filters\n\t * \n\t * @param {FabricWeave[]} weaves\n\t */\n\tpublic includeFabricWeaves(weaves: FabricWeave[]): ShirtGalleryBuilder {\n\t\tif(weaves.length > 0) {\n\t\t\tthis.whereEquals('weave', weaves);\n\t\t}\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the fabric composition filters\n\t * \n\t * @param {number[]} compositionIds\n\t */\n\tpublic includeFabricCompositions(compositionIds: number[]): ShirtGalleryBuilder {\n\t\tif(compositionIds.length > 0) {\n\t\t\tthis.whereEquals('fabric_compositions', compositionIds);\n\t\t}\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the shirt design filters\n\t * \n\t * @param {string[]} designs\n\t */\n\tpublic includeDesigns(designs: string[]): ShirtGalleryBuilder {\n\t\tif(designs.length > 0) {\n\t\t\tthis.whereEquals('design', designs);\n\t\t} \t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the shirt collar style filters\n\t * \n\t * @param {number[]} collarStyleIds\n\t */\n\tpublic includeCollarStyles(collarStyleIds: number[]): ShirtGalleryBuilder {\n\t\tif(collarStyleIds.length > 0) {\n\t\t\tthis.whereEquals('collar', collarStyleIds);\n\t\t}\t\t\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the shirt collar style filters\n\t * \n\t * @param {number[]} cuffStyleIds\n\t */\n\tpublic includeCuffStyles(cuffStyleIds: number[]): ShirtGalleryBuilder {\n\t\tif(cuffStyleIds.length > 0) {\n\t\t\tthis.whereEquals('cuff', cuffStyleIds);\n\t\t}\t\t\n\t\treturn this;\n\t}\n\n}","type CacheResult = any;\n\nexport class CachingService {\n\n    /**\n     * Holds a singleton instance of this class\n     * @type {CachingService}\n     */\n    private static instance: CachingService;\n\n    /**\n     * Array of cache entries\n     * @type {string}\n     */\n    private cacheEntries: { key: string, params?: string, result: CacheResult }[] = [];\n\n    /**\n     * Class constructor, creates a singleton instance\n     * of this class\n     */\n    constructor() {\n        if (CachingService.instance) {\n            return CachingService.instance;\n        }\n        CachingService.instance = this;\n        return this;\n    }\n\n    /**\n     * Set an entry into the cache\n     * @param  {string} key\n     * @param  {string} params\n     * @param  {any} result\n     * @return {CachingService}\n     */\n    public setEntry(key: string, result:any, params?: string):CachingService {\n        if(!this.checkCacheEntryExists(key, params)) {\n            this.cacheEntries.push({\n                key,\n                result,\n                params\n            })\n        }\n        return this;\n    }\n\n    /**\n     * Get a cache entry\n     * @param  {string} key\n     * @param  {string} params\n     * @return {CacheResult}\n     */\n    public getEntry(key: string, params?: string): CacheResult | null {\n        const entry = this.cacheEntries.find(item => {\n            if(params) {\n                return (item.key === key && item.params === params);\n            } else {\n                return (item.key === key);\n            }\n        })\n\n        return (entry) ? entry.result : null;\n    }\n\n    /**\n     * Checks if an entry exists in the cache\n     * @param  {string} key\n     * @param  {string} params\n     * @return {boolean}\n     */\n    public checkCacheEntryExists(key: string, params?: string): boolean {\n        return (this.getEntry(key, params));\n    }\n\n}","import axios, { AxiosResponse, AxiosPromise } from 'axios';\nimport { serialize } from 'object-to-formdata';\n\nimport { HttpMethod, ApiResponse, ServiceConfig} from './types';\nimport { GenericResult, ResultType, CollectionResultType, AccessToken } from './utils';\nimport { Builder, FabricBuilder, ThreadBuilder, ButtonBuilder, ShirtGalleryBuilder } from './builder';\nimport { CachingService } from './cache'\n\nexport default class Base {\n\n    /**\n     * @type {string}\n     */\n    protected accessToken: string = '';\n\n    /**\n     * @type {string}\n     */\n    protected apiBaseUrl: string = '';\n\n    /**\n     * @type {string}\n     */\n    protected shopBaseUrl: string;\n\n    /**\n     * @type {Builder}\n     */\n    private builder: Builder;\n\n    /**\n     * @type {CachingService}\n     */\n    private cache = new CachingService();\n\n    /**\n     * Constructor\n     * @param {string} config\n     */\n    constructor(config: ServiceConfig) {\n        this.shopBaseUrl = config.shopBaseUrl;\n        this.apiBaseUrl = config.apiBaseUrl;\n        this.builder      = new Builder(this);\n    }\n\n    /**\n     * Update the current access token used by the client\n     * @param {AccessToken} token\n     */ \n    public updateAccessToken(token: AccessToken) {\n        this.accessToken = token.access_token;\n    }\n\n    /**\n     * Update the current access token used by the client\n     * Called instead of the method above if you wish to\n     * set the token directly from a pre-obtained\n     * access token as a string\n     * @param {AccessToken} token\n     */ \n    public updateAccessTokenDirectly(token: string) {\n        this.accessToken = token;\n    }\n\n    /**\n     * Get an instance of the Builder\n     * @param {string} type\n     * @return {Builder}\n     */\n    public getBuilder(type?: string): Builder {\n        if(!type) {\n            return this.builder;\n        }\n\n        switch(type) {\n            case 'FabricBuilder':\n                return new FabricBuilder(this);\n\n            case 'ThreadBuilder':\n                return new ThreadBuilder(this);\n\n            case 'ButtonBuilder':\n                return new ButtonBuilder(this);\n\n            case 'ShirtGalleryBuilder':\n                return new ShirtGalleryBuilder(this);\n\n            default:\n               return this.builder;\n        }\n    }\n\n    /**\n     * Generic make HTTP request method\n     * @param {HttpMethod} method\n     * @param {string} endpoint\n     * @param {object|FormData}data\n     * @return Promise<GenericResult|undefined>\n     */\n    public async request<T>(method: HttpMethod, endpoint: string, data: object | FormData, isShopRequest?: boolean, shouldCache?: boolean): Promise<GenericResult|undefined> {\n\n        let requestKey = `${method}_${endpoint}`;\n        let params = JSON.stringify(data);\n\n\n        if(shouldCache) {\n            if (this.cache.checkCacheEntryExists(requestKey, params)) {\n                return new Promise(resolve => resolve(this.cache.getEntry(requestKey, params)));\n            }\n        }\n\n        /**\n         * Build the request headers\n         */ \n        let headers = {\n            'Authorization': 'Bearer ' + this.accessToken,\n            'Accept': 'application/json',\n            'Content-type' : 'application/octet-stream'\n        }\n\n        if(method == \"post\") {\n            headers['Content-type'] = 'multipart/form-data';\n        }\n\n        if(method == \"put\") {\n            headers['Content-type'] = 'application/x-www-form-urlencoded';\n        }\n\n        if(method == \"delete\") {\n            headers['Content-type'] = 'application/json';\n        }\n\n        /**\n         * Set the correct url\n         */ \n        let url = (isShopRequest ? this.shopBaseUrl : this.apiBaseUrl);\n\n        /**\n         * Remove the trailing /\n         */ \n        url = url.replace(/\\/$/, '') + '/' + endpoint;\n\n        /**\n         * Build the request options\n         */ \n        let requestOptions = {\n            headers: headers, \n            method: method,\n            url: url,\n            params: {},                       \n            data: {},\n            maxBodyLength: Infinity,\n            maxContentLength: Infinity                     \n        };\n\n        /**\n         * \n         */ \n        if(method == \"get\" || method == \"put\") {\n            requestOptions.params = data;\n        } else if(method == \"post\") {\n            if(data instanceof FormData) {\n                requestOptions.data = data;\n            } else {\n                /**\n                 * Convert the JS Object to FormData, if not the data will be sent as JSON in the request body\n                 */ \n                requestOptions.data = serialize(data);\n            }            \n        } else {\n            requestOptions.data = data;\n        }\n\n        /**\n         * Send the request and return response\n         */ \n        \n        try {\n            const response = await axios.request<ResultType|CollectionResultType>(requestOptions);\n            if(response.headers['content-type'] !== \"application/json\") {\n                throw new Error(`Response not in JSON format`);\n            }\n\n            const res = new GenericResult(response.data);\n            if(shouldCache) {\n                this.cache.setEntry(requestKey, res, params);\n            }\n            return res;\n\n        } catch(error) {\n            // @todo something\n        }\n    }\n\n}\n","import { InstanceAbstract } from '../instance';\n\nexport type PaginationDetails = {\n  current_page: number;\n  last_page: number;\n  per_page: number;\n  total_records: number;\n}\n\ninterface DictionaryInterface<T> {\n  /**\n   * Add a key=>value part to the dictionary\n   * @param {string} key\n   * @param {T}      value\n   */\n  addItem(key: string, value: T): boolean;\n\n  /**\n   * Removes an item with a given key from \n   * the dictionary\n   * \n   * @param  {string} key\n   * @return {T}         \n   */\n  deleteItem(key: string): boolean;\n\n  /**\n   * Get an item form the dictionary by key\n   * @param  {string} key\n   * @return {T}         \n   */\n  getItem(key: string): T;\n\n  /**\n   * Check if the dictionary contains a certain\n   * key\n   * @param  {string}  key [description]\n   * @return {boolean}     [description]\n   */\n  checkKeyExists(key: string): boolean;\n\n  /**\n   * Returns the size of the current dictionary\n   * @return {number}\n   */\n  size(): number;\n\n  /**\n   * Get all the keys in the dictionary\n   * @return {string[]}\n   */\n  getKeys(): string[];\n\n  /**\n   * Get all the values in the dictionary\n   * @return {T[]}\n   */\n  getValues(): T[];\n\n  /**\n   * Applies a callback function to the items in\n   * the dictionary to return a filtered list\n   * of items\n   * @param  {T) => T} callback\n   * @return {T[]}\n   */\n  filter(callback: (item: T) => boolean): Dictionary<T>;\n\n  setPagination(pagination: PaginationDetails): DictionaryInterface<T>;\n}\n\nexport default class Dictionary<T> implements DictionaryInterface<T> {\n\n  private items: { [index: string]: T } = {};\n\n  private count: number = 0;\n\n  private current_page: number = 0;\n\n  private last_page: number = 0;\n\n  private per_page: number = 0;\n\n  private total_records: number = 0;\n\n  /**\n   * Add a key=>value part to the dictionary\n   * @param {string} key\n   * @param {T}      value\n   */\n  addItem(key: string, value: T) {\n    if(this.items.hasOwnProperty(key)) {\n      return false;\n    }\n\n    this.items[key] = value;\n    this.count++;\n    return true;\n  }\n\n  /**\n   * Removes an item with a given key from \n   * the dictionary\n   * \n   * @param  {string} key\n   * @return {T}         \n   */\n  deleteItem(key: string): boolean {\n    if(!this.checkKeyExists(key)) {\n      return false;\n    }\n\n    delete this.items[key];\n    this.count--;\n    return true;\n  }\n\n  /**\n   * Get an item form the dictionary by key\n   * @param  {string} key\n   * @return {T}         \n   */\n  getItem(key: string): T {\n    return this.items[key];\n  }\n\n  /**\n   * Check if the dictionary contains a certain\n   * key\n   * @param  {string}  key [description]\n   * @return {boolean}     [description]\n   */\n  checkKeyExists(key: string): boolean {\n    return this.items.hasOwnProperty(key);\n  }\n\n  /**\n   * Returns the size of the current dictionary\n   * @return {number}\n   */\n  size(): number {\n    return this.count;\n  }\n\n  /**\n   * Get all the keys in the dictionary\n   * @return {string[]}\n   */\n  getKeys(): string[] {\n    let keys: string[] = [];\n\n    for(let property in this.items) {\n      if(this.items.hasOwnProperty(property)) {\n        keys.push(property);\n      }\n    }\n\n    return keys;\n  }\n\n  /**\n   * Get all the values in the dictionary\n   * @return {T[]}\n   */\n  getValues(): T[] {\n    let values: T[] = [];\n\n    for(let property in this.items) {\n      if(this.items.hasOwnProperty(property)) {\n        values.push(this.items[property]);\n      }\n    }\n\n    return values;\n  }\n\n  /**\n   * Clears a collection\n   * @return void\n   */\n  clear() {\n     this.count = 0;\n     this.items = {};\n  }\n\n  /**\n   * Applies a callback function to the items in\n   * the dictionary to return a filtered list\n   * of items\n   * @param  {T) => T} callback\n   * @return {T[]}\n   */\n  filter(callback: (item: T) => boolean): Dictionary<T> {\n    const dictItems = Object.values(this.items);\n    const newItems = dictItems.filter(callback);\n    this.clear();\n\n    var count = 1;\n    newItems.map(result => {\n        this.addItem(count.toString(), result);\n        count++;\n    })\n\n    return this;\n  }\n  \n  public setPagination(pagination: PaginationDetails): DictionaryInterface<T> {\n    this.current_page = pagination.current_page;\n    this.last_page = pagination.last_page;\n    this.per_page = pagination.per_page;\n    this.total_records = pagination.total_records;\n    return this;\n  }\n}\n","import { ThreadColor, ButtonColor, Fabric, FabricBook, FabricBookCategory, ShirtGalleryItem, Consultant } from '../instance';\nimport * as instances from \"../instance\";\n\nexport type ModelNames = 'ThreadColor'|'ButtonColor'|'Fabric'|'FabricBook'|'FabricBookCategory'|'ShirtGalleryItem'|'Consultant';\nexport interface InstanceInterface {};\n\nexport abstract class InstanceAbstract {\n\n    /**\n     * This a list of relationships which is overwritten \n     * in the actual instance itself.\n     *\n     * In order for the automatic hydration of the models to\n     * be successful, the structure of this object should be:\n     * {\n     *  <instance name>: <field expected in raw data>\n     * }\n     * @type { [string]: string}\n     */\n    public relationships: { [index: string]: string} = {}\n\n    /**\n     * Create an instance of a class\n     * @param  {string} className\n     * @param  {any[]}  ...args\n     * @return {any}\n     */\n    public getInstance(className: string, ...args: any[]): InstanceInterface {\n        const instance: any = instances;\n        if (typeof instance[className] !== undefined) {\n            return new instance[className]((args.length > 0) ? args[0] : null);\n        } else {\n            throw new Error(\"Class not found: \" + className);\n        }\n    }\n\n    /**\n     * Static factory method to create new instances\n     * @param  {object} rawData \n     * @param  {ModelNames} type    \n     * @return {InstanceInterface}         \n     */\n    public static createFromRaw(rawData: object, type: ModelNames): InstanceInterface {\n        switch(type) {\n            case 'ThreadColor':\n                return new ThreadColor(rawData);\n                break;\n            case 'ButtonColor':\n                return new ButtonColor(rawData);\n                break;\n            case 'Fabric':\n                return new Fabric(rawData);\n                break;\n            case 'FabricBook':\n                return new FabricBook(rawData);\n                break;\n            case 'FabricBookCategory':\n                return new FabricBookCategory(rawData);\n                break;\n            case 'ShirtGalleryItem':\n                return new ShirtGalleryItem(rawData);\n                break;\n            case 'Consultant':\n                return new Consultant(rawData);\n                break;\n        }\n    }\n\n    /**\n     * Populates the instance with raw data\n     * @param object rawData key/value pair of data defining the instance\n     * @param {InstanceAbstract} obj\n     */\n    public importFromObj(rawData: { [index: string]: any }, obj: InstanceAbstract): void {\n        const prototype = Object.getPrototypeOf(obj);\n\n        // add base properties\n        Object.getOwnPropertyNames(prototype).forEach((name: string): void => {\n            if(name.slice(0,3) == 'set') {    \n                // check that it is not a relationship method\n                if(!this.isRelationshipMethod(name)) {\n                    let prop = this.toSnakeCase(name.slice(3));\n                    if(rawData.hasOwnProperty(prop)) {\n                        prototype[name].call(obj, rawData[prop]);\n                    } \n                }\n            }\n        });\n\n        // add relationships\n        if(Object.keys(this.relationships).length > 0) {\n            Object.keys(this.relationships).map((key: string) => {\n                let formattedRelationship = this.toSnakeCase(this.relationships[key]);\n                let relationshipSetter = this.toCamelCase('set_' + this.toSnakeCase(this.relationships[key]));\n                let instanceName = this.toClassName(this.toSnakeCase(key));\n\n                if(rawData.hasOwnProperty(formattedRelationship)) {\n                    if(rawData[formattedRelationship] !== null) {\n                        if(Array.isArray(rawData[formattedRelationship])) {\n\n                            /** Relationship is an array */\n                            for(var objData of rawData[formattedRelationship]) {\n                                let newObj = this.getInstance(instanceName, objData);\n                                prototype[relationshipSetter].call(obj, newObj);\n                            }\n                        } else {\n                            let newObj = this.getInstance(instanceName, rawData[formattedRelationship]);\n                            prototype[relationshipSetter].call(obj, newObj);\n                        }\n                    }\n                }\n            });\n        }\n\n    }\n\n    public isRelationshipMethod(method: string): boolean {\n        const relationshipMethods = Object.values(this.relationships).map(field => {\n            return 'set' + this.toClassName(field);\n        })\n        return (relationshipMethods.indexOf(method) !== -1);\n    } \n\n    /**\n     * Converts any snake_case string to ccamelCase\n     * @param  {string} input\n     * @return {string}      \n     */\n    public toCamelCase(input: string): string {\n        return input.toLowerCase()\n            // Replaces any - or _ characters with a space \n            .replace(/[-_]+/g, ' ')\n            // Removes any non alphanumeric characters \n            .replace(/[^\\w\\s]/g, '')\n            // Uppercases the first character in each group immediately following a space \n            // (delimited by spaces) \n            .replace(/ (.)/g, function($1) { return $1.toUpperCase(); })\n            // Removes spaces \n            .replace(/ /g, '' );\n    } \n\n    /**\n     * Converts any camelCase string to snake_case\n     * @param  {string} input\n     * @return {string}      \n     */\n    public toSnakeCase(input: string): string {\n        return input\n            .split('')\n            // iterates over each character and adds a space before a capital letter \n            // whilst also transforming to lower case. Space is not added before\n            // first instance of a capital lettr\n            .map((letter: string, index: number): string => {\n              if (/[A-Z]/.test(letter)) {\n                  return (index) ? ` ${letter.toLowerCase()}` : letter.toLowerCase();\n              }\n              if (/[1-9]/.test(letter)) {\n                  return (index) ? ` ${letter}` : letter;\n              }\n              return letter;\n            })\n            .join('')\n            // replace dashes with underscores\n            .replace(/-/g, '_')\n            // replace spaces with underscores\n            .replace(/\\s+/g, '_')\n    }\n\n    /**\n     * Takes a camel case string (like fabric_composition_label)\n     * and converts to class name like FabricCompositionLabel \n     * @param  {string} input\n     * @return {string}\n     */\n    public toClassName(input: string): string {\n        return input.split('_')\n            .map(str => str.charAt(0).toUpperCase() + str.slice(1))\n            .join('');\n    }\n\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\n\nexport class ButtonColor extends InstanceAbstract implements InstanceInterface {\n\n    /**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n    /** ====== Class Properties ====== */\n\n    /**\n     * @var number\n     */\n    private id: number = 0;\n\n    /**\n     * @var string\n     */\n    private title_en: string = '';\n\n    /**\n     * @var string\n     */\n    private title_th: string = '';\n\n    /**\n     * @var string\n     */\n    private title_de: string = '';\n\n    /**\n     * @var string\n     */\n    private title_translatable: string = '';\n\n    /**\n     * @var string\n     */\n    private hex_code: string = '';\n\n    /**\n     * @var number\n     */\n    private internal_number: number = 0;\n\n    /**\n     * @var number\n     */\n    private order_color: number = 0;\n\n    /**\n     * @var string\n     */\n    private created_at: string = '';\n\n    /**\n     * @var string\n     */\n    private updated_at: string = '';\n\n\n    /** ====== Accessors and Mutators ====== */\n\n    /**\n     * @return number\n     */\n    public getId(): number {\n        return this.id;\n    }\n\n    /**\n     * @param number\n     * @return ButtonColor\n     */\n    public setId(id: number): ButtonColor {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitleEn(): string {\n        return this.title_en;\n    }\n\n    /**\n     * @param string title_en\n     * @return ButtonColor\n     */\n    public setTitleEn(title_en: string): ButtonColor {\n        this.title_en = title_en;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitleDe(): string {\n        return this.title_de;\n    }\n\n    /**\n     * @param string title_de\n     * @return ButtonColor\n     */\n    public setTitleDe(title_de: string): ButtonColor {\n        this.title_de = title_de;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitleTh(): string {\n        return this.title_th;\n    }\n\n    /**\n     * @param string title_th\n     * @return ButtonColor\n     */\n    public setTitleTh(title_th: string): ButtonColor {\n        this.title_th = title_th;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitleTranslatable(): string {\n        return this.title_translatable;\n    }\n\n    /**\n     * @param string title_translatable\n     * @return ButtonColor\n     */\n    public setTitleTranslatable(title_translatable: string): ButtonColor {\n        this.title_translatable = title_translatable;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getHexCode(): string {\n        return this.hex_code;\n    }\n\n    /**\n     * @param string hex_code\n     * @return self\n     */\n    public setHexCode(hex_code: string): ButtonColor {\n        this.hex_code = hex_code;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getInternalNumber(): number {\n        return this.internal_number;\n    }\n\n    /**\n     * @param number internal_number\n     * @return ButtonColor\n     */\n    public setInternalNumber(internal_number: number): ButtonColor {\n        this.internal_number = internal_number;\n        return this;\n    }\n\n    /**\n     * @return boolean\n     */\n    public getOrderColor(): number {\n        return this.order_color;\n    }\n\n    /**\n     * @param boolean embroidery_only\n     * @return ButtonColor\n     */\n    public setOrderColor(order_color: number): ButtonColor {\n        this.order_color = order_color;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getCreatedAt(): string {\n        return this.created_at;\n    }\n\n    /**\n     * @param string created_at\n     * @return ButtonColor\n     */\n    public setCreatedAt(created_at: string): ButtonColor {\n        this.created_at = created_at;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getUpdatedAt(): string {\n        return this.updated_at;\n    }\n\n    /**\n     * @param string updated_at\n     * @return ButtonColor\n     */\n    public setUpdatedAt(updated_at: string): ButtonColor {\n        this.updated_at = updated_at;\n        return this;\n    }\n\n    /**\n     * Get the translated button title\n     * @return string\n     */\n    public getTranslatedTitle(language: \"EN\" | \"TH\" | \"DE\"): string {\n        let title = this.getTitleDe();\n        switch (language) {\n            case \"EN\":\n                title = this.getTitleEn();\n                break;\n            case \"TH\":\n                title = this.getTitleTh();\n                break;\n            case \"DE\":\n            default:\n                title = this.getTitleDe();\n                break;\n        }\n\n        return title;\n    }\n\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\nimport { FabricCompositionLabel } from './FabricCompositionLabel';\nimport { ButtonColor } from './ButtonColor';\nimport { ThreadColor } from './ThreadColor';\nimport { EmbroideryThreadColor } from './EmbroideryThreadColor';\nimport { FabricImage } from './FabricImage';\nimport {ShirtGalleryItem} from \"./ShirtGalleryItem\";\n\nexport type FabricPattern = 'solid' | 'striped' | 'checked' | 'dotted' | 'camouflage' | 'geometric' | 'paisley' | 'other' | 'floral' | 'herringbone' | 'dobby' | 'abstract';\nexport type FabricCurrency = 'THB' | 'USD' | 'EUR';\nexport type FabricType = 'Main' | 'Seasonal' | 'Contrast' | 'Other';\nexport type FabricAvailability = 'available' | 'sold_out_coming_back' | 'sold_out_not_coming_back' | 'soon_sold_out_coming_back' | 'soon_sold_out_not_coming_back' | 'not_released_yet' | 'inactive'\nexport type FabricWeave = \"Poplin\" | \"Dobby\" | \"Twill\" | \"Oxford\" | \"Satin\" | \"Plain\" | \"Mix\" | \"Bamboo\" | \"Heringbone\" | \"Hering\" | \"Flanell\" | \"Bedford Cord\" | \"Big Twill\";\n\nexport class Fabric extends InstanceAbstract implements InstanceInterface {\n\n    /**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n    /** ====== Class Properties ====== */\n\n    /**\n     * @type {number}\n     */\n    private id: number = 0;\n\n    /**\n     * @type {string}\n     */\n    private name: string = '';\n\n    /**\n     * @type {string}\n     */\n    private image_url: string = '';\n\n    /**\n     * @type {FabricPattern}\n     */\n    private pattern: FabricPattern = 'solid'\n\n    /**\n     * @type {number}\n     */\n    private comfort: number = 1;\n\n    /**\n     * @type {number}\n     */\n    private ironing: number = 1;\n\n    /**\n     * @type {number}\n     */\n    private fabric_composition_label_id: number = 0;\n\n    /**\n     * @type {string}\n     */\n    private default_weave: string = '';\n\n    /**\n     * @type {string}\n     */\n    private default_weight: string = '';\n\n    /**\n     * @type {'business' | 'casual' = 'business'}\n     */\n    private usage_type: 'business' | 'casual' = 'business';\n\n    /**\n     * @type {string}\n     */\n    private default_finish: string = '';\n\n    /**\n     * @type {number}\n     */\n    private button_color_id: number = 0;\n\n    /**\n     * @type {number}\n     */\n    private thread_color_id: number = 0;\n\n    /**\n     * @type {number}\n     */\n    private embroidery_thread_color_id: number = 0;\n\n    /**\n     * @type {number}\n     */\n    private white_fabric_id: number = 0;\n\n    /**\n     * @type {boolean}\n     */\n    private sample_book: boolean = false;\n\n    /**\n     * @type {number}\n     */\n    private position_book: number = 0;\n\n    /**\n     * @type {boolean}\n     */\n    private matching: boolean = false;\n\n    /**\n     * @type {string}\n     */\n    private interlining_color: string = '';\n\n    /**\n     * @type {string}\n     */\n    private interlining_softness: 'soft' | 'hard' = 'hard';\n\n    /**\n     * @type {boolean}\n     */\n    private is_shirt_fabric: boolean = false;\n\n    /**\n     * @type {boolean}\n     */\n    private is_stretch_fabric: boolean = false;\n\n    /**\n     * @type {boolean}\n     */\n    private is_jersey_fabric: boolean = false;\n\n    /**\n     * @type {string}\n     */\n    private special_description_suffix: string = '';\n\n    /**\n     * @type {string}\n     */\n    private description: string = '';\n\n    /**\n     * @type {'male'|'female'}\n     */\n    private gender_suitable_for: 'male' | 'female' = 'male';\n\n    /**\n     * @type {'Main'|'Seasonal'|'Contrast'|'Other'}\n     */\n    private type: FabricType = 'Main';\n\n    /**\n     * @type {string}\n     */\n    private introduced_date: string = '';\n\n    /**\n     * @type {string}\n     */\n    private discontinued_date: string = '';\n\n    /**\n     * {FabricAvailability}\n     */\n    private status: FabricAvailability = 'inactive';\n\n    /**\n     * @type {string}\n     */\n    private note: string = '';\n\n    /**\n     * @type {'keep'|'out'}\n     */\n    private future: 'keep' | 'out' = 'keep';\n\n    /**\n     * @type {string}\n     */\n    private created_at: string = '';\n\n    /**\n     * @type {string}\n     */\n    private updated_at: string = '';\n\n    /**\n     * @type {string}\n     */\n    private delivery_date: string = '';\n\n    /**\n     * @type {number}\n     */\n    private out_of_stock_date: number = 0;\n\n    /**\n     * @type {number}\n     */\n    private remaining_shirts: number = 0;\n\n\n    /** ====== Relationships ====== */\n\n    /**\n     * These are a list of relationships that will be searched\n     * for in any raw data passed to the constructor of a Fabric\n     * instance. From there it will try to populate these \n     * relationships with instances of the relationship.\n     *\n     * See InstanceAbstract for an explanation of the format\n     * below\n     * @type {string[]}\n     */\n    public relationships: { [index: string]: string} = {\n        'buttonColor': 'buttonColor',\n        'category': 'category',\n        'embroideryThreadColor': 'embroideryThreadColor',\n        'fabricCompositionLabel': 'fabricCompositionLabel',\n        // 'fabricSupplier': 'fabricSupplier',\n        'rolls': 'rolls',\n        'threadColor': 'threadColor',\n        'fabricImage': 'images',\n        'shirtGalleryItem': 'galleries'\n    }\n\n    /**\n     * Each fabric has a button color, this property stores\n     * a reference to the ButtonColor instance belonging\n     * to this Fabric\n     * @type {ButtonColor}\n     */\n    private buttonColor: ButtonColor = {} as ButtonColor;\n\n    /**\n     * Each fabric has a thread color, this property stores\n     * a reference to the ThreadColor instance belonging\n     * to this Fabric\n     * @type {ThreadColor}\n     */\n    private threadColor: ThreadColor = {} as ThreadColor;\n\n\n    /**\n     * Each fabric has a embroidery thread color, this property stores\n     * a reference to the ThreadColor instance belonging\n     * to this Fabric\n     * @type {EmbroideryThreadColor}\n     */\n    private embroideryThreadColor: EmbroideryThreadColor = {} as EmbroideryThreadColor;\n\n    /**\n     * Each fabric has a composition label, this property stores\n     * a reference to the FabricCompositionLabel instance belonging\n     * to this Fabric\n     * @type {FabricCompositionLabel}\n     */\n    private compositionLabel: FabricCompositionLabel = {} as FabricCompositionLabel;\n\n    /**\n     * Each fabric has multiple images, this property is an array\n     * of FabricImage instances belonging to this Fabric\n     * @type {Array<FabricImage>}\n     */\n    private fabricImages: Array<FabricImage> = [] as Array<FabricImage>;\n\n    /**\n     * Each fabric may have multiple shirt galleries, this property is an array\n     * of ShirtGalleryItem instances belonging to this Fabric\n     * @type {Array<ShirtGalleryItem>}\n     */\n    private shirtGalleries: Array<ShirtGalleryItem> = [] as Array<ShirtGalleryItem>;\n\n    /**\n     * @return {FabricCompositionLabel}\n     */\n    public getFabricCompositionLabel(): FabricCompositionLabel {\n        return this.compositionLabel;\n    }\n\n    /**\n     * @param  {FabricCompositionLabel} compositionLabel\n     * @return {Fabric}                                 \n     */\n    public setFabricCompositionLabel(compositionLabel: FabricCompositionLabel): Fabric {\n        this.compositionLabel = compositionLabel;\n        return this;\n    }\n\n    /**\n     * @return {Array<FabricImage>}\n     */\n    public getImages(): Array<FabricImage> {\n        return this.fabricImages;\n    }\n\n    /**\n     * @param  {FabricImage} image\n     * @return {Fabric}           \n     */\n    public setImages(image: FabricImage): Fabric {\n        this.fabricImages.push(image)\n        return this;\n    }\n\n    /**\n     * @param  {FabricImage) => FabricImage} callback\n     * @return {Array<FabricImage>}\n     */\n    public getImage(callback: (item: FabricImage) => FabricImage): Array<FabricImage> {\n        return this.fabricImages.filter(callback);\n    }\n\n    /**\n     * @return {Array<ShirtGalleryItem>}\n     */\n    public getGalleries(): Array<ShirtGalleryItem> {\n        return this.shirtGalleries;\n    }\n\n    /**\n     * @param  {ShirtGalleryItem} shirt\n     * @return {Fabric}\n     */\n    public setGalleries(shirt: ShirtGalleryItem): Fabric {\n        this.shirtGalleries.push(shirt)\n        return this;\n    }\n\n    /**\n     * @param  {ShirtGalleryItem) => ShirtGalleryItem} callback\n     * @return {Array<ShirtGalleryItem>}\n     */\n    public getGallery(callback: (item: ShirtGalleryItem) => ShirtGalleryItem): Array<ShirtGalleryItem> {\n        return this.shirtGalleries.filter(callback);\n    }\n\n    /** ====== Accessors and Mutators ====== */\n\n    /**\n     * @return mixed\n     */\n    public getId(): number {\n        return this.id;\n    }\n\n    /**\n     * @param mixed id\n     * @return <Fabric>\n     */\n    public setId(id: number): Fabric {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getName(): string {\n        return this.name;\n    }\n\n    /**\n     * @param mixed name\n     * @return <Fabric>\n     */\n    public setName(name: string): Fabric {\n        this.name = name;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getImageUrl(): string {\n        return this.image_url;\n    }\n\n    /**\n     * @param mixed image_url\n     *\n     * @return <Fabric>\n     */\n    public setImageUrl(image_url: string): Fabric {\n        this.image_url = image_url;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getPattern(): FabricPattern {\n        return this.pattern;\n    }\n\n    /**\n     * @param mixed pattern\n     *\n     * @return <Fabric>\n     */\n    public setPattern(pattern: FabricPattern): Fabric {\n        this.pattern = pattern;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getComfort(): number {\n        return this.comfort;\n    }\n\n    /**\n     * @param mixed comfort\n     *\n     * @return <Fabric>\n     */\n    public setComfort(comfort: number): Fabric {\n        this.comfort = comfort;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getIroning(): number {\n        return this.ironing;\n    }\n\n    /**\n     * @param mixed ironing\n     *\n     * @return <Fabric>\n     */\n    public setIroning(ironing: number): Fabric {\n        this.ironing = ironing;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getFabricCompositionLabelId(): number {\n        return this.fabric_composition_label_id;\n    }\n\n    /**\n     * @param mixed fabric_composition_label_id\n     * @return <Fabric>\n     */\n    public setFabricCompositionLabelId(fabric_composition_label_id: number): Fabric {\n        this.fabric_composition_label_id = fabric_composition_label_id;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getDefaultWeave(): string {\n        return this.default_weave;\n    }\n\n    /**\n     * @param mixed default_weave\n     *\n     * @return <Fabric>\n     */\n    public setDefaultWeave(default_weave: string): Fabric {\n        this.default_weave = default_weave;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getDefaultWeight(): string {\n        return this.default_weight;\n    }\n\n    /**\n     * @param mixed default_weight\n     *\n     * @return <Fabric>\n     */\n    public setDefaultWeight(default_weight: string): Fabric {\n        this.default_weight = default_weight;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getUsageType(): 'business' | 'casual' {\n        return this.usage_type;\n    }\n\n    /**\n     * @param mixed usage_type\n     */\n    public setUsageType(usage_type: 'business' | 'casual'): Fabric {\n        this.usage_type = usage_type;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getDefaultFinish(): string {\n        return this.default_finish;\n    }\n\n    /**\n     * @param mixed default_finish\n     *\n     * @return <Fabric>\n     */\n    public setDefaultFinish(default_finish: string): Fabric {\n        this.default_finish = default_finish;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getButtonColorId(): number {\n        return this.button_color_id;\n    }\n\n    /**\n     * @param mixed button_color_id\n     *\n     * @return <Fabric>\n     */\n    public setButtonColorId(button_color_id: number): Fabric {\n        this.button_color_id = button_color_id;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getButtonColor(): ButtonColor {\n        return this.buttonColor;\n    }\n\n    /**\n     * @param mixed buttonColor\n     *\n     * @return <Fabric>\n     */\n    public setButtonColor(buttonColor: ButtonColor): Fabric {\n        this.buttonColor = buttonColor;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getThreadColorId(): number {\n        return this.thread_color_id;\n    }\n\n    /**\n     * @param mixed thread_color_id\n     *\n     * @return <Fabric>\n     */\n    public setThreadColorId(thread_color_id: number): Fabric {\n        this.thread_color_id = thread_color_id;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getThreadColor(): ThreadColor {\n        return this.threadColor;\n    }\n\n    /**\n     * @param mixed threadColor\n     *\n     * @return <Fabric>\n     */\n    public setThreadColor(threadColor: ThreadColor): Fabric {\n        this.threadColor = threadColor;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getEmbroideryThreadColorId(): number {\n        return this.embroidery_thread_color_id;\n    }\n\n    /**\n     * @param mixed embroidery_thread_color_id\n     *\n     * @return <Fabric>\n     */\n    public setEmbroideryThreadColorId(embroidery_thread_color_id: number): Fabric {\n        this.embroidery_thread_color_id = embroidery_thread_color_id;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getEmbroideryThreadColor(): EmbroideryThreadColor {\n        return this.embroideryThreadColor;\n    }\n\n    /**\n     * @param mixed embroideryThreadColor\n     *\n     * @return <Fabric>\n     */\n    public setEmbroideryThreadColor(embroideryThreadColor: EmbroideryThreadColor): Fabric {\n        this.embroideryThreadColor = embroideryThreadColor;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getWhiteFabricId(): number {\n        return this.white_fabric_id;\n    }\n\n    /**\n     * @param mixed white_fabric_id\n     *\n     * @return <Fabric>\n     */\n    public setWhiteFabricId(white_fabric_id: number): Fabric {\n        this.white_fabric_id = white_fabric_id;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getSampleBook(): boolean {\n        return this.sample_book;\n    }\n\n    /**\n     * @param mixed sample_book\n     *\n     * @return <Fabric>\n     */\n    public setSampleBook(sample_book: boolean): Fabric {\n        this.sample_book = sample_book;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getPositionBook(): number {\n        return this.position_book;\n    }\n\n    /**\n     * @param mixed position_book\n     *\n     * @return <Fabric>\n     */\n    public setPositionBook(position_book: number): Fabric {\n        this.position_book = position_book;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getMatching(): boolean {\n        return this.matching;\n    }\n\n    /**\n     * @param mixed matching\n     *\n     * @return <Fabric>\n     */\n    public setMatching(matching: boolean): Fabric {\n        this.matching = matching;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getInterliningColor(): string {\n        return this.interlining_color;\n    }\n\n    /**\n     * @param mixed interlining_color\n     *\n     * @return <Fabric>\n     */\n    public setInterliningColor(interlining_color: string): Fabric {\n        this.interlining_color = interlining_color;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getInterliningSoftness(): 'soft'|'hard' {\n        return this.interlining_softness;\n    }\n\n    /**\n     * @param mixed interlining_softness\n     *\n     * @return <Fabric>\n     */\n    public setInterliningSoftness(interlining_color: 'soft'|'hard'): Fabric {\n        this.interlining_color = interlining_color;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getIsShirtFabric(): boolean {\n        return this.is_shirt_fabric;\n    }\n\n    /**\n     * @param mixed is_shirt_fabric\n     *\n     * @return <Fabric>\n     */\n    public setIsShirtFabric(is_shirt_fabric: boolean): Fabric {\n        this.is_shirt_fabric = is_shirt_fabric;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getIsStretchFabric(): boolean {\n        return this.is_stretch_fabric;\n    }\n\n    /**\n     * @param mixed is_stretch_fabric\n     *\n     * @return <Fabric>\n     */\n    public setIsStretchFabric(is_stretch_fabric: boolean): Fabric {\n        this.is_stretch_fabric = is_stretch_fabric;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getIsJerseyFabric(): boolean {\n        return this.is_jersey_fabric;\n    }\n\n    /**\n     * @param mixed is_jersey_fabric\n     *\n     * @return <Fabric>\n     */\n    public setIsJerseyFabric(is_jersey_fabric: boolean): Fabric {\n        this.is_jersey_fabric = is_jersey_fabric;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getSpecialDescriptionSuffix(): string {\n        return this.special_description_suffix;\n    }\n\n    /**\n     * @param mixed special_description_suffix\n     *\n     * @return <Fabric>\n     */\n    public setSpecialDescriptionSuffix(special_description_suffix: string): Fabric {\n        this.special_description_suffix = special_description_suffix;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getDescription(): string {\n        return this.description;\n    }\n\n    /**\n     * @param mixed description\n     * @return <Fabric>\n     */\n    public setDescription(description: string): Fabric {\n        this.description = description;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getGenderSuitableFor(): 'male' | 'female' {\n        return this.gender_suitable_for;\n    }\n\n    /**\n     * @param mixed gender_suitable_for\n     *\n     * @return <Fabric>\n     */\n    public setGenderSuitableFor(gender_suitable_for: 'male' | 'female'): Fabric {\n        this.gender_suitable_for = gender_suitable_for;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getType(): FabricType {\n        return this.type;\n    }\n\n    /**\n     * @param mixed type\n     *\n     * @return <Fabric>\n     */\n    public setType(type: FabricType): Fabric {\n        this.type = type;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getIntroducedDate(): string {\n        return this.introduced_date;\n    }\n\n    /**\n     * @param mixed introduced_date\n     *\n     * @return <Fabric>\n     */\n    public setIntroducedDate(introduced_date: string): Fabric {\n        this.introduced_date = introduced_date;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getDiscontinuedDate(): string {\n        return this.discontinued_date;\n    }\n\n    /**\n     * @param mixed discontinued_date\n     *\n     * @return <Fabric>\n     */\n    public setDiscontinuedDate(discontinued_date: string): Fabric {\n        this.discontinued_date = discontinued_date;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getStatus(): FabricAvailability {\n        return this.status;\n    }\n\n    /**\n     * @param mixed status\n     *\n     * @return <Fabric>\n     */\n    public setStatus(status: FabricAvailability): Fabric {\n        this.status = status;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getNote(): string {\n        return this.note;\n    }\n\n    /**\n     * @param mixed note\n     *\n     * @return <Fabric>\n     */\n    public setNote(note: string): Fabric {\n        this.note = note;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getFuture(): 'keep' | 'out' {\n        return this.future;\n    }\n\n    /**\n     * @param mixed future\n     *\n     * @return <Fabric>\n     */\n    public setFuture(future: 'keep' | 'out'): Fabric {\n        this.future = future;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getCreatedAt(): string {\n        return this.created_at;\n    }\n\n    /**\n     * @param mixed created_at\n     *\n     * @return <Fabric>\n     */\n    public setCreatedAt(created_at: string): Fabric {\n        this.created_at = created_at;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getUpdatedAt(): string {\n        return this.updated_at;\n    }\n\n    /**\n     * @param updated_at\n     * @return <Fabric>\n     */\n    public setUpdatedAt(updated_at: string): Fabric {\n        this.updated_at = updated_at;\n        return this;\n    }\n\n    /**\n     * @return mixed\n     */\n    public getDeliveryDate(): string {\n        return this.delivery_date;\n    }\n\n    /**\n     * @param delivery_date\n     * @return <Fabric>\n     */\n    public setDeliveryDate(delivery_date: string): Fabric {\n        this.delivery_date = delivery_date;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getOutOfStockDate(): number {\n        return this.out_of_stock_date;\n    }\n\n    /**\n     * @param out_of_stock_date\n     * @return <Fabric>\n     */\n    public setOutOfStockDate(out_of_stock_date: number): Fabric {\n        this.out_of_stock_date = out_of_stock_date;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getRemainingShirts(): number {\n        return this.remaining_shirts;\n    }\n\n    /**\n     * @param remaining_shirts\n     * @return <Fabric>\n     */\n    public setRemainingShirts(remaining_shirts: number): Fabric {\n        this.remaining_shirts = remaining_shirts;\n        return this;\n    }\n\n    /**\n     * Get the special information that will be displayed along with fabric type, material, weave ... on the fabric details pages\n     */ \n    public generateSpecialDescription(): string {\n        let specialFieldComponents: Array<string> = [];\n\n        if(this.is_stretch_fabric) {\n            specialFieldComponents.push('[[stretch_fabric]]');\n        }\n\n        if(this.is_jersey_fabric) {\n            specialFieldComponents.push('[[jersey_fabric]]');\n        }\n\n        if(this.special_description_suffix && this.special_description_suffix.length > 0) {\n            specialFieldComponents.push(this.special_description_suffix);\n        }\n\n        return specialFieldComponents.join(', ');\n    }\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\n\nexport class FabricCompositionLabel extends InstanceAbstract implements InstanceInterface {\n\n    /**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n    /**\n     * @type {number}\n     */\n    private id: number = 0;\n\n    /**\n     * @type {string}\n     */\n    private label_name: string = '';\n\n    /**\n     * @type {string}\n     */\n    private fiber_1: string = '';\n\n    /**\n     * @type {number}\n     */\n    private fiber_1_percentage: number = 0;\n\n    /**\n     * @type {string}\n     */\n    private fiber_2: string = '';\n\n    /**\n     * @type {number}\n     */\n    private fiber_2_percentage: number = 0;\n\n    /**\n     * @type {string}\n     */\n    private fiber_3: string = '';\n\n    /**\n     * @type {number}\n     */\n    private fiber_3_percentage: number = 0;\n\n    /**\n     * @type {string}\n     */\n    private created_at: string = '';\n\n    /**\n     * @type {string}\n     */\n    private updated_at: string = '';\n\n    /**\n     * @return {number}\n     */\n    public getId(): number {\n        return this.id;\n    }\n\n    /**\n     * @param  {number} id\n     * @return {FabricCompositionLabel}\n     */\n    public setId(id: number): FabricCompositionLabel {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getLabelName(): string {\n        return this.label_name;\n    }\n\n    /**\n     * @param  {string} label_name\n     * @return {FabricCompositionLabel}\n     */\n    public setLabelName(label_name: string): FabricCompositionLabel {\n        this.label_name = label_name;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getFiber1(): string {\n        return this.fiber_1;\n    }\n\n    /**\n     * @param  {string} fiber_1\n     * @return {FabricCompositionLabel}\n     */\n    public setFiber1(fiber_1: string): FabricCompositionLabel {\n        this.fiber_1 = fiber_1;\n        return this;\n    }\n\n    /**\n     * @return {number}\n     */\n    public getFiber1Percentage(): number {\n        return this.fiber_1_percentage;\n    }\n\n    /**\n     * @param  {number} fiber_1_percentage\n     * @return {FabricCompositionLabel}\n     */\n    public setFiber1Percentage(fiber_1_percentage: number): FabricCompositionLabel {\n        this.fiber_1_percentage = fiber_1_percentage;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getFiber2(): string {\n        return this.fiber_2;\n    }\n\n    /**\n     * @param  {string} fiber_2\n     * @return {FabricCompositionLabel}\n     */\n    public setFiber2(fiber_2: string): FabricCompositionLabel {\n        this.fiber_2 = fiber_2;\n        return this;\n    }\n\n    /**\n     * @return {number}\n     */\n    public getFiber2Percentage(): number {\n        return this.fiber_2_percentage;\n    }\n\n    /**\n     * @param  {number} fiber_2_percentage\n     * @return {FabricCompositionLabel}\n     */\n    public setFiber2Percentage(fiber_2_percentage: number): FabricCompositionLabel {\n        this.fiber_2_percentage = fiber_2_percentage;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getFiber3(): string {\n        return this.fiber_3;\n    }\n\n    /**\n     * @param  {string} fiber_3\n     * @return {FabricCompositionLabel}\n     */\n    public setFiber3(fiber_3: string): FabricCompositionLabel {\n        this.fiber_3 = fiber_3;\n        return this;\n    }\n\n    /**\n     * @return {number}\n     */\n    public getFiber3Percentage(): number {\n        return this.fiber_3_percentage;\n    }\n\n    /**\n     * @param  {number} fiber_3_percentage\n     * @return {FabricCompositionLabel}\n     */\n    public setFiber3Percentage(fiber_3_percentage: number): FabricCompositionLabel {\n        this.fiber_3_percentage = fiber_3_percentage;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getCreatedAt(): string {\n        return this.created_at;\n    }\n\n    /**\n     * @param  {string} created_at\n     * @return {FabricCompositionLabel}\n     */\n    public setCreatedAt(created_at: string): FabricCompositionLabel {\n        this.created_at = created_at;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getUpdatedAt(): string {\n        return this.updated_at;\n    }\n\n    /**\n     * @param  {string} updated_at\n     * @return {FabricCompositionLabel}\n     */\n    public setUpdatedAt(updated_at: string): FabricCompositionLabel {\n        this.updated_at = updated_at;\n        return this;\n    }\n\n    /**\n     * Get the Fabric Composition stored on the Fabric as a string\n     * @return string\n     */\n    public generateCompositionLabelString(): string {\n        return `${this.getFiber1Percentage()}% [[${this.getFiber1()}]]`\n            + ((this.getFiber2Percentage() > 0) \n                ? ` ${this.getFiber2Percentage()}% [[${this.getFiber2()}]]`\n                : '')\n            + ((this.getFiber3Percentage() > 0)\n                ? ` ${this.getFiber3Percentage()}% [[${this.getFiber3()}]]`\n                : '');\n    }\n\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\n\nimport { Fabric } from './Fabric';\nimport { FabricBookCategory } from './FabricBookCategory';\nimport { Consultant } from './Consultant';\n\nexport class FabricBook extends InstanceAbstract implements InstanceInterface {\n\n\t/**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n\n    /**\n     * @var number\n     */\n    private id: number = 0;\n\n    /**\n     * @var string\n     */\n    private title: string = '';\n\n    /**\n     * @var string\n     */\n    private slug: string = '';\n\n    /**\n     * @var number\n     */\n    private consultant_id: number = 0;\n\n    /**\n     * @var number\n     */\n    private likes: number = 0;\n\n    /**\n     * @var number\n     */\n    private order: number = 0;\n\n    /**\n     * @var number\n     */\n    private fabric_book_category_id: number = 0;\n\n    /**\n     * @var string\n     */\n    private visibility: string = 'inactive';\n\n    /**\n     * @var string\n     */\n    private book_cover_image: string = '';\n\n    /**\n     * @var string\n     */\n    private book_cover_color: string = '';\n\n    /** ====== Relationships ====== */\n    /**\n     * These are a list of relationships that will be searched\n     * for in any raw data passed to the constructor of a Fabric\n     * instance. From there it will try to populate these \n     * relationships with instances of the relationship.\n     *\n     * See InstanceAbstract for an explanation of the format\n     * below\n     * @type {string[]}\n     */\n\n    public relationships: { [index: string]: string} = {\n        'fabric': 'fabrics',\n        'consultant': 'consultant',\n        'fabricBookCategory': 'category'\n    }\n\n    /**\n     * Each book has multiple fabrics, this property is an array\n     * of Fabric instances belonging to this FabricBook\n     * @type {Array<Fabric>}\n     */\n    private bookFabrics: Array<Fabric> = [] as Array<Fabric>;\n\n    /**\n     * The creator and owner of the book\n     */ \n    private bookOwner: Consultant = {} as Consultant;\n\n    /**\n     * The creator and owner of the book\n     */ \n    private bookCategory: FabricBookCategory = {} as FabricBookCategory;\n\n    /**\n     * @return number\n     */\n    public getId(): number {\n        return this.id;\n    }\n\n    /**\n     * @param number\n     * @return FabricBook\n     */\n    public setId(id: number): FabricBook {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitle(): string {\n        return this.title;\n    }\n\n    /**\n     * @param string title\n     * @return FabricBook\n     */\n    public setTitle(title: string): FabricBook {\n        this.title = title;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getSlug(): string {\n        return this.slug;\n    }\n\n    /**\n     * @param string slug\n     * @return FabricBook\n     */\n    public setSlug(slug: string): FabricBook {\n        this.slug = slug;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getConsultantId(): number {\n        return this.consultant_id;\n    }\n\n    /**\n     * @param number\n     * @return FabricBook\n     */\n    public setConsultantId(consultant_id: number): FabricBook {\n        this.consultant_id = consultant_id;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getLikes(): number {\n        return this.likes;\n    }\n\n    /**\n     * @param number\n     * @return FabricBook\n     */\n    public setLikes(likes: number): FabricBook {\n        this.likes = likes;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getOrder(): number {\n        return this.order;\n    }\n\n    /**\n     * @param number\n     * @return FabricBook\n     */\n    public setOrder(order: number): FabricBook {\n        this.order = order;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getFabricBookCategoryId(): number {\n        return this.fabric_book_category_id;\n    }\n\n    /**\n     * @param number\n     * @return FabricBook\n     */\n    public setFabricBookCategoryId(fabric_book_category_id: number): FabricBook {\n        this.fabric_book_category_id = fabric_book_category_id;\n        return this;\n    }\n\n    /**\n     * @return boolean\n     */\n    public getVisibility(): string {\n        return this.visibility;\n    }\n\n    /**\n     * @param boolean\n     * @return FabricBook\n     */\n    public setVisibility(visibility: string): FabricBook {\n        this.visibility = visibility;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getBookCoverImage(): string {\n        return this.book_cover_image;\n    }\n\n    /**\n     * @param string book_cover_image\n     * @return FabricBook\n     */\n    public setBookCoverImage(book_cover_image: string): FabricBook {\n        this.book_cover_image = book_cover_image;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getBookCoverColor(): string {\n        return this.book_cover_color;\n    }\n\n    /**\n     * @param string book_cover_color\n     * @return FabricBook\n     */\n    public setBookCoverColor(book_cover_color: string): FabricBook {\n        this.book_cover_color = book_cover_color;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getFabrics(): Array<Fabric> {\n        return this.bookFabrics;\n    }\n\n    /**\n     * @param fabric\n     * @return FabricBook\n     */\n    public setFabrics(fabric: Fabric): FabricBook {\n        this.bookFabrics.push(fabric);\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getConsultant(): Consultant {\n        return this.bookOwner;\n    }\n\n    /**\n     * @param fabrics owner\n     * @return FabricBook\n     */\n    public setConsultant(bookOwner: Consultant): FabricBook {\n        this.bookOwner = bookOwner;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getCategory(): FabricBookCategory {\n        return this.bookCategory;\n    }\n\n    /**\n     * @param fabrics owner\n     * @return FabricBookCategory\n     */\n    public setCategory(bookCategory: FabricBookCategory): FabricBook {\n        this.bookCategory = bookCategory;\n        return this;\n    }\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\n\nimport { FabricBook } from './FabricBook';\n\nexport class FabricBookCategory extends InstanceAbstract implements InstanceInterface {\n\n\t/**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n    /**\n     * @var number\n     */\n    private id: number = 0;\n\n    /**\n     * @var string\n     */\n    private title: string = '';\n\n    /**\n     * @var string\n     */\n    private slug: string = '';\n\n    /**\n     * @var number\n     */\n    private order: number = 0;\n\n\n    /**\n     * @var number\n     */\n    private parent_fabric_book_category_id: number = 0;\n\n    /**\n     * @var boolean\n     */\n    private can_have_child: boolean = false;\n\n    /**\n     * @var boolean\n     */\n    private can_have_user_books: boolean = false;\n\n\n    /** ====== Relationships ====== */\n    /**\n     * These are a list of relationships that will be searched\n     * for in any raw data passed to the constructor of a Fabric\n     * instance. From there it will try to populate these \n     * relationships with instances of the relationship.\n     *\n     * See InstanceAbstract for an explanation of the format\n     * below\n     * @type {string[]}\n     */\n\n    public relationships: { [index: string]: string} = {\n        'fabricBook': 'books'\n    }\n\n\n    /**\n     * Each category can has multiple books, this property is an array\n     * of FabricBook instances in this FabricBookCategory\n     * @type {Array<FabricBook>}\n     */\n    private categoryBooks: Array<FabricBook> = [] as Array<FabricBook>;\n\n    /**\n     * @return number\n     */\n    public getId(): number {\n        return this.id;\n    }\n\n    /**\n     * @param {number} id\n     * @return FabricBookCategory\n     */\n    public setId(id: number): FabricBookCategory {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitle(): string {\n        return this.title;\n    }\n\n    /**\n     * @param {string} title\n     * @return FabricBookCategory\n     */\n    public setTitle(title: string): FabricBookCategory {\n        this.title = title;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getSlug(): string {\n        return this.slug;\n    }\n\n    /**\n     * @param {string} slug\n     * @return FabricBookCategory\n     */\n    public setSlug(slug: string): FabricBookCategory {\n        this.slug = slug;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getOrder(): number {\n        return this.order;\n    }\n\n    /**\n     * @param {number} order\n     * @return FabricBookCategory\n     */\n    public setOrder(order: number): FabricBookCategory {\n        this.order = order;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getParentFabricBookCategoryId(): number {\n        return this.parent_fabric_book_category_id;\n    }\n\n    /**\n     * @param {number} parent_fabric_book_category_id\n     * @return FabricBookCategory\n     */\n    public setParentFabricBookCategoryId(parent_fabric_book_category_id: number): FabricBookCategory {\n        this.parent_fabric_book_category_id = parent_fabric_book_category_id;\n        return this;\n    }\n\n    /**\n     * @return boolean\n     */\n    public getCanHaveChild(): boolean {\n        // Because MySQL store boolean as 0,1, but we need real boolean\n        return !!(this.can_have_child);\n    }\n\n    /**\n     * @param {boolean} can_have_child\n     * @return FabricBookCategory\n     */\n    public setCanHaveChild(can_have_child: boolean): FabricBookCategory {\n        this.can_have_child = can_have_child;\n        return this;\n    }\n\n    /**\n     * @return boolean\n     */\n    public getCanHaveUserBooks(): boolean {\n        // Because MySQL store boolean as 0,1, but we need real boolean\n        return !!(this.can_have_user_books);\n    }\n\n    /**\n     * @param {boolean} can_have_user_books\n     * @return FabricBookCategory\n     */\n    public setCanHaveUserBooks(can_have_user_books: boolean): FabricBookCategory {\n        this.can_have_user_books = can_have_user_books;\n        return this;\n    }\n\n    /**\n     * @return Array<FabricBook>\n     */\n    public getBooks(): Array<FabricBook> {\n        return this.categoryBooks;\n    }\n\n    /**\n     * @param {FabricBook} book\n     * @return FabricBookCategory\n     */\n    public setBooks(book: FabricBook): FabricBookCategory {\n        this.categoryBooks.push(book);\n        return this;\n    }\n\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\n\nexport class Consultant extends InstanceAbstract implements InstanceInterface {\n\n\t/**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n    /** ====== Class Properties ====== */\n\n    /**\n     * @var number\n     */\n    private id: number = 0;\n\n    /**\n     * @var string\n     */\n    private first_name: string = '';\n\n    /**\n     * @var string\n     */\n    private last_name: string = '';\n\n    /** ====== Accessors and Mutators ====== */\n\n    /**\n     * @return number\n     */\n    public getId(): number {\n        return this.id;\n    }\n\n    /**\n     * @param number\n     * @return Consultant\n     */\n    public setId(id: number): Consultant {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getFirstName(): string {\n        return this.first_name;\n    }\n\n    /**\n     * @param string title_en\n     * @return Consultant\n     */\n    public setFirstName(first_name: string): Consultant {\n        this.first_name = first_name;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getLastName(): string {\n        return this.last_name;\n    }\n\n    /**\n     * @param string title_en\n     * @return Consultant\n     */\n    public setLastName(last_name: string): Consultant {\n        this.last_name = last_name;\n        return this;\n    }\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\n\nexport type FabricImageType = 'konfigurator_base' | 'konfigurator_swatch' | 'konfigurator_contrast' | 'konfigurator_collar' \n            | 'backend' | 'thumbnail' | 'client_shop' | 'main' \n            | 'mannequin' | 'flatlay' | 'into_collar' | 'fabric_on_roll' | 'fabric_with_wrinkles' | 'tile';\n\nexport class FabricImage extends InstanceAbstract implements InstanceInterface {\n\n    /**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n    /**\n     * @type {number}\n     */\n    private id: number = 0;\n\n    /**\n     * @type {number}\n     */\n    private fabric_id: number = 0;\n\n    /**\n     * @type {FabricImageType}\n     */\n    private type: FabricImageType = 'main';\n\n    /**\n     * @type {string}\n     */\n    private image_url: string = '';\n\n    /**\n     * @type {string}\n     */\n    private variant: string = '';\n\n    /**\n     * @type {string}\n     */\n    private created_at: string = '';\n\n    /**\n     * @type {string}\n     */\n    private updated_at: string = '';\n\n    /**\n     * @return {number}\n     */\n    public getId(): number {\n        return this.id;\n    }\n\n    /**\n     * @param  {number}} id\n     * @return {FabricImage}\n     */\n    public setId(id: number): FabricImage {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * @return {number}\n     */\n    public getFabricId(): number {\n        return this.fabric_id;\n    }\n\n    /**\n     * @param  {number} fabric_id\n     * @return {FabricImage}\n     */\n    public setFabricId(fabric_id: number): FabricImage {\n        this.fabric_id = fabric_id;\n        return this;\n    }\n\n    /**\n     * @return {FabricImageType}\n     */\n    public getType(): FabricImageType {\n        return this.type;\n    }\n\n    /**\n     * @param  {FabricImageType} type\n     * @return {FabricImage}         \n     */\n    public setType(type: FabricImageType): FabricImage {\n        this.type = type;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getImageUrl(): string {\n        return this.image_url;\n    }\n\n    /**\n     * @param  {string} image_url\n     * @return {FabricImage}          \n     */\n    public setImageUrl(image_url: string): FabricImage {\n        this.image_url = image_url;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getVariant(): string {\n        return this.variant;\n    }\n\n    /**\n     * @param  {string} variant\n     * @return {FabricImage}          \n     */\n    public setVariant(variant: string): FabricImage {\n        this.variant = variant;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getCreatedAt(): string {\n        return this.created_at;\n    }\n\n    /**\n     * @param  {string} created_at\n     * @return {FabricImage}           \n     */\n    public setCreatedAt(created_at: string): FabricImage {\n        this.created_at = created_at;\n        return this;\n    }\n\n    /**\n     * @return {string}\n     */\n    public getUpdatedAt(): string {\n        return this.updated_at;\n    }\n\n    /**\n     * @param  {string} updated_at\n     * @return {FabricImage}\n     */\n    public setUpdatedAt(updated_at: string): FabricImage {\n        this.updated_at = updated_at;\n        return this;\n    }\n    \n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\nimport { ShirtBootstrapConfig, BootstrapShirtActionData } from '../gallery';\n\n\nexport class ShirtBootstrapData extends InstanceAbstract implements InstanceInterface {\n\n\t/**\n     * List of data used to create the advanced filters of the \n     * shirt gallery\n\t * @type {ShirtBootstrapConfig}\n\t */\n\tprivate configs: ShirtBootstrapConfig = {} as ShirtBootstrapConfig;\n\n\t/**\n\t * List of liked and wishlisted shirts for the current \n\t * user\n\t * @type {BootstrapShirtActionData}\n\t */\n\tprivate user_actions: BootstrapShirtActionData = {} as BootstrapShirtActionData;\n\n\t/**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n    /**\n     * @return {ShirtBootstrapConfig}\n     */ \n\tpublic getConfigs(): ShirtBootstrapConfig {\n\t\treturn this.configs;\n\t}\n\n\t/**\n\t * @param {ShirtBootstrapData}\n\t * @return {ShirtBootstrapData}\n\t */ \n\tpublic setConfigs(configs: ShirtBootstrapConfig): ShirtBootstrapData {\n\t\tthis.configs = configs\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {BootstrapShirtActionData}\n\t */ \n\tpublic getUserActions(): BootstrapShirtActionData {\n\t\treturn this.user_actions;\n\t}\n\n\t/**\n\t * @param {BootstrapShirtActionData}\n\t * @return {ShirtBootstrapData}\n\t */ \n\tpublic setUserActions(user_actions: BootstrapShirtActionData): ShirtBootstrapData {\n\t\tthis.user_actions = user_actions;\n\t\treturn this;\n\t}\n\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\nimport { FabricPattern, FabricType } from './Fabric';\nimport { ThreadColor } from './ThreadColor';\nimport { ButtonColor } from './ButtonColor';\nimport { ShirtImage } from './ShirtImage';\n\n/**\n * Abstract Instance class with hydrator methods\n * @package Befeni\\FabricApi\n * @subpackage Instance\n * @author  Husain Fazel <me@husainfazel.com>\n */\nexport class ShirtGalleryItem extends InstanceAbstract implements InstanceInterface {\n\n\t/**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n\t/** ====== Class Properties ====== */\n\n\t/**\n\t * @type {number}\n\t */ \n\tprivate id: number = 0;\n\n\t/**\n\t * @type {Date}\n\t */ \n\tprivate gallery_added_date: Date = new Date();\n\n\t/**\n\t * @type {string}\n\t */ \n\tprivate gender: string = '';\n\n\t/**\n\t * @type {number}\n\t */ \n\tprivate thread_color_id: number = 0;\n\n\t/**\n\t * @type {number}\n\t */ \n\tprivate button_color_id: number = 0;\n\n\t/**\n\t * @type {string}\n\t */\n\tprivate fabric_name: string = '';\n\n\t/**\n\t * @type {string}\n\t */\n\tprivate pattern: FabricPattern = 'solid';\n\n\t/**\n\t * @type {string}\n\t */\n\tprivate fabric_type: FabricType = 'Main';\n\n\t/**\n\t * @type {number}\n\t */ \n\tprivate likes: number = 0;\n\n\t/**\n\t * @type {number}\n\t */ \n\tprivate wishlists: number = 0;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tprivate has_contrast: boolean = false;\n\n\t/**\n\t * {\n\t * \t   contrast_collar_fabric: \"\",\n\t * \t   contrast_cuff_fabric: \"\"\n\t * }\n\t */ \n\tprivate other_fabrics: object = {};\n\n\t/**\n\t * @type {string}\n\t */\n\tprivate shirt_title: string = '';\n\n\t/**\n\t * @type {string}\n\t */\n\tprivate fabric_composition_label: string = '';\n\n\t/**\n\t * @type {object}\n\t * \n\t * {\n\t *     value: 25,\n\t * \t   reason: \"male\"\n\t * }\n\t */ \n\tprivate price: object = {};\n\n\tprivate is_sotw: boolean = false;\n\n\tprivate is_current_sotw: boolean = false;\n\n\t/**\n\t * @type {object}\n\t * \n\t * {\n\t *     start: 25,\n\t * \t   end: \"male\"\n\t * }\n\t */ \n\tprivate sotw_dates: object = {};\n\n\t/** ====== Relationships ====== */\n\n\t/**\n     * These are a list of relationships that will be searched\n     * for in any raw data passed to the constructor of a \n     * ShirtGalleryItem instance. From there it will try to \n     * populate these relationships with instances of the \n     * relationship.\n     *\n     * See InstanceAbstract for an explanation of the format\n     * below\n     * @type {string[]}\n     */\n    public relationships: { [index: string]: string} = {\n    \t'threadColor': 'thread',\n    \t'buttonColor': 'button',\n    \t'shirtImage': 'image_variants'\n    }\n\n    /**\n     * Each ShirtGalleryItem has an instance of ThreadColor,\n     * this property stores a reference to that object.\n     * @type {ThreadColor}\n     */\n    private threadColor: ThreadColor = {} as ThreadColor;\n\n    /**\n     * Each ShirtGalleryItem has an instance of ButtonColor,\n     * this property stores a reference to that object.\n     * @type {ButtonColor}\n     */\n    private buttonColor: ButtonColor = {} as ButtonColor;\n\n    /**\n     * Each ShirtGalleryItem has multiple images in differnt sizes,\n     * this property is an array of ShirtImage instances belonging \n     * to this ShirtGalleryItem\n     * @type {Array<ShirtImage>}\n     */\n    private shirtImages: Array<ShirtImage> = [] as Array<ShirtImage>;\n\n    /**\n     * @return {ThreadColor}\n     */\n    public getThread(): ThreadColor {\n        return this.threadColor;\n    }\n\n    /**\n     * @param  {ThreadColor} threadColor\n     * @return {ShirtGalleryItem}\n     */\n    public setThread(threadColor: ThreadColor): ShirtGalleryItem {\n        this.threadColor = threadColor;\n        return this;\n    }\n\n    /**\n     * @return {ThreadColor}\n     */\n    public getButton(): ButtonColor {\n        return this.buttonColor;\n    }\n\n    /**\n     * @param  {ButtonColor} buttonColor\n     * @return {ShirtGalleryItem}\n     */\n    public setButton(buttonColor: ButtonColor): ShirtGalleryItem {\n        this.buttonColor = buttonColor;\n        return this;\n    }\n\n    /**\n     * @return {Array<ShirtImage>}\n     */\n    public getImageVariants(): Array<ShirtImage> {\n        return this.shirtImages;\n    }\n\n    /**\n     * @param  {ShirtImage} image\n     * @return {Fabric}           \n     */\n    public setImageVariants(image: ShirtImage): ShirtGalleryItem {\n        this.shirtImages.push(image)\n        return this;\n    }\n\n    /**\n     * @param  {ShirtImage) => ShirtImage} callback\n     * @return {Array<ShirtImage>}\n     */\n    public getImageVariant(callback: (item: ShirtImage) => ShirtImage): Array<ShirtImage> {\n        return this.shirtImages.filter(callback);\n    }\n\n\t\n\t/** ====== Accessors and Mutators ====== */\n\n    /**\n     * @return {number}\n     */\n\tpublic getId(): number\n\t{\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * @param {number}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setId(id: number): ShirtGalleryItem\n\t{\n\t\tthis.id = id;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {Date}\n\t */ \n\tpublic getGalleryAddedDate(): Date\n\t{\n\t\treturn this.gallery_added_date;\n\t}\n\n\t/**\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setGalleryAddedDate(gallery_added_date: string): ShirtGalleryItem\n\t{\n\t\tthis.gallery_added_date = new Date(gallery_added_date);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string}\n\t */ \n\tpublic getGender(): string\n\t{\n\t\treturn this.gender;\n\t}\n\n\t/**\n\t * @param {string}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setGender(gender: string): ShirtGalleryItem\n\t{\n\t\tthis.gender = gender;\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * @param {number}\n\t */ \n\tpublic getThreadColorId(): number\n\t{\n\t\treturn this.thread_color_id;\n\t}\n\n\t/**\n\t * @param {number}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setThreadColorId(thread_color_id: number): ShirtGalleryItem\n\t{\n\t\tthis.thread_color_id = thread_color_id;\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * @return {number}\n\t */ \n\tpublic getButtonColorId(): number\n\t{\n\t\treturn this.button_color_id;\n\t}\n\n\t/**\n\t * @param {number}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setButtonColorId(button_color_id: number): ShirtGalleryItem\n\t{\n\t\tthis.button_color_id = button_color_id;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string}\n\t */ \n\tpublic getFabricName(): string\n\t{\n\t\treturn this.fabric_name;\n\t}\n\n\t/**\n\t * @param {string}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setFabricName(fabric_name: string): ShirtGalleryItem\n\t{\n\t\tthis.fabric_name = fabric_name;\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * @return {FabricPattern}\n\t */ \n\tpublic getPattern(): FabricPattern\n\t{\n\t\treturn this.pattern;\n\t}\n\n\t/**\n\t * @param {FabricPattern}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setPattern(pattern: FabricPattern): ShirtGalleryItem\n\t{\n\t\tthis.pattern = pattern;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {FabricType}\n\t */ \n\tpublic getFabricType(): FabricType\n\t{\n\t\treturn this.fabric_type;\n\t}\n\n\t/**\n\t * @param {FabricType}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setFabricType(fabric_type: FabricType): ShirtGalleryItem\n\t{\n\t\tthis.fabric_type = fabric_type;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {number}\n\t */ \n\tpublic getLikes(): number\n\t{\n\t\treturn this.likes;\n\t}\n\n\t/**\n\t * @param {number}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setLikes(likes: number): ShirtGalleryItem\n\t{\n\t\tthis.likes = likes;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {number}\n\t */ \n\tpublic getWishlists(): number\n\t{\n\t\treturn this.wishlists;\n\t}\n\n\t/**\n\t * @param {number}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setWishlists(wishlists: number): ShirtGalleryItem\n\t{\n\t\tthis.wishlists = wishlists;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */ \n\tpublic getHasContrast(): boolean\n\t{\n\t\treturn this.has_contrast;\n\t}\n\n\t/**\n\t * @param {boolean}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setHasContrast(has_contrast: boolean): ShirtGalleryItem\n\t{\n\t\tthis.has_contrast = has_contrast;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {object}\n\t */ \n\tpublic getOtherFabrics(): object\n\t{\n\t\treturn this.other_fabrics;\n\t}\n\n\t/**\n\t * @param {object}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setOtherFabrics(other_fabrics: object): ShirtGalleryItem\n\t{\n\t\tthis.other_fabrics = other_fabrics;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string}\n\t */ \n\tpublic getShirtTitle(): string\n\t{\n\t\treturn this.shirt_title;\n\t}\n\n\t/**\n\t * @param {string}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setShirtTitle(shirt_title: string) : ShirtGalleryItem\n\t{\n\t\tthis.shirt_title = shirt_title;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string}\n\t */ \n\tpublic getFabricCompositionLabel(): string\n\t{\n\t\treturn this.fabric_composition_label;\n\t}\n\n\t/**\n\t * @param {string}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setFabricCompositionLabel(fabric_composition_label: string): ShirtGalleryItem\n\t{\n\t\tthis.fabric_composition_label = fabric_composition_label;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {object}\n\t */ \n\tpublic getPrice(): object {\n\t\treturn this.price;\n\t}\n\n\t/**\n\t * @param {object}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setPrice(price: object): ShirtGalleryItem {\n\t\tthis.price = price;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */ \n\tpublic getIsSotw(): boolean {\n\t\treturn this.is_sotw;\n\t}\n\n\t/**\n\t * @param {boolean}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setIsSotw(is_sotw: boolean): ShirtGalleryItem {\n\t\tthis.is_sotw = is_sotw;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */\n\tpublic getIsCurrentSotw(): boolean {\n\t\treturn this.is_current_sotw;\n\t}\n\n\t/**\n\t * @param {boolean}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setIsCurrentSotw(is_current_sotw: boolean): ShirtGalleryItem {\n\t\tthis.is_current_sotw = is_current_sotw;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {object}\n\t */ \n\tpublic getSotwDates(): object {\n\t\treturn this.sotw_dates;\n\t}\n\n\t/**\n\t * @param {object}\n\t * @return {ShirtGalleryItem}\n\t */ \n\tpublic setSotwDates(sotw_dates: object): ShirtGalleryItem {\n\t\tthis.sotw_dates = sotw_dates;\n\t\treturn this;\n\t}\n\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\n\nexport type ShirtImageSize = 'main' | 'mobile' | 'thumbnail'; \n\nexport class ShirtImage extends InstanceAbstract implements InstanceInterface {\n\n\t/**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n\t/**\n\t * @type {number}\n\t */ \n\tprivate variant: number = 0;\n\n\t/**\n\t * @type {ShirtImageSize}\n\t */ \n\tprivate size: ShirtImageSize = 'main';\n\n\t/**\n\t * @type {string}\n\t */ \n\tprivate image_url: string = '';\t\n\n\n\t/**\n\t * @return {number}\n\t */ \n\tpublic getVariant(): number {\n\t\treturn this.variant;\n\t}\n\n\t/**\n\t * @param {number}\n\t * @return {ShirtImage}\n\t */ \n\tpublic setVariant(variant: number): ShirtImage {\n\t\tthis.variant = variant;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {ShirtImageSize}\n\t */ \n\tpublic getSize(): ShirtImageSize {\n\t\treturn this.size;\n\t}\n\n\t/**\n\t * @param {ShirtImageSize} size\n\t * @return {ShirtImage}\n\t */ \n\tpublic setSize(size: ShirtImageSize): ShirtImage {\n\t\tthis.size = size;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string}\n\t */ \n\tpublic getImageUrl(): string {\n\t\treturn this.image_url;\n\t}\n\n\t/**\n\t * @param {string} image_url\n\t * @return {ShirtImage}\n\t */ \n\tpublic setImageUrl(image_url: string): ShirtImage {\n\t\tthis.image_url = image_url;\n\t\treturn this;\n\t}\n}","import { InstanceAbstract, InstanceInterface } from './InstanceAbstract';\n\nexport class ThreadColor extends InstanceAbstract implements InstanceInterface {\n\n    /**\n     * Constructor\n     * @param {object} rawData\n     */\n    constructor(rawData?: object) {\n        super();\n        if(rawData) {\n            this.importFromObj(rawData, this);\n        }\n    }\n\n\t/** ====== Class Properties ====== */\n\n\t/**\n     * @var number\n     */\n\tprivate id: number = 0;\n\n    /**\n     * @var string\n     */\n    private legacy_id: string = '';\n\n    /**\n     * @var string\n     */\n    private title_en: string = '';\n\n    /**\n     * @var string\n     */\n    private title_de: string = '';\n\n    /**\n     * @var string\n     */\n    private title_th: string = '';\n\n    /**\n     * @var string\n     */\n    private title_translatable: string = '';\n\n    /**\n     * @var string\n     */\n    private hex_code: string = '';\n\n    /**\n     * @var number\n     */\n    private internal_number: number = 0;\n\n    /**\n     * @var boolean\n     */\n    private embroidery_only: boolean = false;\n\n    /**\n     * @var boolean\n     */\n    private chooseable: boolean = false;\n\n    /**\n     * @var string\n     */\n    private created_at: string = '';\n\n    /**\n     * @var string\n     */\n    private updated_at: string = '';\n\n\n    /** ====== Accessors and Mutators ====== */\n\n    /**\n     * @return number\n     */\n    public getId(): number {\n        return this.id;\n    }\n\n    /**\n     * @param number\n     * @return ThreadColor\n     */\n    public setId(id: number): ThreadColor {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getLegacyId(): string {\n        return this.legacy_id;\n    }\n\n    /**\n     * @param string\n     * @return ThreadColor\n     */\n    public setLegacyId(legacyId: string): ThreadColor {\n        this.legacy_id = legacyId;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitleEn(): string {\n        return this.title_en;\n    }\n\n    /**\n     * @param string title_en\n     * @return ThreadColor\n     */\n    public setTitleEn(title_en: string): ThreadColor {\n        this.title_en = title_en;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitleDe(): string {\n        return this.title_de;\n    }\n\n    /**\n     * @param string title_de\n     * @return ThreadColor\n     */\n    public setTitleDe(title_de: string): ThreadColor {\n        this.title_de = title_de;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitleTh(): string {\n        return this.title_th;\n    }\n\n    /**\n     * @param string title_th\n     * @return ThreadColor\n     */\n    public setTitleTh(title_th: string): ThreadColor {\n        this.title_th = title_th;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getTitleTranslatable(): string {\n        return this.title_translatable;\n    }\n\n    /**\n     * @param string title_translatable\n     * @return ThreadColor\n     */\n    public setTitleTranslatable(title_translatable: string): ThreadColor {\n        this.title_translatable = title_translatable;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getHexCode(): string {\n        return this.hex_code;\n    }\n\n    /**\n     * @param string hex_code\n     * @return self\n     */\n    public setHexCode(hex_code: string): ThreadColor {\n        this.hex_code = hex_code;\n        return this;\n    }\n\n    /**\n     * @return number\n     */\n    public getInternalNumber(): number {\n        return this.internal_number;\n    }\n\n    /**\n     * @param number internal_number\n     * @return ThreadColor\n     */\n    public setInternalNumber(internal_number: number): ThreadColor {\n        this.internal_number = internal_number;\n        return this;\n    }\n\n    /**\n     * @return boolean\n     */\n    public getEmbroideryOnly(): boolean {\n        return this.embroidery_only;\n    }\n\n    /**\n     * @param boolean embroidery_only\n     * @return ThreadColor\n     */\n    public setEmbroideryOnly(embroidery_only: boolean): ThreadColor {\n        this.embroidery_only = embroidery_only;\n        return this;\n    }\n\n    /**\n     * @return boolean\n     */\n    public getChooseable(): boolean {\n        return this.chooseable;\n    }\n\n    /**\n     * @param string chooseable\n     * @return ThreadColor\n     */\n    public setChooseable(chooseable: boolean): ThreadColor {\n        this.chooseable = chooseable;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getCreatedAt(): string {\n        return this.created_at;\n    }\n\n    /**\n     * @param string created_at\n     * @return ThreadColor\n     */\n    public setCreatedAt(created_at: string): ThreadColor {\n        this.created_at = created_at;\n        return this;\n    }\n\n    /**\n     * @return string\n     */\n    public getUpdatedAt(): string {\n        return this.updated_at;\n    }\n\n    /**\n     * @param string updated_at\n     * @return ThreadColor\n     */\n    public setUpdatedAt(updated_at: string): ThreadColor {\n        this.updated_at = updated_at;\n        return this;\n    }\n\n    /**\n     * Get the translated button title\n     * @return string\n     */\n    public getTranslatedTitle(language: \"EN\" | \"TH\" | \"DE\"): string {\n        let title = this.getTitleDe();\n        switch (language) {\n            case \"EN\":\n                title = this.getTitleEn();\n                break;\n            case \"TH\":\n                title = this.getTitleTh();\n                break;\n            case \"DE\":\n            default:\n                title = this.getTitleDe();\n                break;\n        }\n\n        return title;\n    }\n\n}","import { ThreadColor } from './ThreadColor';\n\nexport class EmbroideryThreadColor extends ThreadColor {\n\tconstructor(rawData?: object) {\n\t\tsuper(rawData);\n\t}\n}","import Base from '../base'\nimport Dictionary from '../collection';\nimport { GenericResult, ResultType } from '../utils';\nimport { ThreadColor } from '../instance';\nimport { ThreadBuilder } from '../builder';\n\nexport class ThreadTrait extends Base {\n\n    /**\n     * Get a list of all threads\n     * @param {string} orderField\n     * @param {string} orderDirection\n     * @return {Promise<Dictionary<ThreadColor>>} \n     */\n    async getAllThreads(orderField: string = 'order_color', orderDirection: 'asc' | 'desc' = 'asc'): Promise<Dictionary<ThreadColor>> {\n        const collection = new Dictionary<ThreadColor>();\n\n        const builder = <ThreadBuilder>this.getBuilder('ThreadBuilder')\n            .select(['id', 'legacy_id', 'title_en', 'title_de', 'title_th', 'title_translatable', \n                'internal_number', 'embroidery_only', 'chooseable', 'created_at', 'updated_at'])\n            .sortBy(orderField, orderDirection);\n\n        const results = await builder.execute(\"get\", 'fabrics/thread_colors', {});\n\n        if(!results) {\n            return collection;\n        } \n\n        const resArr = <ResultType>results.getResults();\n        var count = 1;\n        (resArr.data as Object[]).map(result => {\n            collection.addItem(count.toString(), <ThreadColor>ThreadColor.createFromRaw(result, 'ThreadColor'));\n            count++;\n        })\n\n        return collection;\n    }\n\n    /**\n     * Get a single thread color\n     * @param {number} id\n     * @return {Promise<ThreadColor>}\n     */ \n    async getThread(id:number): Promise<ThreadColor> {\n        const builder = <ThreadBuilder>this.getBuilder('ThreadBuilder')\n            .select(['id', 'title_en', 'title_th',\n                'title_de', 'title_translatable', 'internal_number', 'order_color']);\n\n        const results = await builder.execute(\"get\", 'fabrics/thread_colors/' + id, {});\n\n        if(!results) {\n            throw new Error('Unable to find thread');\n        }\n        const result = <ResultType>results.getResults();\n        return <ThreadColor>ThreadColor.createFromRaw(result.data, 'ThreadColor');\n    }\n}\n\n\n","import Base from '../base'\nimport Dictionary from '../collection';\nimport { GenericResult, ResultType } from '../utils';\nimport { ButtonColor } from '../instance';\nimport { ButtonBuilder } from '../builder';\n\nexport class ButtonTrait extends Base {\n\n    /**\n     * Get a list of all buttons\n     * @param {string} orderField\n     * @param {string} orderDirection\n     * @return {Promise<Dictionary<ButtonColor>>} \n     */\n    async getAllButtons(orderField: string = 'order_color', orderDirection: 'asc' | 'desc' = 'asc'): Promise<Dictionary<ButtonColor>> {\n        const collection = new Dictionary<ButtonColor>();\n\n        const builder = <ButtonBuilder>this.getBuilder('ButtonBuilder')\n            .select(['id', 'title_en', 'title_th',\n                'title_de', 'title_translatable', 'internal_number', 'order_color'])\n            .sortBy(orderField, orderDirection);\n\n        const results = await builder.execute(\"get\", 'fabrics/button_colors', {});\n\n        if(!results) {\n            return collection;\n        } \n\n        const resArr = <ResultType>results.getResults();\n        var count = 1;\n        (resArr.data as Object[]).map(result => {\n            collection.addItem(count.toString(), <ButtonColor>ButtonColor.createFromRaw(result, 'ButtonColor'));\n            count++;\n        });\n\n        return collection;\n    }\n\n    /**\n     * Get a single button color\n     * @param {number} id\n     * @return {Promise<ButtonColor>}\n     */ \n    async getButton(id:number): Promise<ButtonColor> {\n        const builder = <ButtonBuilder>this.getBuilder('ButtonBuilder')\n            .select(['id', 'title_en', 'title_th',\n                'title_de', 'title_translatable', 'internal_number', 'order_color']);\n\n        const results = await builder.execute(\"get\", 'fabrics/button_colors/' + id, {});\n\n        if(!results) {\n            throw new Error('Unable to find button');\n        }\n        const result = <ResultType>results.getResults();\n        return <ButtonColor>ButtonColor.createFromRaw(result.data, 'ButtonColor');\n    }\n}\n\n\n","import Base from '../base'\nimport Dictionary from '../collection';\nimport { GenericResult, CollectionResultType, ResultType } from '../utils';\nimport { Fabric } from '../instance';\nimport { FabricBuilder } from '../builder';\n\n\nexport type FabricSearchFilters = {\n    name: string | null,\n    statuses: string[],\n    familyIds: number[],\n    bestSellingPeriod: number | null,\n    releaseDatePeriod: number | null,\n    fibers: string[],\n    patterns: string[],\n    withInventory: boolean\n};\n\nexport class FabricTrait extends Base {\n\n    /**\n     * Returns all the fabrics in our database according to the status\n     * criteria provided\n     * @param  {string[]} select\n     * @param  {string[]} statuses\n     * @param  {string} orderField\n     * @param  {'asc' | 'desc'} orderDirection    \n     * @param  {boolean = false} excludeSeasonalFabrics\n     * @param  {boolean = false} cottonOnly\n     * @param  {boolean = false} excludeSpecials   \n     * @param  {boolean = false} removeLadyFabrics \n     * @return {Promise}\n     */\n    public async getAllFabrics(select: string[], statuses: string[], orderField: string, \n    \torderDirection: 'asc' | 'desc', excludeSeasonalFabrics: boolean = false, \n    \tcottonOnly: boolean = false, excludeSpecials: boolean = true, \n    \tremoveLadyFabrics: boolean = false, withInventory: boolean = false): Promise<Dictionary<Fabric>> {\n\n    \tlet builder = <FabricBuilder>this.getBuilder('FabricBuilder')\n    \t\t.select(select)\n    \t\t.whereEquals('status', statuses)\n    \t\t.addRelationship('fabricCompositionLabel')\n    \t\t.addRelationship('images')\n    \t\t.sortBy(orderField, orderDirection);\n\n    \tif(excludeSeasonalFabrics) {\n    \t\tbuilder.excludeSeasonalFabrics();\n    \t}\n\n    \tif(cottonOnly) {\n    \t\tbuilder.includeCottonOnlyFabrics();\n    \t}\n\n    \tif(removeLadyFabrics) {\n    \t\tbuilder.removeLadyFabrics();\n    \t}\n\n    \tif(withInventory) {\n            builder.withInventory();\n        }\n\n        let collection = new Dictionary<Fabric>();\n        const results = await builder.execute(\"get\", 'fabrics', {});\n        if(!results) {\n            return collection;\n        } \n\n        const resArr = <CollectionResultType>results.getResults();\n\n        var count = 1;\n        resArr.data.collection.map(result => {\n            collection.addItem(count.toString(), <Fabric>Fabric.createFromRaw(result, 'Fabric'));\n            count++;\n        })\n\n        if(excludeSpecials) {\n            collection = this._excludeSpecialFabrics(collection);\n        }\n\n        return collection;\n    }\n\n    /**\n     * Returns a list of Fabric ID => Names that can be used \n     * to populate dropdowns\n     * @param  {string[]}   statuses\n     * @param  {string ='name'} orderField            \n     * @param  {'asc'|'desc' = 'asc'} orderDirection\n     * @param  {boolean = false} excludeSeasonalFabrics\n     * @param  {boolean = false} cottonOnly            \n     * @param  {boolean = true} excludeSpecials       \n     * @param  {boolean = false} removeLadyFabrics     \n     * @return {Promise}            \n     */\n    public async getFabricsForDropdown(statuses: string[], orderField: string = 'name', \n        orderDirection: 'asc' | 'desc' = 'asc', excludeSeasonalFabrics: boolean = false, \n        cottonOnly: boolean = false, excludeSpecials: boolean = true, \n        removeLadyFabrics: boolean = false): Promise<Dictionary<Fabric>> {\n\n        let builder = <FabricBuilder>this.getBuilder('FabricBuilder')\n            .select(['id', 'name', 'status', 'type', 'is_shirt_fabric'])\n            .whereEquals('status', statuses)\n            .sortBy(orderField, orderDirection);\n\n        if(excludeSeasonalFabrics) {\n            builder.excludeSeasonalFabrics();\n        }\n\n        if(cottonOnly) {\n            builder.includeCottonOnlyFabrics();\n        }\n\n        if(removeLadyFabrics) {\n            builder.removeLadyFabrics();\n        }\n\n        let collection = new Dictionary<Fabric>();\n        const results = await builder.execute(\"get\", 'fabrics', {});\n        if(!results) {\n            return collection;\n        } \n\n        const resArr = <CollectionResultType>results.getResults();\n\n        var count = 1;\n        resArr.data.collection.map(result => {\n            collection.addItem(count.toString(), <Fabric>Fabric.createFromRaw(result, 'Fabric'));\n            count++;\n        })\n\n        if(excludeSpecials) {\n            collection = this._excludeSpecialFabrics(collection);\n        }\n\n        return collection;\n    }\n\n    /**\n     * Same as the function above but this also adds the images relationship\n     * to the result\n     * @param  {string[]}   statuses\n     * @param  {string ='name'} orderField            \n     * @param  {'asc'|'desc' = 'asc'} orderDirection\n     * @param  {boolean = false} excludeSeasonalFabrics\n     * @param  {boolean = false} cottonOnly            \n     * @param  {boolean = true} excludeSpecials       \n     * @param  {boolean = false} removeLadyFabrics     \n     * @return {Promise}            \n     */\n    public async getFabricsListWithImages(statuses: string[], orderField: string = 'name', \n        orderDirection: 'asc' | 'desc' = 'asc', excludeSeasonalFabrics: boolean = false, \n        cottonOnly: boolean = false, excludeSpecials: boolean = true, \n        removeLadyFabrics: boolean = false): Promise<Dictionary<Fabric>> {\n\n        let builder = <FabricBuilder>this.getBuilder('FabricBuilder')\n            .select(['id', 'name', 'status', 'type', 'is_shirt_fabric'])\n            .whereEquals('status', statuses)\n            .addRelationship('images')\n            .sortBy(orderField, orderDirection);\n\n        if(excludeSeasonalFabrics) {\n            builder.excludeSeasonalFabrics();\n        }\n\n        if(cottonOnly) {\n            builder.includeCottonOnlyFabrics();\n        }\n\n        if(removeLadyFabrics) {\n            builder.removeLadyFabrics();\n        }\n\n        let collection = new Dictionary<Fabric>();\n        const results = await builder.execute(\"get\", 'fabrics', {});\n        if(!results) {\n            return collection;\n        } \n\n        const resArr = <CollectionResultType>results.getResults();\n\n        var count = 1;\n        resArr.data.collection.map(result => {\n            collection.addItem(count.toString(), <Fabric>Fabric.createFromRaw(result, 'Fabric'));\n            count++;\n        })\n\n        if(excludeSpecials) {\n            collection = this._excludeSpecialFabrics(collection);\n        }\n\n        return collection;\n\n    }\n\n    /**\n     * This method get a unique fabric from the list of fabric returned by the API\n     * @param {number} fabricId\n     * \n     */\n    public async getFabric(fabricId: number): Promise<Fabric|null> {\n\n        let builder = <FabricBuilder>this.getBuilder('FabricBuilder')\n            .select(['*'])\n            .whereEquals('id', fabricId)\n            .addCustomField('inventory')\n            .addRelationship('fabricCompositionLabel')\n            .addRelationship('images');\n\n        const results = await builder.execute(\"get\", 'fabrics', {});\n        if(!results) {\n            return null;\n        } \n\n        const resArr = <CollectionResultType>results.getResults();\n\n        return <Fabric>Fabric.createFromRaw(resArr.data.collection[0], 'Fabric');\n\n    }\n\n    /**\n     * Removes the special fabrics (hard coded below) from the\n     * collection\n     * @param  {Dictionary<Fabric>} coll\n     * @return {Dictionary<Fabric>}\n     */\n    private _excludeSpecialFabrics(coll: Dictionary<Fabric>): Dictionary<Fabric> {\n\n        const specialFabrics = [\n            10082, 10118, 10099, 10100, 10156, 10161, \n            10054, 10057, 10058, 10149, 10154, 10157, \n            10138, 10142, 10153, 30001, 30002, 30009, \n            10160, 10008, 10104, 10135, 10009, 10080, \n            10150, 10059, 10102, 10106, 10081, 10085, \n            10097, 10031, 10078, 10117, 10111, 10119, \n            10132, 10105, 10131, 10077\n        ];\n\n        return coll.filter((fabric) => specialFabrics.indexOf(fabric.getId()) === -1);\n\n    }\n\n    /**\n     * Get the data required to display the advanced filters on the fabrics page\n     * \n     * @return {Promise<ResultType>}\n     */ \n    public async getFabricPageFilterData(): Promise<ResultType> {\n        let builder = <FabricBuilder>this.getBuilder('FabricBuilder');\n        const results = await builder.execute(\"get\", 'fabrics/page-filters-data', {});\n\n        if(!results) {\n            throw new Error('Error while fetching fabric filter data');\n        }\n        return <ResultType>results.getResults();\n    }\n\n    /**\n     * Return the list of fabrics that matches the user-provided filters.\n     */ \n    public async getAllFilteredFabrics(filters: FabricSearchFilters): Promise<Dictionary<Fabric>> {\n\n\n        let builder = <FabricBuilder>this.getBuilder('FabricBuilder');\n\n        let collection = new Dictionary<Fabric>();\n        const results = await builder.execute(\"post\", 'fabrics/filtered', filters);\n        if(!results) {\n            return collection;\n        }\n\n        const resArr = <CollectionResultType>results.getResults();\n\n        var count = 1;\n        resArr.data.collection.map(result => {\n            collection.addItem(count.toString(), <Fabric>Fabric.createFromRaw(result, 'Fabric'));\n            count++;\n        })\n\n        collection = this._excludeSpecialFabrics(collection);\n        return collection;\n    }\n}","import Base from '../base';\n\nimport Dictionary, { PaginationDetails } from '../collection';\nimport { GenericResult, CollectionResultType, ExtendedCollectionResultType, ResultType } from '../utils';\nimport { Fabric, FabricBook } from '../instance';\nimport { Builder } from '../builder';\n\n\nexport type FabricBookFilters = {\n\tfabricIds: number[],\n\tcategories: [],\n\tsearchTerm: string|null,\n\tmyFavoriteOnly: boolean,\n\tmyBooksOnly: boolean,\n\tcuratedBooksOnly: boolean\n};\n\ntype FabricBookVisibility = 'public' | 'private' | 'inactive';\n\n\nexport class FabricBookTrait extends Base {\n\n\t/**\n\t * Get the list of fabric books\n\t * \n\t * @param {FabricBookFilters} filters\n\t * @param {number} consultantId\n\t * @param {number} clientId\n\t * @param {string} orderField\n\t * @param {string} orderDirection\n\t * @param {number} page\n\t * @param {number} perPage\n\t * \n\t * @return Promise<Dictionary<ShirtGalleryItem>>\n\t */ \n\tasync getFabricBooks(filters: FabricBookFilters, orderField: string, orderDirection:  'asc' | 'desc', page: number, perPage: number): Promise<Dictionary<FabricBook>>  {\n\n\t\tconst collection = new Dictionary<FabricBook>();\n\n\t\tlet builder = <Builder>this.getBuilder()\n\t\t\t.page(page).resultsPerPage(perPage)\n\t\t\t.clearSortBy()\n\t\t\t.sortBy(orderField, orderDirection);\n\n\t\tconst results = await builder.execute(\"get\", 'fabrics/book', {\n            fabrics      : filters.fabricIds.join(','),\n\t\t\tcategories\t : filters.categories.join(','),\n            term      \t : filters.searchTerm,\n            my_favorites : filters.myFavoriteOnly,\n\t\t\tmy_books\t : filters.myBooksOnly,\n\t\t\tcurated_books: filters.curatedBooksOnly\n\t\t});\n\n        if(!results) {\n            return collection;\n        } \n\n        const resArr = <ExtendedCollectionResultType>results.getResults();\n        var count = 1;\n        resArr.data.collection.map(result => {\n            collection.addItem(count.toString(), <FabricBook>FabricBook.createFromRaw(result, 'FabricBook'));\n            count++;\n        })\n\t\tcollection.setPagination(<PaginationDetails>resArr.data.pagination);\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Get the list of my books\n\t * \n\t * @param {string} orderField\n\t * @param {string} orderDirection\n\t * @param {number} page\n\t * @param {number} perPage\n\t */ \n\tasync getMyBooks(orderField: string, orderDirection:  'asc' | 'desc', page: number, perPage: number): Promise<Dictionary<FabricBook>> {\n\t\tconst collection = new Dictionary<FabricBook>();\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\n\t\tconst results = await builder.execute(\"get\", 'fabrics/book', {\n            my_books : true\n\t\t});\n\n\t\tif(!results) {\n            return collection;\n        }\n\n        const resArr = <CollectionResultType>results.getResults();\n        var count = 1;\n        resArr.data.collection.map(result => {\n            collection.addItem(count.toString(), <FabricBook>FabricBook.createFromRaw(result, 'FabricBook'));\n            count++;\n        })\n\t\tcollection.setPagination(<PaginationDetails>resArr.data.pagination);\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Get book details\n\t * \n\t * @param {number} fabricBookId\n\t */ \n\tasync fabricBookGetDetails(fabricBookId: number): Promise<FabricBook|null> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"get\", 'fabrics/book/' + fabricBookId, {});\n\n\t\tif(!result) {\n            return null;\n        }\n\n        const data = (<ResultType>result.getResults()).data;\n\n        return <FabricBook>FabricBook.createFromRaw(data, 'FabricBook');\n\t}\n\n\t/**\n\t * Get book details by slug\n\t * \n\t * @param {string} fabricBookSlug\n\t */ \n\tasync fabricBookGetDetailsBySlug(fabricBookSlug: string): Promise<FabricBook|null> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"get\", 'fabrics/book/slug/' + fabricBookSlug, {});\n\n\t\tif(!result) {\n            return null;\n        }\n\n        const data = (<ResultType>result.getResults()).data;\n\n        return <FabricBook>FabricBook.createFromRaw(data, 'FabricBook');\n\t}\n\n\t/**\n\t * Create a new book\n\t * \n\t * @param {string}  title      - The title of the book\n\t * @param {number}  categoryId - The parent category of the book\n\t * @param {FabricBookVisibility} visibility  - Tell if the book should be included in search result\n\t * @param {string}  coverColor - The cover color of the book\n\t * @param {File}    coverImage - The vover image of the book\n\t */ \n\tasync fabricBookCreate(title: string, categoryId: number, visibility: FabricBookVisibility, coverColor: string, coverImage: File|null = null, fabricIds: number[] = []): Promise<FabricBook|null> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"post\", 'fabrics/book', {\n            title      \t\t\t    : title,\n            fabric_book_category_id : categoryId,\n\t\t\tvisibility \t\t\t\t: visibility,\n            book_cover_color\t\t: coverColor,\n            image \t\t\t\t\t: coverImage,\n            fabrics \t\t\t\t: fabricIds\n\t\t});\n\n\t\tif(!result) {\n            return null;\n        }\n\n        const data = (<ResultType>result.getResults()).data;\n\n        return <FabricBook>FabricBook.createFromRaw(data, 'FabricBook');\n\t}\n\n\t/**\n\t * Update a fabric book\n\t *\n\t * @param {number}  fabricBookId - The id of the book\n\t * @param {string}  title        - The title of the book\n\t * @param {number}  categoryId   - The parent category of the book\n\t * @param {FabricBookVisibility} visibility - Tell if the book should be included in search result\n\t * @param {string}  coverColor   - The cover color of the book\n\t * @param {File}    coverImage   - The vover image of the book\n\t */\n\tasync fabricBookUpdate(fabricBookId: number, title: string, categoryId: number, visibility: FabricBookVisibility, coverColor: string, coverImage: File|null = null): Promise<FabricBook|null> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"put\", 'fabrics/book/' + fabricBookId, {\n            title      \t\t\t    : title,\n            fabric_book_category_id : categoryId,\n\t\t\tvisibility \t\t\t\t: visibility,\n            book_cover_color\t\t: coverColor,\n            image \t\t\t\t\t: coverImage\n\t\t});\n\n\t\tif(!result) {\n            return null;\n        }\n\n        const data = (<ResultType>result.getResults()).data;\n\n        return <FabricBook>FabricBook.createFromRaw(data, 'FabricBook');\n\t} \n\n\t/**\n\t * Update the cover image of the book.\n\t * \n\t * @param {number}  fabricBookId - The id of the book\n\t * @param {File}    coverImage   - The vover image of the book\n\t */ \n\tasync fabricBookUploadCover (fabricBookId: number, coverImage: File): Promise<FabricBook|null> {\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"post\", 'fabrics/book/' + fabricBookId + '/cover', {\n            image : coverImage\n\t\t});\n\n\t\tif(!result) {\n            return null;\n        }\n\n        const data = (<ResultType>result.getResults()).data;\n\n        return <FabricBook>FabricBook.createFromRaw(data, 'FabricBook');\n\t}\n\n\t/**\n\t * Delete a fabric book\n\t * \n\t * @param {number}  fabricBookId - The id of the book\n\t */\n\tasync fabricBookDelete(fabricBookId: number): Promise<boolean> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"delete\", 'fabrics/book/' + fabricBookId, {});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status === 'OK';\n\t}\n\n\t/**\n\t * Add fabrics to a book\n\t * \n\t * @param {number}  fabricBookId    - The id of the book\n\t * @param {Array[number]} fabricIds - List of fabric ids to be added to the book\n\t */ \n\tasync fabricBookAddFabrics(fabricBookId: number, fabricIds: number[]): Promise<boolean> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"post\", 'fabrics/book/' + fabricBookId + '/fabrics', {\n\t\t\tfabrics: fabricIds\n\t\t});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status == 'OK';\n\t}\n\n\t/**\n\t * Remove fabrics from a book\n\t * \n\t * @param {number}  fabricBookId    - The id of the book\n\t * @param {Array[number]} fabricIds - List of fabric ids to be removed from the book\n\t */ \n\tasync fabricBookRemoveFabrics(fabricBookId: number, fabricIds: number[]): Promise<boolean> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"delete\", 'fabrics/book/' + fabricBookId + '/fabrics', {\n\t\t\tfabrics: fabricIds\n\t\t});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status === 'OK';\n\t}\n\n\t/**\n\t * Update the order of appearance of fabrics in a book\n\t * \n\t * @param {number}  fabricBookId    - The id of the book\n\t * @param {Array[number]} fabricIds - List of fabric ids of the book in a different order\n\t */ \n\tasync fabricBookUpdateFabricsOrder(fabricBookId: number, fabricIds: number[]): Promise<boolean> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"put\", 'fabrics/book/' + fabricBookId + '/fabrics', {\n\t\t\tfabrics: fabricIds\n\t\t});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status === 'OK';\n\t}\n\n\t/**\n\t * Add a like to a book\n\t * \n\t * @param {number}  fabricBookId    - The id of the book\n\t */ \n\tasync fabricBookAddLike(fabricBookId: number): Promise<boolean> {\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"post\", 'fabrics/book/' + fabricBookId + '/like', {});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status === 'OK';\n\t}\n\n\t/**\n\t * Remove a like from a book\n\t * \n\t * @param {number}  fabricBookId    - The id of the book\n\t */ \n\tasync fabricBookRemoveLike(fabricBookId: number): Promise<boolean> {\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"delete\", 'fabrics/book/' + fabricBookId + '/like', {});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status === 'OK';\n\t}\n\n\t/**\n\t * Add a book to my favorites\n\t * \n\t * @param {number}  fabricBookId    - The id of the book\n\t */ \n\tasync fabricBookAddFavorite(fabricBookId: number): Promise<boolean> {\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"post\", 'fabrics/book/' + fabricBookId + '/favorite', {});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status === 'OK';\n\t}\n\n\t/**\n\t * Remove a book from my favorites\n\t * \n\t * @param {number}  fabricBookId    - The id of the book\n\t */ \n\tasync fabricBookRemoveFavorite(fabricBookId: number): Promise<boolean> {\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"delete\", 'fabrics/book/' + fabricBookId + '/favorite', {});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status === 'OK';\n\t}\n\n\t/**\n\t * Get the data required to display the book explorer page\n\t *\n\t * @param count\n\t */\n\tasync getExplorerBootstrapData(count: number = 0): Promise<any> {\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tlet params = count > 0 ? { count : count } : {};\n\n\t\tconst result = await builder.execute(\"get\", 'fabrics/book/explorer-data', params);\n\n\t\tif(!result) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (<ResultType>result.getResults()).data;\n\t}\n\n\n\t/**\n\t * Send list of fabrics by email\n\t * \n\t * @param {string} recipientEmail\n\t * @param {string} recipientName\n\t * @param {string} subject\n\t * @param {any[]} fabricData\n\t * @param {string} message\n\t */ \n\tasync fabricBookSendByEmail(recipientEmail: string, recipientName: string, subject: string, fabricData: any[], message: string): Promise<boolean> {\n\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst result = await builder.execute(\"post\", 'fabrics/book/send-fabrics', {\n\t\t\trecipient_email: recipientEmail,\n\t\t\trecipient_name: recipientName,\n\t\t\tsubject: subject,\n\t\t\tfabrics: JSON.stringify(fabricData),\n\t\t\tmessage_body: message\n\t\t});\n\n\t\tif(!result) {\n            return false;\n        }\n\n\t\treturn (<ResultType>result.getResults()).status === 'OK';\n\t}\n\n}","import Base from '../base';\n\nimport Dictionary, { PaginationDetails } from '../collection';\nimport { FabricBook, FabricBookCategory } from '../instance';\nimport { Builder } from '../builder';\nimport { GenericResult, CollectionResultType, ResultType } from '../utils';\n\n\nexport class FabricBookCategoryTrait extends Base {\n\n\t/**\n\t * Get the list of categories\n\t * \n\t * @param {string} orderField\n\t * @param {string} orderDirection\n\t * @param {number} page\n\t * @param {number} perPage\n\t */ \n\tasync getFabricBookCategories(orderField: string, orderDirection:  'asc' | 'desc', page: number, perPage: number): Promise<Dictionary<FabricBookCategory>> {\n\n\t\tconst collection = new Dictionary<FabricBookCategory>();\n\n\t\tlet builder = <Builder>this.getBuilder()\n\t\t\t\t\t\t.sortBy(orderField, orderDirection)\n\t\t\t\t\t\t.page(page).resultsPerPage(perPage);\n\n\t\tconst results = await builder.execute(\"get\", 'fabrics/book-category', {});\n\n\t\tif(!results) {\n            return collection;\n        } \n\n        const resArr = <CollectionResultType>results.getResults();\n        var count = 1;\n        resArr.data.collection.map(result => {\n            collection.addItem(count.toString(), <FabricBookCategory>FabricBookCategory.createFromRaw(result, 'FabricBookCategory'));\n            count++;\n        })\n\t\tcollection.setPagination(<PaginationDetails>resArr.data.pagination);\n\n\n\t\treturn collection;\n\n\t}\n\n\t/**\n\t * Get the list of books in a book category\n\t * \n\t * @param {number} fabricBookId\n\t */ \n\tasync getFabricBookCategoryBooks(categoryId: number): Promise<Array<FabricBook>> {\n\n\t\tconst collection = new Array<FabricBook>();\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\n\t\tconst results = await builder.execute(\"get\", 'fabrics/book-category/'+ categoryId +'/books', {\n            my_books : true\n\t\t});\n\n\t\tif(!results) {\n            return collection;\n        }\n\n        const books =  <Array<{}>>(<ResultType>results.getResults()).data;\n\n        books.forEach(result => {\n            collection.push(<FabricBook>FabricBook.createFromRaw(result, 'FabricBook'));\n        });\n\n\t\treturn collection;\n\n\t}\n\n}","import Base from '../base'\nimport { Builder } from '../builder';\nimport { ResultType } from '../utils';\nimport { ShopData } from '../shop';\nimport { Fabric, ButtonColor, ThreadColor } from '../instance';\nimport Dictionary from '../collection';\n\nexport class ShopDataTrait extends Base {\n\n\t/**\n\t * This property tell if the shop raw data was already fetched.\n\t */ \n\tprotected shopDataIsFetched: boolean = false;\n\n\t/**\n\t * This property store the shop raw data, before they become available to the getter methods\n\t */ \n\tprotected shopData: ShopData = {} as ShopData;\n\n\t/**\n\t * Get the list of fabrics\n\t * @return {Promise<Dictionary<Fabric>>}\n\t */ \n\tasync getShopFabrics(): Promise<Dictionary<Fabric>> {\n\n\t\tif(!this.shopDataIsFetched) {\n\t\t\tawait this.fetchShopData();\n\t\t}\n\n\t\tconst collection = new Dictionary<Fabric>();\n\t\tvar count = 1;\n\t\tthis.shopData.fabrics.map(fabric => {\n\t\t\tcollection.addItem(count.toString(), <Fabric>Fabric.createFromRaw(fabric, 'Fabric'));\n            count++;\n\t\t});\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Get the list of thread colors\n\t * @return {Promise<Dictionary<ThreadColor>>}\n\t */ \n\tasync getShopThreadColors(): Promise<Dictionary<ThreadColor>> {\n\n\t\tif(!this.shopDataIsFetched) {\n\t\t\tawait this.fetchShopData();\n\t\t}\n\n\t\tconst collection = new Dictionary<ThreadColor>();\n\t\tvar count = 1;\n\t\tthis.shopData.threads.map(thread => {\n\t\t\tcollection.addItem(count.toString(), <ThreadColor>ThreadColor.createFromRaw(thread, 'ThreadColor'));\n            count++;\n\t\t});\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Get the list of button colors\n\t * @return {Promise<Dictionary<ButtonColor>>}\n\t */ \n\tasync getShopButtonColors(): Promise<Dictionary<ButtonColor>> {\n\n\t\tif(!this.shopDataIsFetched) {\n\t\t\tawait this.fetchShopData();\n\t\t}\n\n\t\tconst collection = new Dictionary<ButtonColor>();\n\t\tvar count = 1;\n\t\tthis.shopData.buttons.map(button => {\n\t\t\tcollection.addItem(count.toString(), <ButtonColor>ButtonColor.createFromRaw(button, 'ButtonColor'));\n            count++;\n\t\t});\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Fetch the raw data of fabrics, thread and buttons colors.\n\t * This data are fetched from a unique endpoint and the above methods will seperate them\n\t */ \n\tasync fetchShopData(): Promise<void> {\n\t\tlet builder = <Builder>this.getBuilder('Builder');\n\t\t/**\n\t\t * The result of the request can be cached.\n\t\t */ \n\t\tconst results = await builder.execute(\"get\", 'shirt_orders/shop', {}, false, true);\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Error while fetching shop data');\n\t\t}\n\n\t\tconst result = <ResultType>results.getResults();\n\n\t\tthis.shopData = <ShopData>result.data;\n\t\tthis.shopDataIsFetched = true;\n\t\t\n\t}\n}","import Base from '../base'\nimport Dictionary, { PaginationDetails } from '../collection';\nimport { GenericResult, CollectionResultType, ResultType } from '../utils';\nimport { ShirtGalleryBuilder } from '../builder';\nimport { ShirtGalleryItem } from '../instance';\nimport { FabricPattern, FabricType, FabricWeave } from '../instance/Fabric';\n\n\nexport type ShirtGalleryFilters = {\n\tfabricIds: number[],\n\tfamilyIds: number[],\n\tcontrastFamilyIds: number[],\n\tpatterns: FabricPattern[],\n\ttypes: FabricType[],\n\tweaves: FabricWeave[],\n\tcompositionIds: number[],\n\tdesigns: string[],\n\tcollarStyles: number[],\n\tcuffStyles: number[],\n\tmyShirtOnly: boolean,\n\tsotwOnly: boolean\n};\n\nexport class ShirtGalleryTrait extends Base {\n\n\t/**\n\t * Get the list of shirt\n\t * \n\t * @param {ShirtGalleryFilters} filters\n\t * @param {number} consultantId\n\t * @param {number} clientId\n\t * @param {string} orderField\n\t * @param {string} orderDirection\n\t * @param {number} page\n\t * @param {number} perPage\n\t * \n\t * @return Promise<Dictionary<ShirtGalleryItem>>\n\t */ \n\tasync getShirtGalleryShirts(filters: ShirtGalleryFilters, \n\t\torderField: string, orderDirection:  'asc' | 'desc', page: number, perPage: number): Promise<Dictionary<ShirtGalleryItem>>  {\n\n\n\t\tconst collection = new Dictionary<ShirtGalleryItem>();\n\n\n\t\tlet builder = <ShirtGalleryBuilder>this.getBuilder('ShirtGalleryBuilder');\n\n\t\t/**\n\t\t * Set filters and pagination\n\t\t */ \n\t\tbuilder.includeFabrics(filters.fabricIds)\n\t\t\t.includeFamilies(filters.familyIds)\n\t\t\t.includeContrastFamilies(filters.contrastFamilyIds)\n\t\t\t.includeFabricPatterns(filters.patterns)\n\t\t\t.includeFabricTypes(filters.types)\n\t\t\t.includeFabricWeaves(filters.weaves)\n\t\t\t.includeFabricCompositions(filters.compositionIds)\n\t\t\t.includeDesigns(filters.designs)\n\t\t\t.includeCollarStyles(filters.collarStyles)\n\t\t\t.includeCuffStyles(filters.cuffStyles)\n\t\t\t.page(page).resultsPerPage(perPage)\n\t\t\t.sortBy(orderField, orderDirection);\n\n\t\tconst results = await builder.execute(\"get\", 'shirt_orders/gallery', {\n            my_shirts      : filters.myShirtOnly,\n            sotw_only      : filters.sotwOnly\n\t\t});\n\n        if(!results) {\n            return collection;\n        } \n\n        const resArr = <CollectionResultType>results.getResults();\n        var count = 1;\n        resArr.data.collection.map(result => {\n            collection.addItem(count.toString(), <ShirtGalleryItem>ShirtGalleryItem.createFromRaw(result, 'ShirtGalleryItem'));\n            count++;\n        })\n\t\tcollection.setPagination(<PaginationDetails>resArr.data.pagination);\n        return collection;\n\n\t}\n\n\t/**\n\t * Get the data required to display the advanced filters on the shirt gallery page\n\t * \n\t * @param {number} consultantId\n\t * @param {number} clientId\n\t * \n\t * @return {Promise<ResultType>}\n\t */ \n\tasync getShirtGalleryBootstrapData(): Promise<ResultType> {\n\t\tlet builder = <ShirtGalleryBuilder>this.getBuilder('ShirtGalleryBuilder');\n\t\tconst results = await builder.execute(\"get\", 'shirt_orders/gallery/bootstrap', {});\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Error while fetching shirt gallery bootstrap data');\n\t\t}\n\t\treturn <ResultType>results.getResults();\n\t}\n\n\t/**\n\t * Get the list of likes and wishlist \n\t */ \n\tasync getUserInteractions(): Promise<ResultType> {\n\t\tlet builder = <ShirtGalleryBuilder>this.getBuilder('ShirtGalleryBuilder');\n\t\tconst results = await builder.execute(\"get\", 'shirt_orders/gallery/interactions', {});\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Error while fetching shirt gallery bootstrap data');\n\t\t}\n\t\treturn <ResultType>results.getResults();\n\t}\n\n\t/**\n\t * Add like to a shirt\n\t * \n\t * @param {number} shirtOrderId\n\t * @param {number} consultantId\n\t * @param {number} clientId\n\t * \n\t * @return {Promise<ResultType>}\n\t */ \n\tasync addLike(shirtOrderId: number): Promise<ResultType> {\n\t\tlet builder = <ShirtGalleryBuilder>this.getBuilder('ShirtGalleryBuilder');\n\t\tconst results = await builder.execute(\"post\", 'shirt_orders/gallery/' + shirtOrderId + '/like', {});\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Cannot add like to shirt [' + shirtOrderId + ']');\n\t\t}\n\n\t\treturn <ResultType>results.getResults();\n\t}\n\n\t/**\n\t * Remove like to a shirt\n\t * \n\t * @param {number} shirtOrderId\n\t * @param {number} consultantId\n\t * @param {number} clientId\n\t * \n\t * @return {Promise<ResultType>}\n\t */ \n\tasync removeLike(shirtOrderId: number): Promise<ResultType> {\n\t\tlet builder = <ShirtGalleryBuilder>this.getBuilder('ShirtGalleryBuilder');\n\t\tconst results = await builder.execute(\"delete\", 'shirt_orders/gallery/' + shirtOrderId + '/like', {});\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Cannot remove like from shirt [' + shirtOrderId + ']');\n\t\t}\n\n\t\treturn <ResultType>results.getResults();\n\t}\n\n\t/**\n\t * Add shirt to user wishlist\n\t * \n\t * @param {number} shirtOrderId\n\t * @param {number} consultantId\n\t * @param {number} clientId\n\t * \n\t * @return {Promise<ResultType>}\n\t */ \n\tasync addToWishList(shirtOrderId: number): Promise<ResultType> {\n\t\tlet builder = <ShirtGalleryBuilder>this.getBuilder('ShirtGalleryBuilder');\n\t\tconst results = await builder.execute(\"post\", 'shirt_orders/gallery/' + shirtOrderId + '/wishlist', {});\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Cannot add shirt [' + shirtOrderId + '] to whislist');\n\t\t}\n\n\t\treturn <ResultType>results.getResults();\n\t}\n\n\t/**\n\t * Remove shirt from user wishlist\n\t * \n\t * @param {number} shirtOrderId\n\t * @param {number} consultantId\n\t * @param {number} clientId\n\t * \n\t * @return {Promise<ResultType>}\n\t */ \n\tasync removeFromWishList(shirtOrderId: number, consultantId: number, clientId: number): Promise<ResultType> {\n\t\tlet builder = <ShirtGalleryBuilder>this.getBuilder('ShirtGalleryBuilder');\n\t\tconst results = await builder.execute(\"delete\", 'shirt_orders/gallery/' + shirtOrderId + '/wishlist', {});\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Cannot remove shirt [' + shirtOrderId + '] from whislist');\n\t\t}\n\n\t\treturn <ResultType>results.getResults();\n\t}\n}","import Base from '../base';\nimport { Builder } from '../builder';\nimport { ResultType, ConsultantSystemAuthResult, AccessToken } from '../utils';\n\n\nexport class AuthenticationTrait extends Base {\n\n\t/**\n\t * This method check the authentication status of the user then:\n\t * - issue a visitor access token if the user is not logged in\n\t * - issue a password grant token if the user is already logged in\n\t * \n\t * This method should only be called when the page load for the first time to avoid any 419 error (TOO_MANY_REQUEST).\n\t * \n\t */ \n\tasync refreshAccessToken(): Promise<AccessToken> {\n\n\t\tconst result = await this._loginToConsultantSystem('', '', 'consultant');\n\t\tconst token = <AccessToken>result.data;\n\t\tthis.updateAccessToken(token);\n\t\treturn token;\n\t}\n\t\n\t/**\n\t * Authenticate the user with the Consultant System, \n\t * - if the authentication is a success, the Consultant System will request an access token to the Production System\n\t * - if not, an error is thrown\n\t * \n\t * @param {string} email\n\t * @param {string} password\n\t * @param {string} userType\n\t */ \n\tasync getUserAccessToken(email: string, password: string, userType: 'consultant' | 'client'): Promise<AccessToken>  {\n\n\t\tconst result = await this._loginToConsultantSystem(email, password, userType);\n\n\t\tif(result.status) {\n\t\t\tconst token = <AccessToken>result.data;\n\t\t\tthis.updateAccessToken(token);\n\t\t\treturn token;\n\n\t\t} else {\n\t\t\tthrow new Error('Invalid Consultant System credentials');\n\t\t}\n\t}\n\n\t/**\n\t * This helper send an login request to the Consultant System.\n\t * Ti also help to check if a user session already exists by sending a empty email and password.\n\t * \n\t * If a user is already logged in, it will return a status = TRUE and a user access_token\n\t * If a user is not logged in, it will return a status = FALSE  and a visitor access_token\n\t */ \n\tasync _loginToConsultantSystem(email: string, password: string, userType: 'consultant' | 'client'): Promise<ResultType> {\n\n\t\tlet builder = <Builder>this.getBuilder('Builder');\n\n\t\tconst results = await builder.execute(\"post\", 'shirt_gallery/login.php', {\n\t\t\temail        \t: email,\n\t\t\tpassword     \t: password,\n\t\t\tuser_type    \t: userType\n\t\t}, true);\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Error while trying to login to the Consultant System');\n\t\t}\n\n\t\treturn <ResultType>results.getResults();\n\t}\n}","import Base from '../base';\nimport { Builder } from '../builder';\nimport { ResultType } from '../utils';\n\n\nexport class AccountTrait extends Base {\n\n\t/**\n\t * Update the consultant data in the Production System database\n\t * @param {number} consultantId\n\t * @param {[index: string]: any} consultantData - An associative array that accept the following keys:\n     *          'first_name', 'last_name', 'email',\n     *           'gender', 'street', 'zip', 'city', 'country',\n     *           'birthday', 'phone', 'mobile', 'street_number'\n     * \n     * All other key will be ignored by the Production System\n\t */ \n\tasync updateConsultant(consultantId: number, consultantData: { [index: string]: any }): Promise<ResultType> {\n\n\t\tlet builder = <Builder>this.getBuilder();\n\n\t\tconst results = await builder.execute(\"put\", 'account/consultant/' + consultantId, consultantData);\n\n\t\tif(!results) {\n\t\t\tthrow new Error('Error while trying to login to the Consultant System');\n\t\t}\n\n\t\treturn <ResultType>results.getResults();\n\t}\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export var ErrorKind;\n(function (ErrorKind) {\n    /** Argument is unclosed (e.g. `{0`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_CLOSING_BRACE\"] = 1] = \"EXPECT_ARGUMENT_CLOSING_BRACE\";\n    /** Argument is empty (e.g. `{}`). */\n    ErrorKind[ErrorKind[\"EMPTY_ARGUMENT\"] = 2] = \"EMPTY_ARGUMENT\";\n    /** Argument is malformed (e.g. `{foo!}``) */\n    ErrorKind[ErrorKind[\"MALFORMED_ARGUMENT\"] = 3] = \"MALFORMED_ARGUMENT\";\n    /** Expect an argument type (e.g. `{foo,}`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_TYPE\"] = 4] = \"EXPECT_ARGUMENT_TYPE\";\n    /** Unsupported argument type (e.g. `{foo,foo}`) */\n    ErrorKind[ErrorKind[\"INVALID_ARGUMENT_TYPE\"] = 5] = \"INVALID_ARGUMENT_TYPE\";\n    /** Expect an argument style (e.g. `{foo, number, }`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_STYLE\"] = 6] = \"EXPECT_ARGUMENT_STYLE\";\n    /** The number skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_NUMBER_SKELETON\"] = 7] = \"INVALID_NUMBER_SKELETON\";\n    /** The date time skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_DATE_TIME_SKELETON\"] = 8] = \"INVALID_DATE_TIME_SKELETON\";\n    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_NUMBER_SKELETON\"] = 9] = \"EXPECT_NUMBER_SKELETON\";\n    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_DATE_TIME_SKELETON\"] = 10] = \"EXPECT_DATE_TIME_SKELETON\";\n    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\"] = 11] = \"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\";\n    /** Missing select argument options (e.g. `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_OPTIONS\"] = 12] = \"EXPECT_SELECT_ARGUMENT_OPTIONS\";\n    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 13] = \"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 14] = \"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR\"] = 15] = \"EXPECT_SELECT_ARGUMENT_SELECTOR\";\n    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR\"] = 16] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR\";\n    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\"] = 17] = \"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\";\n    /**\n     * Expecting a message fragment after the `plural` or `selectordinal` selector\n     * (e.g. `{foo, plural, one}`)\n     */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\"] = 18] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\";\n    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_SELECTOR\"] = 19] = \"INVALID_PLURAL_ARGUMENT_SELECTOR\";\n    /**\n     * Duplicate selectors in `plural` or `selectordinal` argument.\n     * (e.g. {foo, plural, one {#} one {#}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\"] = 20] = \"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\";\n    /** Duplicate selectors in `select` argument.\n     * (e.g. {foo, select, apple {apple} apple {apple}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_SELECT_ARGUMENT_SELECTOR\"] = 21] = \"DUPLICATE_SELECT_ARGUMENT_SELECTOR\";\n    /** Plural or select argument option must have `other` clause. */\n    ErrorKind[ErrorKind[\"MISSING_OTHER_CLAUSE\"] = 22] = \"MISSING_OTHER_CLAUSE\";\n    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */\n    ErrorKind[ErrorKind[\"INVALID_TAG\"] = 23] = \"INVALID_TAG\";\n    /** The tag name is invalid. (e.g. `<123>foo</123>`) */\n    ErrorKind[ErrorKind[\"INVALID_TAG_NAME\"] = 25] = \"INVALID_TAG_NAME\";\n    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */\n    ErrorKind[ErrorKind[\"UNMATCHED_CLOSING_TAG\"] = 26] = \"UNMATCHED_CLOSING_TAG\";\n    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_TAG\"] = 27] = \"UNCLOSED_TAG\";\n})(ErrorKind || (ErrorKind = {}));\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// @generated from regex-gen.ts\nexport var SPACE_SEPARATOR_REGEX = /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nexport var WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\n","/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\n","// @generated from regex-gen.ts\nexport var WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/i;\n","var _a;\nimport { __assign } from \"tslib\";\nimport { ErrorKind } from './error';\nimport { SKELETON_TYPE, TYPE, } from './types';\nimport { SPACE_SEPARATOR_REGEX } from './regex.generated';\nimport { parseNumberSkeleton, parseNumberSkeletonFromString, parseDateTimeSkeleton, } from '@formatjs/icu-skeleton-parser';\nvar SPACE_SEPARATOR_START_REGEX = new RegExp(\"^\" + SPACE_SEPARATOR_REGEX.source + \"*\");\nvar SPACE_SEPARATOR_END_REGEX = new RegExp(SPACE_SEPARATOR_REGEX.source + \"*$\");\nfunction createLocation(start, end) {\n    return { start: start, end: end };\n}\n// #region Ponyfills\n// Consolidate these variables up top for easier toggling during debugging\nvar hasNativeStartsWith = !!String.prototype.startsWith;\nvar hasNativeFromCodePoint = !!String.fromCodePoint;\nvar hasNativeFromEntries = !!Object.fromEntries;\nvar hasNativeCodePointAt = !!String.prototype.codePointAt;\nvar hasTrimStart = !!String.prototype.trimStart;\nvar hasTrimEnd = !!String.prototype.trimEnd;\nvar hasNativeIsSafeInteger = !!Number.isSafeInteger;\nvar isSafeInteger = hasNativeIsSafeInteger\n    ? Number.isSafeInteger\n    : function (n) {\n        return (typeof n === 'number' &&\n            isFinite(n) &&\n            Math.floor(n) === n &&\n            Math.abs(n) <= 0x1fffffffffffff);\n    };\n// IE11 does not support y and u.\nvar REGEX_SUPPORTS_U_AND_Y = true;\ntry {\n    var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    /**\n     * legacy Edge or Xbox One browser\n     * Unicode flag support: supported\n     * Pattern_Syntax support: not supported\n     * See https://github.com/formatjs/formatjs/issues/2822\n     */\n    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\n}\ncatch (_) {\n    REGEX_SUPPORTS_U_AND_Y = false;\n}\nvar startsWith = hasNativeStartsWith\n    ? // Native\n        function startsWith(s, search, position) {\n            return s.startsWith(search, position);\n        }\n    : // For IE11\n        function startsWith(s, search, position) {\n            return s.slice(position, position + search.length) === search;\n        };\nvar fromCodePoint = hasNativeFromCodePoint\n    ? String.fromCodePoint\n    : // IE11\n        function fromCodePoint() {\n            var codePoints = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                codePoints[_i] = arguments[_i];\n            }\n            var elements = '';\n            var length = codePoints.length;\n            var i = 0;\n            var code;\n            while (length > i) {\n                code = codePoints[i++];\n                if (code > 0x10ffff)\n                    throw RangeError(code + ' is not a valid code point');\n                elements +=\n                    code < 0x10000\n                        ? String.fromCharCode(code)\n                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);\n            }\n            return elements;\n        };\nvar fromEntries = \n// native\nhasNativeFromEntries\n    ? Object.fromEntries\n    : // Ponyfill\n        function fromEntries(entries) {\n            var obj = {};\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\n                obj[k] = v;\n            }\n            return obj;\n        };\nvar codePointAt = hasNativeCodePointAt\n    ? // Native\n        function codePointAt(s, index) {\n            return s.codePointAt(index);\n        }\n    : // IE 11\n        function codePointAt(s, index) {\n            var size = s.length;\n            if (index < 0 || index >= size) {\n                return undefined;\n            }\n            var first = s.charCodeAt(index);\n            var second;\n            return first < 0xd800 ||\n                first > 0xdbff ||\n                index + 1 === size ||\n                (second = s.charCodeAt(index + 1)) < 0xdc00 ||\n                second > 0xdfff\n                ? first\n                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;\n        };\nvar trimStart = hasTrimStart\n    ? // Native\n        function trimStart(s) {\n            return s.trimStart();\n        }\n    : // Ponyfill\n        function trimStart(s) {\n            return s.replace(SPACE_SEPARATOR_START_REGEX, '');\n        };\nvar trimEnd = hasTrimEnd\n    ? // Native\n        function trimEnd(s) {\n            return s.trimEnd();\n        }\n    : // Ponyfill\n        function trimEnd(s) {\n            return s.replace(SPACE_SEPARATOR_END_REGEX, '');\n        };\n// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\nfunction RE(s, flag) {\n    return new RegExp(s, flag);\n}\n// #endregion\nvar matchIdentifierAtIndex;\nif (REGEX_SUPPORTS_U_AND_Y) {\n    // Native\n    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var _a;\n        IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n        var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\n    };\n}\nelse {\n    // IE11\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var match = [];\n        while (true) {\n            var c = codePointAt(s, index);\n            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n                break;\n            }\n            match.push(c);\n            index += c >= 0x10000 ? 2 : 1;\n        }\n        return fromCodePoint.apply(void 0, match);\n    };\n}\nvar Parser = /** @class */ (function () {\n    function Parser(message, options) {\n        if (options === void 0) { options = {}; }\n        this.message = message;\n        this.position = { offset: 0, line: 1, column: 1 };\n        this.ignoreTag = !!options.ignoreTag;\n        this.requiresOtherClause = !!options.requiresOtherClause;\n        this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n    }\n    Parser.prototype.parse = function () {\n        if (this.offset() !== 0) {\n            throw Error('parser can only be used once');\n        }\n        return this.parseMessage(0, '', false);\n    };\n    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\n        var elements = [];\n        while (!this.isEOF()) {\n            var char = this.char();\n            if (char === 123 /* `{` */) {\n                var result = this.parseArgument(nestingLevel, expectingCloseTag);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else if (char === 125 /* `}` */ && nestingLevel > 0) {\n                break;\n            }\n            else if (char === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\n                var position = this.clonePosition();\n                this.bump();\n                elements.push({\n                    type: TYPE.pound,\n                    location: createLocation(position, this.clonePosition()),\n                });\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                this.peek() === 47 // char code for '/'\n            ) {\n                if (expectingCloseTag) {\n                    break;\n                }\n                else {\n                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n                }\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                _isAlpha(this.peek() || 0)) {\n                var result = this.parseTag(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else {\n                var result = this.parseLiteral(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n        }\n        return { val: elements, err: null };\n    };\n    /**\n     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\n     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\n     * are accepted:\n     *\n     * ```\n     * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\n     * tagName ::= [a-z] (PENChar)*\n     * PENChar ::=\n     *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\n     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\n     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n     * ```\n     *\n     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\n     * since other tag-based engines like React allow it\n     */\n    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\n        var startPosition = this.clonePosition();\n        this.bump(); // `<`\n        var tagName = this.parseTagName();\n        this.bumpSpace();\n        if (this.bumpIf('/>')) {\n            // Self closing tag\n            return {\n                val: {\n                    type: TYPE.literal,\n                    value: \"<\" + tagName + \"/>\",\n                    location: createLocation(startPosition, this.clonePosition()),\n                },\n                err: null,\n            };\n        }\n        else if (this.bumpIf('>')) {\n            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n            if (childrenResult.err) {\n                return childrenResult;\n            }\n            var children = childrenResult.val;\n            // Expecting a close tag\n            var endTagStartPosition = this.clonePosition();\n            if (this.bumpIf('</')) {\n                if (this.isEOF() || !_isAlpha(this.char())) {\n                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                var closingTagNameStartPosition = this.clonePosition();\n                var closingTagName = this.parseTagName();\n                if (tagName !== closingTagName) {\n                    return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n                }\n                this.bumpSpace();\n                if (!this.bumpIf('>')) {\n                    return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                return {\n                    val: {\n                        type: TYPE.tag,\n                        value: tagName,\n                        children: children,\n                        location: createLocation(startPosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            else {\n                return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n            }\n        }\n        else {\n            return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n        }\n    };\n    /**\n     * This method assumes that the caller has peeked ahead for the first tag character.\n     */\n    Parser.prototype.parseTagName = function () {\n        var startOffset = this.offset();\n        this.bump(); // the first tag name character\n        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n            this.bump();\n        }\n        return this.message.slice(startOffset, this.offset());\n    };\n    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\n        var start = this.clonePosition();\n        var value = '';\n        while (true) {\n            var parseQuoteResult = this.tryParseQuote(parentArgType);\n            if (parseQuoteResult) {\n                value += parseQuoteResult;\n                continue;\n            }\n            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n            if (parseUnquotedResult) {\n                value += parseUnquotedResult;\n                continue;\n            }\n            var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n            if (parseLeftAngleResult) {\n                value += parseLeftAngleResult;\n                continue;\n            }\n            break;\n        }\n        var location = createLocation(start, this.clonePosition());\n        return {\n            val: { type: TYPE.literal, value: value, location: location },\n            err: null,\n        };\n    };\n    Parser.prototype.tryParseLeftAngleBracket = function () {\n        if (!this.isEOF() &&\n            this.char() === 60 /* `<` */ &&\n            (this.ignoreTag ||\n                // If at the opening tag or closing tag position, bail.\n                !_isAlphaOrSlash(this.peek() || 0))) {\n            this.bump(); // `<`\n            return '<';\n        }\n        return null;\n    };\n    /**\n     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\n     * a character that requires quoting (that is, \"only where needed\"), and works the same in\n     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\n     */\n    Parser.prototype.tryParseQuote = function (parentArgType) {\n        if (this.isEOF() || this.char() !== 39 /* `'` */) {\n            return null;\n        }\n        // Parse escaped char following the apostrophe, or early return if there is no escaped char.\n        // Check if is valid escaped character\n        switch (this.peek()) {\n            case 39 /* `'` */:\n                // double quote, should return as a single quote.\n                this.bump();\n                this.bump();\n                return \"'\";\n            // '{', '<', '>', '}'\n            case 123:\n            case 60:\n            case 62:\n            case 125:\n                break;\n            case 35: // '#'\n                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\n                    break;\n                }\n                return null;\n            default:\n                return null;\n        }\n        this.bump(); // apostrophe\n        var codePoints = [this.char()]; // escaped char\n        this.bump();\n        // read chars until the optional closing apostrophe is found\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch === 39 /* `'` */) {\n                if (this.peek() === 39 /* `'` */) {\n                    codePoints.push(39);\n                    // Bump one more time because we need to skip 2 characters.\n                    this.bump();\n                }\n                else {\n                    // Optional closing apostrophe.\n                    this.bump();\n                    break;\n                }\n            }\n            else {\n                codePoints.push(ch);\n            }\n            this.bump();\n        }\n        return fromCodePoint.apply(void 0, codePoints);\n    };\n    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\n        if (this.isEOF()) {\n            return null;\n        }\n        var ch = this.char();\n        if (ch === 60 /* `<` */ ||\n            ch === 123 /* `{` */ ||\n            (ch === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||\n            (ch === 125 /* `}` */ && nestingLevel > 0)) {\n            return null;\n        }\n        else {\n            this.bump();\n            return fromCodePoint(ch);\n        }\n    };\n    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\n        var openingBracePosition = this.clonePosition();\n        this.bump(); // `{`\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        if (this.char() === 125 /* `}` */) {\n            this.bump();\n            return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        // argument name\n        var value = this.parseIdentifierIfPossible().value;\n        if (!value) {\n            return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        switch (this.char()) {\n            // Simple argument: `{name}`\n            case 125 /* `}` */: {\n                this.bump(); // `}`\n                return {\n                    val: {\n                        type: TYPE.argument,\n                        // value does not include the opening and closing braces.\n                        value: value,\n                        location: createLocation(openingBracePosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            // Argument with options: `{name, format, ...}`\n            case 44 /* `,` */: {\n                this.bump(); // `,`\n                this.bumpSpace();\n                if (this.isEOF()) {\n                    return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n                }\n                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n            }\n            default:\n                return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n    };\n    /**\n     * Advance the parser until the end of the identifier, if it is currently on\n     * an identifier character. Return an empty string otherwise.\n     */\n    Parser.prototype.parseIdentifierIfPossible = function () {\n        var startingPosition = this.clonePosition();\n        var startOffset = this.offset();\n        var value = matchIdentifierAtIndex(this.message, startOffset);\n        var endOffset = startOffset + value.length;\n        this.bumpTo(endOffset);\n        var endPosition = this.clonePosition();\n        var location = createLocation(startingPosition, endPosition);\n        return { value: value, location: location };\n    };\n    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\n        var _a;\n        // Parse this range:\n        // {name, type, style}\n        //        ^---^\n        var typeStartPosition = this.clonePosition();\n        var argType = this.parseIdentifierIfPossible().value;\n        var typeEndPosition = this.clonePosition();\n        switch (argType) {\n            case '':\n                // Expecting a style string number, date, time, plural, selectordinal, or select.\n                return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n            case 'number':\n            case 'date':\n            case 'time': {\n                // Parse this range:\n                // {name, number, style}\n                //              ^-------^\n                this.bumpSpace();\n                var styleAndLocation = null;\n                if (this.bumpIf(',')) {\n                    this.bumpSpace();\n                    var styleStartPosition = this.clonePosition();\n                    var result = this.parseSimpleArgStyleIfPossible();\n                    if (result.err) {\n                        return result;\n                    }\n                    var style = trimEnd(result.val);\n                    if (style.length === 0) {\n                        return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n                    styleAndLocation = { style: style, styleLocation: styleLocation };\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_1 = createLocation(openingBracePosition, this.clonePosition());\n                // Extract style or skeleton\n                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\n                    // Skeleton starts with `::`.\n                    var skeleton = trimStart(styleAndLocation.style.slice(2));\n                    if (argType === 'number') {\n                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n                        if (result.err) {\n                            return result;\n                        }\n                        return {\n                            val: { type: TYPE.number, value: value, location: location_1, style: result.val },\n                            err: null,\n                        };\n                    }\n                    else {\n                        if (skeleton.length === 0) {\n                            return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n                        }\n                        var style = {\n                            type: SKELETON_TYPE.dateTime,\n                            pattern: skeleton,\n                            location: styleAndLocation.styleLocation,\n                            parsedOptions: this.shouldParseSkeletons\n                                ? parseDateTimeSkeleton(skeleton)\n                                : {},\n                        };\n                        var type = argType === 'date' ? TYPE.date : TYPE.time;\n                        return {\n                            val: { type: type, value: value, location: location_1, style: style },\n                            err: null,\n                        };\n                    }\n                }\n                // Regular style or no style.\n                return {\n                    val: {\n                        type: argType === 'number'\n                            ? TYPE.number\n                            : argType === 'date'\n                                ? TYPE.date\n                                : TYPE.time,\n                        value: value,\n                        location: location_1,\n                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,\n                    },\n                    err: null,\n                };\n            }\n            case 'plural':\n            case 'selectordinal':\n            case 'select': {\n                // Parse this range:\n                // {name, plural, options}\n                //              ^---------^\n                var typeEndPosition_1 = this.clonePosition();\n                this.bumpSpace();\n                if (!this.bumpIf(',')) {\n                    return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));\n                }\n                this.bumpSpace();\n                // Parse offset:\n                // {name, plural, offset:1, options}\n                //                ^-----^\n                //\n                // or the first option:\n                //\n                // {name, plural, one {...} other {...}}\n                //                ^--^\n                var identifierAndLocation = this.parseIdentifierIfPossible();\n                var pluralOffset = 0;\n                if (argType !== 'select' && identifierAndLocation.value === 'offset') {\n                    if (!this.bumpIf(':')) {\n                        return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    this.bumpSpace();\n                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n                    if (result.err) {\n                        return result;\n                    }\n                    // Parse another identifier for option parsing\n                    this.bumpSpace();\n                    identifierAndLocation = this.parseIdentifierIfPossible();\n                    pluralOffset = result.val;\n                }\n                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n                if (optionsResult.err) {\n                    return optionsResult;\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_2 = createLocation(openingBracePosition, this.clonePosition());\n                if (argType === 'select') {\n                    return {\n                        val: {\n                            type: TYPE.select,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n                else {\n                    return {\n                        val: {\n                            type: TYPE.plural,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            offset: pluralOffset,\n                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n            }\n            default:\n                return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n        }\n    };\n    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\n        // Parse: {value, number, ::currency/GBP }\n        //\n        if (this.isEOF() || this.char() !== 125 /* `}` */) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bump(); // `}`\n        return { val: true, err: null };\n    };\n    /**\n     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\n     */\n    Parser.prototype.parseSimpleArgStyleIfPossible = function () {\n        var nestedBraces = 0;\n        var startPosition = this.clonePosition();\n        while (!this.isEOF()) {\n            var ch = this.char();\n            switch (ch) {\n                case 39 /* `'` */: {\n                    // Treat apostrophe as quoting but include it in the style part.\n                    // Find the end of the quoted literal text.\n                    this.bump();\n                    var apostrophePosition = this.clonePosition();\n                    if (!this.bumpUntil(\"'\")) {\n                        return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n                    }\n                    this.bump();\n                    break;\n                }\n                case 123 /* `{` */: {\n                    nestedBraces += 1;\n                    this.bump();\n                    break;\n                }\n                case 125 /* `}` */: {\n                    if (nestedBraces > 0) {\n                        nestedBraces -= 1;\n                    }\n                    else {\n                        return {\n                            val: this.message.slice(startPosition.offset, this.offset()),\n                            err: null,\n                        };\n                    }\n                    break;\n                }\n                default:\n                    this.bump();\n                    break;\n            }\n        }\n        return {\n            val: this.message.slice(startPosition.offset, this.offset()),\n            err: null,\n        };\n    };\n    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\n        var tokens = [];\n        try {\n            tokens = parseNumberSkeletonFromString(skeleton);\n        }\n        catch (e) {\n            return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);\n        }\n        return {\n            val: {\n                type: SKELETON_TYPE.number,\n                tokens: tokens,\n                location: location,\n                parsedOptions: this.shouldParseSkeletons\n                    ? parseNumberSkeleton(tokens)\n                    : {},\n            },\n            err: null,\n        };\n    };\n    /**\n     * @param nesting_level The current nesting level of messages.\n     *     This can be positive when parsing message fragment in select or plural argument options.\n     * @param parent_arg_type The parent argument's type.\n     * @param parsed_first_identifier If provided, this is the first identifier-like selector of\n     *     the argument. It is a by-product of a previous parsing attempt.\n     * @param expecting_close_tag If true, this message is directly or indirectly nested inside\n     *     between a pair of opening and closing tags. The nested message will not parse beyond\n     *     the closing tag boundary.\n     */\n    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n        var _a;\n        var hasOtherClause = false;\n        var options = [];\n        var parsedSelectors = new Set();\n        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;\n        // Parse:\n        // one {one apple}\n        // ^--^\n        while (true) {\n            if (selector.length === 0) {\n                var startPosition = this.clonePosition();\n                if (parentArgType !== 'select' && this.bumpIf('=')) {\n                    // Try parse `={number}` selector\n                    var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n                    if (result.err) {\n                        return result;\n                    }\n                    selectorLocation = createLocation(startPosition, this.clonePosition());\n                    selector = this.message.slice(startPosition.offset, this.offset());\n                }\n                else {\n                    break;\n                }\n            }\n            // Duplicate selector clauses\n            if (parsedSelectors.has(selector)) {\n                return this.error(parentArgType === 'select'\n                    ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR\n                    : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n            }\n            if (selector === 'other') {\n                hasOtherClause = true;\n            }\n            // Parse:\n            // one {one apple}\n            //     ^----------^\n            this.bumpSpace();\n            var openingBracePosition = this.clonePosition();\n            if (!this.bumpIf('{')) {\n                return this.error(parentArgType === 'select'\n                    ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\n                    : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n            }\n            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n            if (fragmentResult.err) {\n                return fragmentResult;\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n                return argCloseResult;\n            }\n            options.push([\n                selector,\n                {\n                    value: fragmentResult.val,\n                    location: createLocation(openingBracePosition, this.clonePosition()),\n                },\n            ]);\n            // Keep track of the existing selectors\n            parsedSelectors.add(selector);\n            // Prep next selector clause.\n            this.bumpSpace();\n            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);\n        }\n        if (options.length === 0) {\n            return this.error(parentArgType === 'select'\n                ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR\n                : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        if (this.requiresOtherClause && !hasOtherClause) {\n            return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        return { val: options, err: null };\n    };\n    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\n        var sign = 1;\n        var startingPosition = this.clonePosition();\n        if (this.bumpIf('+')) {\n        }\n        else if (this.bumpIf('-')) {\n            sign = -1;\n        }\n        var hasDigits = false;\n        var decimal = 0;\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\n                hasDigits = true;\n                decimal = decimal * 10 + (ch - 48);\n                this.bump();\n            }\n            else {\n                break;\n            }\n        }\n        var location = createLocation(startingPosition, this.clonePosition());\n        if (!hasDigits) {\n            return this.error(expectNumberError, location);\n        }\n        decimal *= sign;\n        if (!isSafeInteger(decimal)) {\n            return this.error(invalidNumberError, location);\n        }\n        return { val: decimal, err: null };\n    };\n    Parser.prototype.offset = function () {\n        return this.position.offset;\n    };\n    Parser.prototype.isEOF = function () {\n        return this.offset() === this.message.length;\n    };\n    Parser.prototype.clonePosition = function () {\n        // This is much faster than `Object.assign` or spread.\n        return {\n            offset: this.position.offset,\n            line: this.position.line,\n            column: this.position.column,\n        };\n    };\n    /**\n     * Return the code point at the current position of the parser.\n     * Throws if the index is out of bound.\n     */\n    Parser.prototype.char = function () {\n        var offset = this.position.offset;\n        if (offset >= this.message.length) {\n            throw Error('out of bound');\n        }\n        var code = codePointAt(this.message, offset);\n        if (code === undefined) {\n            throw Error(\"Offset \" + offset + \" is at invalid UTF-16 code unit boundary\");\n        }\n        return code;\n    };\n    Parser.prototype.error = function (kind, location) {\n        return {\n            val: null,\n            err: {\n                kind: kind,\n                message: this.message,\n                location: location,\n            },\n        };\n    };\n    /** Bump the parser to the next UTF-16 code unit. */\n    Parser.prototype.bump = function () {\n        if (this.isEOF()) {\n            return;\n        }\n        var code = this.char();\n        if (code === 10 /* '\\n' */) {\n            this.position.line += 1;\n            this.position.column = 1;\n            this.position.offset += 1;\n        }\n        else {\n            this.position.column += 1;\n            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\n            this.position.offset += code < 0x10000 ? 1 : 2;\n        }\n    };\n    /**\n     * If the substring starting at the current position of the parser has\n     * the given prefix, then bump the parser to the character immediately\n     * following the prefix and return true. Otherwise, don't bump the parser\n     * and return false.\n     */\n    Parser.prototype.bumpIf = function (prefix) {\n        if (startsWith(this.message, prefix, this.offset())) {\n            for (var i = 0; i < prefix.length; i++) {\n                this.bump();\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Bump the parser until the pattern character is found and return `true`.\n     * Otherwise bump to the end of the file and return `false`.\n     */\n    Parser.prototype.bumpUntil = function (pattern) {\n        var currentOffset = this.offset();\n        var index = this.message.indexOf(pattern, currentOffset);\n        if (index >= 0) {\n            this.bumpTo(index);\n            return true;\n        }\n        else {\n            this.bumpTo(this.message.length);\n            return false;\n        }\n    };\n    /**\n     * Bump the parser to the target offset.\n     * If target offset is beyond the end of the input, bump the parser to the end of the input.\n     */\n    Parser.prototype.bumpTo = function (targetOffset) {\n        if (this.offset() > targetOffset) {\n            throw Error(\"targetOffset \" + targetOffset + \" must be greater than or equal to the current offset \" + this.offset());\n        }\n        targetOffset = Math.min(targetOffset, this.message.length);\n        while (true) {\n            var offset = this.offset();\n            if (offset === targetOffset) {\n                break;\n            }\n            if (offset > targetOffset) {\n                throw Error(\"targetOffset \" + targetOffset + \" is at invalid UTF-16 code unit boundary\");\n            }\n            this.bump();\n            if (this.isEOF()) {\n                break;\n            }\n        }\n    };\n    /** advance the parser through all whitespace to the next non-whitespace code unit. */\n    Parser.prototype.bumpSpace = function () {\n        while (!this.isEOF() && _isWhiteSpace(this.char())) {\n            this.bump();\n        }\n    };\n    /**\n     * Peek at the *next* Unicode codepoint in the input without advancing the parser.\n     * If the input has been exhausted, then this returns null.\n     */\n    Parser.prototype.peek = function () {\n        if (this.isEOF()) {\n            return null;\n        }\n        var code = this.char();\n        var offset = this.offset();\n        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\n        return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n    };\n    return Parser;\n}());\nexport { Parser };\n/**\n * This check if codepoint is alphabet (lower & uppercase)\n * @param codepoint\n * @returns\n */\nfunction _isAlpha(codepoint) {\n    return ((codepoint >= 97 && codepoint <= 122) ||\n        (codepoint >= 65 && codepoint <= 90));\n}\nfunction _isAlphaOrSlash(codepoint) {\n    return _isAlpha(codepoint) || codepoint === 47; /* '/' */\n}\n/** See `parseTag` function docs. */\nfunction _isPotentialElementNameChar(c) {\n    return (c === 45 /* '-' */ ||\n        c === 46 /* '.' */ ||\n        (c >= 48 && c <= 57) /* 0..9 */ ||\n        c === 95 /* '_' */ ||\n        (c >= 97 && c <= 122) /** a..z */ ||\n        (c >= 65 && c <= 90) /* A..Z */ ||\n        c == 0xb7 ||\n        (c >= 0xc0 && c <= 0xd6) ||\n        (c >= 0xd8 && c <= 0xf6) ||\n        (c >= 0xf8 && c <= 0x37d) ||\n        (c >= 0x37f && c <= 0x1fff) ||\n        (c >= 0x200c && c <= 0x200d) ||\n        (c >= 0x203f && c <= 0x2040) ||\n        (c >= 0x2070 && c <= 0x218f) ||\n        (c >= 0x2c00 && c <= 0x2fef) ||\n        (c >= 0x3001 && c <= 0xd7ff) ||\n        (c >= 0xf900 && c <= 0xfdcf) ||\n        (c >= 0xfdf0 && c <= 0xfffd) ||\n        (c >= 0x10000 && c <= 0xeffff));\n}\n/**\n * Code point equivalent of regex `\\p{White_Space}`.\n * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isWhiteSpace(c) {\n    return ((c >= 0x0009 && c <= 0x000d) ||\n        c === 0x0020 ||\n        c === 0x0085 ||\n        (c >= 0x200e && c <= 0x200f) ||\n        c === 0x2028 ||\n        c === 0x2029);\n}\n/**\n * Code point equivalent of regex `\\p{Pattern_Syntax}`.\n * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isPatternSyntax(c) {\n    return ((c >= 0x0021 && c <= 0x0023) ||\n        c === 0x0024 ||\n        (c >= 0x0025 && c <= 0x0027) ||\n        c === 0x0028 ||\n        c === 0x0029 ||\n        c === 0x002a ||\n        c === 0x002b ||\n        c === 0x002c ||\n        c === 0x002d ||\n        (c >= 0x002e && c <= 0x002f) ||\n        (c >= 0x003a && c <= 0x003b) ||\n        (c >= 0x003c && c <= 0x003e) ||\n        (c >= 0x003f && c <= 0x0040) ||\n        c === 0x005b ||\n        c === 0x005c ||\n        c === 0x005d ||\n        c === 0x005e ||\n        c === 0x0060 ||\n        c === 0x007b ||\n        c === 0x007c ||\n        c === 0x007d ||\n        c === 0x007e ||\n        c === 0x00a1 ||\n        (c >= 0x00a2 && c <= 0x00a5) ||\n        c === 0x00a6 ||\n        c === 0x00a7 ||\n        c === 0x00a9 ||\n        c === 0x00ab ||\n        c === 0x00ac ||\n        c === 0x00ae ||\n        c === 0x00b0 ||\n        c === 0x00b1 ||\n        c === 0x00b6 ||\n        c === 0x00bb ||\n        c === 0x00bf ||\n        c === 0x00d7 ||\n        c === 0x00f7 ||\n        (c >= 0x2010 && c <= 0x2015) ||\n        (c >= 0x2016 && c <= 0x2017) ||\n        c === 0x2018 ||\n        c === 0x2019 ||\n        c === 0x201a ||\n        (c >= 0x201b && c <= 0x201c) ||\n        c === 0x201d ||\n        c === 0x201e ||\n        c === 0x201f ||\n        (c >= 0x2020 && c <= 0x2027) ||\n        (c >= 0x2030 && c <= 0x2038) ||\n        c === 0x2039 ||\n        c === 0x203a ||\n        (c >= 0x203b && c <= 0x203e) ||\n        (c >= 0x2041 && c <= 0x2043) ||\n        c === 0x2044 ||\n        c === 0x2045 ||\n        c === 0x2046 ||\n        (c >= 0x2047 && c <= 0x2051) ||\n        c === 0x2052 ||\n        c === 0x2053 ||\n        (c >= 0x2055 && c <= 0x205e) ||\n        (c >= 0x2190 && c <= 0x2194) ||\n        (c >= 0x2195 && c <= 0x2199) ||\n        (c >= 0x219a && c <= 0x219b) ||\n        (c >= 0x219c && c <= 0x219f) ||\n        c === 0x21a0 ||\n        (c >= 0x21a1 && c <= 0x21a2) ||\n        c === 0x21a3 ||\n        (c >= 0x21a4 && c <= 0x21a5) ||\n        c === 0x21a6 ||\n        (c >= 0x21a7 && c <= 0x21ad) ||\n        c === 0x21ae ||\n        (c >= 0x21af && c <= 0x21cd) ||\n        (c >= 0x21ce && c <= 0x21cf) ||\n        (c >= 0x21d0 && c <= 0x21d1) ||\n        c === 0x21d2 ||\n        c === 0x21d3 ||\n        c === 0x21d4 ||\n        (c >= 0x21d5 && c <= 0x21f3) ||\n        (c >= 0x21f4 && c <= 0x22ff) ||\n        (c >= 0x2300 && c <= 0x2307) ||\n        c === 0x2308 ||\n        c === 0x2309 ||\n        c === 0x230a ||\n        c === 0x230b ||\n        (c >= 0x230c && c <= 0x231f) ||\n        (c >= 0x2320 && c <= 0x2321) ||\n        (c >= 0x2322 && c <= 0x2328) ||\n        c === 0x2329 ||\n        c === 0x232a ||\n        (c >= 0x232b && c <= 0x237b) ||\n        c === 0x237c ||\n        (c >= 0x237d && c <= 0x239a) ||\n        (c >= 0x239b && c <= 0x23b3) ||\n        (c >= 0x23b4 && c <= 0x23db) ||\n        (c >= 0x23dc && c <= 0x23e1) ||\n        (c >= 0x23e2 && c <= 0x2426) ||\n        (c >= 0x2427 && c <= 0x243f) ||\n        (c >= 0x2440 && c <= 0x244a) ||\n        (c >= 0x244b && c <= 0x245f) ||\n        (c >= 0x2500 && c <= 0x25b6) ||\n        c === 0x25b7 ||\n        (c >= 0x25b8 && c <= 0x25c0) ||\n        c === 0x25c1 ||\n        (c >= 0x25c2 && c <= 0x25f7) ||\n        (c >= 0x25f8 && c <= 0x25ff) ||\n        (c >= 0x2600 && c <= 0x266e) ||\n        c === 0x266f ||\n        (c >= 0x2670 && c <= 0x2767) ||\n        c === 0x2768 ||\n        c === 0x2769 ||\n        c === 0x276a ||\n        c === 0x276b ||\n        c === 0x276c ||\n        c === 0x276d ||\n        c === 0x276e ||\n        c === 0x276f ||\n        c === 0x2770 ||\n        c === 0x2771 ||\n        c === 0x2772 ||\n        c === 0x2773 ||\n        c === 0x2774 ||\n        c === 0x2775 ||\n        (c >= 0x2794 && c <= 0x27bf) ||\n        (c >= 0x27c0 && c <= 0x27c4) ||\n        c === 0x27c5 ||\n        c === 0x27c6 ||\n        (c >= 0x27c7 && c <= 0x27e5) ||\n        c === 0x27e6 ||\n        c === 0x27e7 ||\n        c === 0x27e8 ||\n        c === 0x27e9 ||\n        c === 0x27ea ||\n        c === 0x27eb ||\n        c === 0x27ec ||\n        c === 0x27ed ||\n        c === 0x27ee ||\n        c === 0x27ef ||\n        (c >= 0x27f0 && c <= 0x27ff) ||\n        (c >= 0x2800 && c <= 0x28ff) ||\n        (c >= 0x2900 && c <= 0x2982) ||\n        c === 0x2983 ||\n        c === 0x2984 ||\n        c === 0x2985 ||\n        c === 0x2986 ||\n        c === 0x2987 ||\n        c === 0x2988 ||\n        c === 0x2989 ||\n        c === 0x298a ||\n        c === 0x298b ||\n        c === 0x298c ||\n        c === 0x298d ||\n        c === 0x298e ||\n        c === 0x298f ||\n        c === 0x2990 ||\n        c === 0x2991 ||\n        c === 0x2992 ||\n        c === 0x2993 ||\n        c === 0x2994 ||\n        c === 0x2995 ||\n        c === 0x2996 ||\n        c === 0x2997 ||\n        c === 0x2998 ||\n        (c >= 0x2999 && c <= 0x29d7) ||\n        c === 0x29d8 ||\n        c === 0x29d9 ||\n        c === 0x29da ||\n        c === 0x29db ||\n        (c >= 0x29dc && c <= 0x29fb) ||\n        c === 0x29fc ||\n        c === 0x29fd ||\n        (c >= 0x29fe && c <= 0x2aff) ||\n        (c >= 0x2b00 && c <= 0x2b2f) ||\n        (c >= 0x2b30 && c <= 0x2b44) ||\n        (c >= 0x2b45 && c <= 0x2b46) ||\n        (c >= 0x2b47 && c <= 0x2b4c) ||\n        (c >= 0x2b4d && c <= 0x2b73) ||\n        (c >= 0x2b74 && c <= 0x2b75) ||\n        (c >= 0x2b76 && c <= 0x2b95) ||\n        c === 0x2b96 ||\n        (c >= 0x2b97 && c <= 0x2bff) ||\n        (c >= 0x2e00 && c <= 0x2e01) ||\n        c === 0x2e02 ||\n        c === 0x2e03 ||\n        c === 0x2e04 ||\n        c === 0x2e05 ||\n        (c >= 0x2e06 && c <= 0x2e08) ||\n        c === 0x2e09 ||\n        c === 0x2e0a ||\n        c === 0x2e0b ||\n        c === 0x2e0c ||\n        c === 0x2e0d ||\n        (c >= 0x2e0e && c <= 0x2e16) ||\n        c === 0x2e17 ||\n        (c >= 0x2e18 && c <= 0x2e19) ||\n        c === 0x2e1a ||\n        c === 0x2e1b ||\n        c === 0x2e1c ||\n        c === 0x2e1d ||\n        (c >= 0x2e1e && c <= 0x2e1f) ||\n        c === 0x2e20 ||\n        c === 0x2e21 ||\n        c === 0x2e22 ||\n        c === 0x2e23 ||\n        c === 0x2e24 ||\n        c === 0x2e25 ||\n        c === 0x2e26 ||\n        c === 0x2e27 ||\n        c === 0x2e28 ||\n        c === 0x2e29 ||\n        (c >= 0x2e2a && c <= 0x2e2e) ||\n        c === 0x2e2f ||\n        (c >= 0x2e30 && c <= 0x2e39) ||\n        (c >= 0x2e3a && c <= 0x2e3b) ||\n        (c >= 0x2e3c && c <= 0x2e3f) ||\n        c === 0x2e40 ||\n        c === 0x2e41 ||\n        c === 0x2e42 ||\n        (c >= 0x2e43 && c <= 0x2e4f) ||\n        (c >= 0x2e50 && c <= 0x2e51) ||\n        c === 0x2e52 ||\n        (c >= 0x2e53 && c <= 0x2e7f) ||\n        (c >= 0x3001 && c <= 0x3003) ||\n        c === 0x3008 ||\n        c === 0x3009 ||\n        c === 0x300a ||\n        c === 0x300b ||\n        c === 0x300c ||\n        c === 0x300d ||\n        c === 0x300e ||\n        c === 0x300f ||\n        c === 0x3010 ||\n        c === 0x3011 ||\n        (c >= 0x3012 && c <= 0x3013) ||\n        c === 0x3014 ||\n        c === 0x3015 ||\n        c === 0x3016 ||\n        c === 0x3017 ||\n        c === 0x3018 ||\n        c === 0x3019 ||\n        c === 0x301a ||\n        c === 0x301b ||\n        c === 0x301c ||\n        c === 0x301d ||\n        (c >= 0x301e && c <= 0x301f) ||\n        c === 0x3020 ||\n        c === 0x3030 ||\n        c === 0xfd3e ||\n        c === 0xfd3f ||\n        (c >= 0xfe45 && c <= 0xfe46));\n}\n","import { __assign } from \"tslib\";\nimport { WHITE_SPACE_REGEX } from './regex.generated';\nexport function parseNumberSkeletonFromString(skeleton) {\n    if (skeleton.length === 0) {\n        throw new Error('Number skeleton cannot be empty');\n    }\n    // Parse the skeleton\n    var stringTokens = skeleton\n        .split(WHITE_SPACE_REGEX)\n        .filter(function (x) { return x.length > 0; });\n    var tokens = [];\n    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {\n        var stringToken = stringTokens_1[_i];\n        var stemAndOptions = stringToken.split('/');\n        if (stemAndOptions.length === 0) {\n            throw new Error('Invalid number skeleton');\n        }\n        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n            var option = options_1[_a];\n            if (option.length === 0) {\n                throw new Error('Invalid number skeleton');\n            }\n        }\n        tokens.push({ stem: stem, options: options });\n    }\n    return tokens;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nvar INTEGER_WIDTH_REGEX = /(\\*)(0+)|(#+)(0+)|(0+)/g;\nvar CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n        case '()':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n        case '+!':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n        case '()!':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n        case '+?':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n        case '()?':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n        case '+_':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseConciseScientificAndEngineeringStem(stem) {\n    // Engineering\n    var result;\n    if (stem[0] === 'E' && stem[1] === 'E') {\n        result = {\n            notation: 'engineering',\n        };\n        stem = stem.slice(2);\n    }\n    else if (stem[0] === 'E') {\n        result = {\n            notation: 'scientific',\n        };\n        stem = stem.slice(1);\n    }\n    if (result) {\n        var signDisplay = stem.slice(0, 2);\n        if (signDisplay === '+!') {\n            result.signDisplay = 'always';\n            stem = stem.slice(2);\n        }\n        else if (signDisplay === '+?') {\n            result.signDisplay = 'exceptZero';\n            stem = stem.slice(2);\n        }\n        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {\n            throw new Error('Malformed concise eng/scientific notation');\n        }\n        result.minimumIntegerDigits = stem.length;\n    }\n    return result;\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function parseNumberSkeleton(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n            case '%':\n                result.style = 'percent';\n                continue;\n            case '%x100':\n                result.style = 'percent';\n                result.scale = 100;\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n            case ',_':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n            case 'unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n            case 'K':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n            case 'KK':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n            case 'scale':\n                result.scale = parseFloat(token.options[0]);\n                continue;\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n            case 'integer-width':\n                if (token.options.length > 1) {\n                    throw new RangeError('integer-width stems only accept a single optional option');\n                }\n                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {\n                    if (g1) {\n                        result.minimumIntegerDigits = g2.length;\n                    }\n                    else if (g3 && g4) {\n                        throw new Error('We currently do not support maximum integer digits');\n                    }\n                    else if (g5) {\n                        throw new Error('We currently do not support exact integer digits');\n                    }\n                    return '';\n                });\n                continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {\n            result.minimumIntegerDigits = token.stem.length;\n            continue;\n        }\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            // Precision\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision\n            // precision-integer case\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);\n        if (conciseScientificAndEngineeringOpts) {\n            result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);\n        }\n    }\n    return result;\n}\n","import { __assign } from \"tslib\";\nimport { ErrorKind } from './error';\nimport { Parser } from './parser';\nimport { isDateElement, isDateTimeSkeleton, isNumberElement, isNumberSkeleton, isPluralElement, isSelectElement, isTagElement, isTimeElement, } from './types';\nfunction pruneLocation(els) {\n    els.forEach(function (el) {\n        delete el.location;\n        if (isSelectElement(el) || isPluralElement(el)) {\n            for (var k in el.options) {\n                delete el.options[k].location;\n                pruneLocation(el.options[k].value);\n            }\n        }\n        else if (isNumberElement(el) && isNumberSkeleton(el.style)) {\n            delete el.style.location;\n        }\n        else if ((isDateElement(el) || isTimeElement(el)) &&\n            isDateTimeSkeleton(el.style)) {\n            delete el.style.location;\n        }\n        else if (isTagElement(el)) {\n            pruneLocation(el.children);\n        }\n    });\n}\nexport function parse(message, opts) {\n    if (opts === void 0) { opts = {}; }\n    opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);\n    var result = new Parser(message, opts).parse();\n    if (result.err) {\n        var error = SyntaxError(ErrorKind[result.err.kind]);\n        // @ts-expect-error Assign to error object\n        error.location = result.err.location;\n        // @ts-expect-error Assign to error object\n        error.originalMessage = result.err.message;\n        throw error;\n    }\n    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {\n        pruneLocation(result.val);\n    }\n    return result.val;\n}\nexport * from './types';\n","//\n// Main\n//\nexport default function memoize(fn, options) {\n    var cache = options && options.cache ? options.cache : cacheDefault;\n    var serializer = options && options.serializer ? options.serializer : serializerDefault;\n    var strategy = options && options.strategy ? options.strategy : strategyDefault;\n    return strategy(fn, {\n        cache: cache,\n        serializer: serializer,\n    });\n}\n//\n// Strategy\n//\nfunction isPrimitive(value) {\n    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\nfunction monadic(fn, cache, serializer, arg) {\n    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.call(this, arg);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction variadic(fn, cache, serializer) {\n    var args = Array.prototype.slice.call(arguments, 3);\n    var cacheKey = serializer(args);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.apply(this, args);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction assemble(fn, context, strategy, cache, serialize) {\n    return strategy.bind(context, fn, cache, serialize);\n}\nfunction strategyDefault(fn, options) {\n    var strategy = fn.length === 1 ? monadic : variadic;\n    return assemble(fn, this, strategy, options.cache.create(), options.serializer);\n}\nfunction strategyVariadic(fn, options) {\n    return assemble(fn, this, variadic, options.cache.create(), options.serializer);\n}\nfunction strategyMonadic(fn, options) {\n    return assemble(fn, this, monadic, options.cache.create(), options.serializer);\n}\n//\n// Serializer\n//\nvar serializerDefault = function () {\n    return JSON.stringify(arguments);\n};\n//\n// Cache\n//\nfunction ObjectWithoutPrototypeCache() {\n    this.cache = Object.create(null);\n}\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n    return this.cache[key];\n};\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n    this.cache[key] = value;\n};\nvar cacheDefault = {\n    create: function create() {\n        // @ts-ignore\n        return new ObjectWithoutPrototypeCache();\n    },\n};\nexport var strategies = {\n    variadic: strategyVariadic,\n    monadic: strategyMonadic,\n};\n","import { __extends } from \"tslib\";\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", ErrorCode.MISSING_VALUE, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","import { isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, isTagElement, } from '@formatjs/icu-messageformat-parser';\nimport { MissingValueError, InvalidValueError, ErrorCode, FormatError, InvalidValueTypeError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== PART_TYPE.literal ||\n            part.type !== PART_TYPE.literal) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: PART_TYPE.literal,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: PART_TYPE.literal,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: PART_TYPE.literal,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            if (style && style.scale) {\n                value =\n                    value *\n                        (style.scale || 1);\n            }\n            result.push({\n                type: PART_TYPE.literal,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport { __assign, __spreadArray } from \"tslib\";\nimport { parse } from '@formatjs/icu-messageformat-parser';\nimport memoize, { strategies } from '@formatjs/fast-memoize';\nimport { formatToParts, PART_TYPE, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: strategies.variadic,\n        }),\n        getDateTimeFormat: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: memoize(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== PART_TYPE.literal ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale =\n                    new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            integer: {\n                maximumFractionDigits: 0,\n            },\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n","import { __extends } from \"tslib\";\nexport var IntlErrorCode;\n(function (IntlErrorCode) {\n    IntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    IntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    IntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    IntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    IntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(IntlErrorCode || (IntlErrorCode = {}));\nvar IntlError = /** @class */ (function (_super) {\n    __extends(IntlError, _super);\n    function IntlError(code, message, exception) {\n        var _this = _super.call(this, \"[@formatjs/intl Error \" + code + \"] \" + message + \" \\n\" + (exception ? \"\\n\" + exception.message + \"\\n\" + exception.stack : '')) || this;\n        _this.code = code;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, IntlError);\n        }\n        return _this;\n    }\n    return IntlError;\n}(Error));\nexport { IntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, IntlErrorCode.UNSUPPORTED_FORMATTER, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(IntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, IntlErrorCode.INVALID_CONFIG, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(IntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, IntlErrorCode.MISSING_DATA, message, exception) || this;\n    }\n    return MissingDataError;\n}(IntlError));\nexport { MissingDataError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, IntlErrorCode.FORMAT_ERROR, message + \" \\nLocale: \" + locale + \"\\nMessageID: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.id) + \"\\nDefault Message: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage) + \"\\nDescription: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.description) + \" \\n\", exception) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MessageFormatError;\n}(IntlError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, IntlErrorCode.MISSING_TRANSLATION, \"Missing message: \\\"\" + descriptor.id + \"\\\" for locale \\\"\" + locale + \"\\\", using \" + (descriptor.defaultMessage ? 'default message' : 'id') + \" as fallback.\") || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(IntlError));\nexport { MissingTranslationError };\n","import { __assign, __spreadArray } from \"tslib\";\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport memoize, { strategies } from '@formatjs/fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return whitelist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: strategies.variadic,\n    });\n    var getNumberFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: strategies.variadic,\n    });\n    var getPluralRules = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: strategies.variadic,\n        }),\n        getDisplayNames: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}\n","import { __assign } from \"tslib\";\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { IntlMessageFormat, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from './error';\nimport { TYPE } from '@formatjs/icu-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport function formatMessage(_a, state, messageDescriptor, values, opts) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, onError = _a.onError, timeZone = _a.timeZone, defaultRichTextElements = _a.defaultRichTextElements;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, \"[@formatjs/intl] An `id` must be provided to format a message. You can either:\\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\\nto autofix this issue\");\n    var id = String(msgId);\n    var message = \n    // In case messages is Object.create(null)\n    // e.g import('foo.json') from webpack)\n    // See https://github.com/formatjs/formatjs/issues/1914\n    messages &&\n        Object.prototype.hasOwnProperty.call(messages, id) &&\n        messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values &&\n        message &&\n        typeof message === 'string' &&\n        !defaultRichTextElements) {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    values = __assign(__assign({}, defaultRichTextElements), (values || {}));\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n                return formatter.format(values);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\" + id + \"\\\", rendering default message verbatim\", locale, messageDescriptor, e));\n                return typeof defaultMessage === 'string' ? defaultMessage : id;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, __assign({ formatters: state }, (opts || {})));\n        return formatter.format(values);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\" + id + \"\\\", using \" + (defaultMessage ? 'default message' : 'id') + \" as fallback.\", locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n            return formatter.format(values);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\" + id + \"\\\", rendering message verbatim\", locale, messageDescriptor, e));\n        }\n    }\n    if (typeof message === 'string') {\n        return message;\n    }\n    if (typeof defaultMessage === 'string') {\n        return defaultMessage;\n    }\n    return id;\n}\n","/**\n * Cannot do Math.log(x) / Math.log(10) bc if IEEE floating point issue\n * @param x number\n */\nexport function getMagnitude(x) {\n    // Cannot count string length via Number.toString because it may use scientific notation\n    // for very small or very large numbers.\n    return Math.floor(Math.log(x) * Math.LOG10E);\n}\nexport function repeat(s, times) {\n    if (typeof s.repeat === 'function') {\n        return s.repeat(times);\n    }\n    var arr = new Array(times);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = s;\n    }\n    return arr.join('');\n}\nexport function setInternalSlot(map, pl, field, value) {\n    if (!map.get(pl)) {\n        map.set(pl, Object.create(null));\n    }\n    var slots = map.get(pl);\n    slots[field] = value;\n}\nexport function setMultiInternalSlots(map, pl, props) {\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n        var k = _a[_i];\n        setInternalSlot(map, pl, k, props[k]);\n    }\n}\nexport function getInternalSlot(map, pl, field) {\n    return getMultiInternalSlots(map, pl, field)[field];\n}\nexport function getMultiInternalSlots(map, pl) {\n    var fields = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        fields[_i - 2] = arguments[_i];\n    }\n    var slots = map.get(pl);\n    if (!slots) {\n        throw new TypeError(pl + \" InternalSlot has not been initialized\");\n    }\n    return fields.reduce(function (all, f) {\n        all[f] = slots[f];\n        return all;\n    }, Object.create(null));\n}\nexport function isLiteralPart(patternPart) {\n    return patternPart.type === 'literal';\n}\n/*\n  17 ECMAScript Standard Built-in Objects:\n    Every built-in Function object, including constructors, that is not\n    identified as an anonymous function has a name property whose value\n    is a String.\n\n    Unless otherwise specified, the name property of a built-in Function\n    object, if it exists, has the attributes { [[Writable]]: false,\n    [[Enumerable]]: false, [[Configurable]]: true }.\n*/\nexport function defineProperty(target, name, _a) {\n    var value = _a.value;\n    Object.defineProperty(target, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value,\n    });\n}\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","import { __assign } from \"tslib\";\nimport { filterProps, getNamedFormat } from './utils';\nimport { IntlError, IntlErrorCode } from './error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, \n    // @ts-expect-error es2020 has a lot stuff from es2021 bleed in\n    defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second &&\n        !filteredOptions.timeStyle &&\n        !filteredOptions.dateStyle) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatDateTimeRange(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var from = _a[0], to = _a[1], _b = _a[2], options = _b === void 0 ? {} : _b;\n    var timeZone = config.timeZone, locale = config.locale, onError = config.onError;\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, timeZone ? { timeZone: timeZone } : {});\n    try {\n        return getDateTimeFormat(locale, filteredOptions).formatRange(from, to);\n    }\n    catch (e) {\n        onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting date time range.', e));\n    }\n    return String(from);\n}\nexport function formatDateToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting date.', e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting time.', e));\n    }\n    return [];\n}\n","import { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlErrorCode, IntlError } from './error';\nvar DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting display name.', e));\n    }\n}\n","import { __assign } from \"tslib\";\nimport { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlError, IntlErrorCode } from './error';\nvar LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return now + \"_\" + i + \"_\" + now;\n}\nexport function formatList(opts, getListFormat, values, options) {\n    if (options === void 0) { options = {}; }\n    var results = formatListToParts(opts, getListFormat, values, options).reduce(function (all, el) {\n        var val = el.value;\n        if (typeof val !== 'string') {\n            all.push(val);\n        }\n        else if (typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += val;\n        }\n        else {\n            all.push(val);\n        }\n        return all;\n    }, []);\n    return results.length === 1 ? results[0] : results;\n}\nexport function formatListToParts(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        return getListFormat(locale, filteredOptions)\n            .formatToParts(serializedValues)\n            .map(function (part) {\n            return part.type === 'literal'\n                ? part\n                : __assign(__assign({}, part), { value: richValues_1[part.value] || part.value });\n        });\n    }\n    catch (e) {\n        onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting list.', e));\n    }\n    // @ts-ignore\n    return values;\n}\n","import { filterProps } from './utils';\nimport { MessageFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new MessageFormatError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { MessageFormatError } from './error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new MessageFormatError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { IntlError, IntlErrorCode } from './error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'numberingSystem',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new IntlError(IntlErrorCode.FORMAT_ERROR, 'Error formatting number.', e));\n    }\n    return [];\n}\n","export let translations = {\n\t// put translations in DE here\n\t\"[[Cotton]]\": \"Baumwolle\",\n\t\"[[Polyester]]\": \"Polyester\",\n\t\"[[Spandex]]\": \"Elasthan\",\n\t\"[[Other]]\": \"Anderes\",\n\t\"[[Upcycled Polyester]]\": \"Upcycling-Polyester\",\n\t\"[[Linen]]\": \"Leinen\",\n\t\"[[Bamboo]]\": \"Bamboo\",\n\t\"[[Tencel]]\": \"Tencel\",\n\t\"[[Rayon]]\": \"Viskose\",\n\t\"[[Nylon]]\": \"Nylon\",\n\t\"available\": \"Verfügbar\",\n\t\"soon_sold_out_coming_back\": \"Bald ausverkauft\",\n\t\"soon_sold_out_not_coming_back\": \"Bald ausverkauft\",\n\t\"sold_out_coming_back\": \"Ausverkauft\",\n\t\"sold_out_not_coming_back\": \"Ausverkauft\",\n\t\"inactive\": \"Inaktiv\",\n\t\"[[stretch_fabric]]\": \"Stretchstoff\",\n\t\"[[jersey_fabric]]\": \"Jersey\"\n}","export let translations = {\n\t// put translations in EN here\n\t\"[[Cotton]]\": \"Cotton\",\n\t\"[[Polyester]]\": \"Polyester\",\n\t\"[[Spandex]]\": \"Spandex\",\n\t\"[[Other]]\": \"Other\",\n\t\"[[Upcycled Polyester]]\": \"Upcycled Polyester\",\n\t\"[[Linen]]\": \"Linen\",\n\t\"[[Bamboo]]\": \"Bamboo\",\n\t\"[[Tencel]]\": \"Tencel\",\n\t\"[[Rayon]]\": \"Rayon\",\n\t\"[[Nylon]]\": \"Nylon\",\n\t\"available\": \"Available\",\n\t\"soon_sold_out_coming_back\": \"Soon Sold Out\",\n\t\"soon_sold_out_not_coming_back\": \"Soon Sold Out\",\n\t\"sold_out_coming_back\": \"Sold Out\",\n\t\"sold_out_not_coming_back\": \"Sold Out\",\n\t\"inactive\": \"Inaktiv\",\n\t\"[[stretch_fabric]]\": \"Stretch\",\n\t\"[[jersey_fabric]]\": \"Jersey\",\n}","// import { ThreadTrait, ButtonTrait, ShopDataTrait, ShirtGalleryTrait } from './traits';\nimport { ThreadTrait, ButtonTrait, FabricTrait, FabricBookTrait, FabricBookCategoryTrait, ShirtGalleryTrait, ShopDataTrait, AuthenticationTrait, AccountTrait } from './traits';\nimport { applyMixins } from './utils';\nimport { ServiceConfig } from './types';\nimport Base from './base';\nimport Dictionary from './collection';\nimport {createIntl, createIntlCache, IntlCache, IntlShape } from '@formatjs/intl'\nimport { deMessages, enMessages } from './translations';\n\nclass ClientBase extends Base {\n\n\t/**\n\t * @type {IntlCache}\n\t */\n\tprivate translateCache: IntlCache;\n\n\t/**\n\t * @type {IntlShape}\n\t */\n\tprivate translator: IntlShape;\n\n\t/**\n\t * @param {Config} config\n\t * @param {string = 'de'} lang\n\t */\n\tconstructor(config: ServiceConfig, lang: string = 'de') {\n\t\tsuper(config);\n\t\tthis.translateCache = createIntlCache();\n\n\t\tlet messages = {};\n\t\tswitch(lang) {\n\t\t\tcase 'en':\n\t\t\t\tObject.assign(messages, enMessages.translations);\n\t\t\t\tbreak;\n\t\t\tcase 'de':\n\t\t\tdefault:\n\t\t\t\tObject.assign(messages, deMessages.translations);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.translator = createIntl({\n\t\t\tlocale: lang,\n\t\t\tdefaultLocale: 'de',\n\t\t\tmessages: messages\n\t\t}, this.translateCache);\n\t}\n\n\t/**\n     * Use this function to do a literal translation based on a\n     * translation key. You can provide as many parameters as \n     * needed.\n\t * @param {string} key\n\t * @param {any[]}  ...params\n\t */\n\tpublic t(key: string, ...params: any[]) {\n\t\tparams = (params.length > 0) ? params.shift() : {};\n\t\treturn this.translator.formatMessage({ id: key }, params);\n\t}\n\n\t/**\n     * Use this function to translate a string with multiple keys\n     * in it (e.g. \"50% [[Cotton]] 25% [[Polyester]]\"). It will split\n     * the translation keys and translate them individually. \n\t * @param {string} string\n\t * @param {any[]}  ...params\n\t */\n\tpublic tt(string: string, ...params: any[]) {\n\t\tif(string) {\n\t\t\tconst translationKeys = string.match(/\\[\\[([^\\[]*)]/g);\n\t\t\tparams = (params.length > 0) ? params.shift() : {};\n\t\t\tconst translationArray = translationKeys as string[];\n\t\t\tif(translationArray) {\n\t\t\t\ttranslationArray.map(key => {\n\t\t\t\t\tlet translatedKey = this.translator.formatMessage({ id: key }, params);\n\t\t\t\t\tstring = string.replace(key, translatedKey);\n\t\t\t\t});\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\treturn string;\n\t}\n\n\t/**\n\t * This method allow to dynamically add more translation messages without embedding it to the library files\n\t */ \n\tpublic addTranslationMessages(messages: Object){\n\t\tif(messages.hasOwnProperty(this.translator.locale)) {\n\t\t\tthis.translator.messages = Object.assign(this.translator.messages, (messages as any)[this.translator.locale]);\n\t\t} else {\n\t\t\tconsole.warn(\"The new translations don't have the current language [\"+this.translator.locale+\"]\");\n\t\t}\n\t}\n\n}\n\ninterface ClientBase extends ThreadTrait, ButtonTrait, FabricTrait, FabricBookTrait, FabricBookCategoryTrait, \nShirtGalleryTrait, ShopDataTrait, AuthenticationTrait, AccountTrait {}\napplyMixins(ClientBase, [ThreadTrait, ButtonTrait, FabricTrait, FabricBookTrait, FabricBookCategoryTrait, \n\tShirtGalleryTrait, ShopDataTrait, AuthenticationTrait, AccountTrait]);\nexport default ClientBase","import { __assign } from \"tslib\";\nimport { createFormatters, DEFAULT_INTL_CONFIG } from './utils';\nimport { InvalidConfigError, MissingDataError } from './error';\nimport { formatNumber, formatNumberToParts } from './number';\nimport { formatRelativeTime } from './relativeTime';\nimport { formatDate, formatDateToParts, formatTime, formatTimeToParts, formatDateTimeRange, } from './dateTime';\nimport { formatPlural } from './plural';\nimport { formatMessage } from './message';\nimport { formatList, formatListToParts } from './list';\nimport { formatDisplayName } from './displayName';\nfunction messagesContainString(messages) {\n    var firstMessage = messages ? messages[Object.keys(messages)[0]] : undefined;\n    return typeof firstMessage === 'string';\n}\nfunction verifyConfigMessages(config) {\n    if (config.defaultRichTextElements &&\n        messagesContainString(config.messages || {})) {\n        console.warn(\"[@formatjs/intl] \\\"defaultRichTextElements\\\" was specified but \\\"message\\\" was not pre-compiled. \\nPlease consider using \\\"@formatjs/cli\\\" to pre-compile your messages for performance.\\nFor more details see https://formatjs.io/docs/getting-started/message-distribution\");\n    }\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    verifyConfigMessages(resolvedConfig);\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateTimeRange: formatDateTimeRange.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatListToParts: formatListToParts.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\n"],"names":["fn","thisArg","args","Array","arguments","length","i","apply","toString","Object","prototype","isArray","val","call","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","forEach","obj","l","key","hasOwnProperty","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","slice","extend","a","b","bind","trim","str","replace","stripBOM","content","charCodeAt","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","utils","parts","v","toISOString","JSON","stringify","push","join","hashmarkIndex","indexOf","InterceptorManager","handlers","use","fulfilled","rejected","this","eject","id","h","data","headers","fns","value","__CANCEL__","normalizedName","name","toUpperCase","message","config","code","request","response","error","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","stack","enhanceError","Error","write","expires","path","domain","secure","cookie","Date","toGMTString","read","match","RegExp","decodeURIComponent","remove","now","ignoreDuplicateOf","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","parsed","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","adapter","defaults","XMLHttpRequest","process","Promise","resolve","reject","requestData","requestHeaders","auth","username","password","unescape","Authorization","btoa","baseURL","requestedURL","fullPath","relativeURL","combineURLs","open","method","buildURL","timeout","onreadystatechange","readyState","status","responseURL","responseHeaders","getAllResponseHeaders","split","line","substr","toLowerCase","concat","validateStatus","createError","settle","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","isURLSameOrigin","xsrfCookieName","cookies","undefined","xsrfHeaderName","setRequestHeader","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","transformRequest","normalizeHeaderName","transformResponse","parse","maxContentLength","maxBodyLength","common","throwIfCancellationRequested","throwIfRequested","transformData","reason","isCancel","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","Axios","instanceConfig","interceptors","mergeConfig","chain","dispatchRequest","interceptor","unshift","shift","getUri","Cancel","CancelToken","executor","TypeError","resolvePromise","token","c","createInstance","defaultConfig","context","instance","axios","create","require$$0","require$$1","require$$2","all","promises","spread","callback","arr","payload","size","type","serialize","cfg","fd","pre","indices","nullsAsUndefineds","booleansAsIntegers","allowEmptyArrays","append","index","lastModifiedDate","lastModified","lastIndexOf","substring","GenericResult","getResults","Builder","base","client","columns","filterResults","filterFields","customFields","filterTerm","whereEqualsVals","sort","shouldPaginate","pageVal","resultsPerPageVal","relationships","select","term","addCustomField","sortBy","field","direction","clearSortBy","whereEquals","page","resultsPerPage","results","addRelationship","relationship","execute","passedInParams","isShopRequest","shouldCache","_this2","assign","filters","custom_fields","includes","map","per_page","FabricBuilder","excludeSeasonalFabrics","includeCottonOnlyFabrics","removeLadyFabrics","withInventory","ButtonBuilder","whereVals","where","_this3","ThreadBuilder","ShirtGalleryBuilder","includeFabrics","fabricIds","includeFamilies","familyIds","includeContrastFamilies","contrastFamilyIds","includeFabricPatterns","patterns","includeFabricTypes","types","includeFabricWeaves","weaves","includeFabricCompositions","compositionIds","includeDesigns","designs","includeCollarStyles","collarStyleIds","includeCuffStyles","cuffStyleIds","CachingService","cacheEntries","setEntry","checkCacheEntryExists","getEntry","entry","find","item","Base","accessToken","apiBaseUrl","shopBaseUrl","builder","cache","updateAccessToken","access_token","updateAccessTokenDirectly","getBuilder","endpoint","requestKey","Accept","requestOptions","Infinity","res","Dictionary","items","count","current_page","last_page","total_records","addItem","deleteItem","checkKeyExists","getItem","getKeys","property","getValues","values","clear","newItems","_this","setPagination","pagination","InstanceAbstract","getInstance","className","instances","createFromRaw","rawData","ThreadColor","ButtonColor","Fabric","FabricBook","FabricBookCategory","ShirtGalleryItem","Consultant","importFromObj","getOwnPropertyNames","isRelationshipMethod","toSnakeCase","formattedRelationship","relationshipSetter","toCamelCase","instanceName","toClassName","newObj","input","$1","letter","title_en","title_th","title_de","title_translatable","hex_code","internal_number","order_color","created_at","updated_at","getId","setId","getTitleEn","setTitleEn","getTitleDe","setTitleDe","getTitleTh","setTitleTh","getTitleTranslatable","setTitleTranslatable","getHexCode","setHexCode","getInternalNumber","setInternalNumber","getOrderColor","setOrderColor","getCreatedAt","setCreatedAt","getUpdatedAt","setUpdatedAt","getTranslatedTitle","language","title","image_url","pattern","comfort","ironing","fabric_composition_label_id","default_weave","default_weight","usage_type","default_finish","button_color_id","thread_color_id","embroidery_thread_color_id","white_fabric_id","sample_book","position_book","matching","interlining_color","interlining_softness","is_shirt_fabric","is_stretch_fabric","is_jersey_fabric","special_description_suffix","gender_suitable_for","introduced_date","discontinued_date","note","future","delivery_date","out_of_stock_date","remaining_shirts","buttonColor","category","embroideryThreadColor","fabricCompositionLabel","rolls","threadColor","fabricImage","shirtGalleryItem","compositionLabel","fabricImages","shirtGalleries","getFabricCompositionLabel","setFabricCompositionLabel","getImages","setImages","image","getImage","getGalleries","setGalleries","shirt","getGallery","getName","setName","getImageUrl","setImageUrl","getPattern","setPattern","getComfort","setComfort","getIroning","setIroning","getFabricCompositionLabelId","setFabricCompositionLabelId","getDefaultWeave","setDefaultWeave","getDefaultWeight","setDefaultWeight","getUsageType","setUsageType","getDefaultFinish","setDefaultFinish","getButtonColorId","setButtonColorId","getButtonColor","setButtonColor","getThreadColorId","setThreadColorId","getThreadColor","setThreadColor","getEmbroideryThreadColorId","setEmbroideryThreadColorId","getEmbroideryThreadColor","setEmbroideryThreadColor","getWhiteFabricId","setWhiteFabricId","getSampleBook","setSampleBook","getPositionBook","setPositionBook","getMatching","setMatching","getInterliningColor","setInterliningColor","getInterliningSoftness","setInterliningSoftness","getIsShirtFabric","setIsShirtFabric","getIsStretchFabric","setIsStretchFabric","getIsJerseyFabric","setIsJerseyFabric","getSpecialDescriptionSuffix","setSpecialDescriptionSuffix","getDescription","setDescription","getGenderSuitableFor","setGenderSuitableFor","getType","setType","getIntroducedDate","setIntroducedDate","getDiscontinuedDate","setDiscontinuedDate","getStatus","setStatus","getNote","setNote","getFuture","setFuture","getDeliveryDate","setDeliveryDate","getOutOfStockDate","setOutOfStockDate","getRemainingShirts","setRemainingShirts","generateSpecialDescription","specialFieldComponents","FabricCompositionLabel","label_name","fiber_1","fiber_1_percentage","fiber_2","fiber_2_percentage","fiber_3","fiber_3_percentage","getLabelName","setLabelName","getFiber1","setFiber1","getFiber1Percentage","setFiber1Percentage","getFiber2","setFiber2","getFiber2Percentage","setFiber2Percentage","getFiber3","setFiber3","getFiber3Percentage","setFiber3Percentage","generateCompositionLabelString","slug","consultant_id","likes","order","fabric_book_category_id","visibility","book_cover_image","book_cover_color","fabric","consultant","fabricBookCategory","bookFabrics","bookOwner","bookCategory","getTitle","setTitle","getSlug","setSlug","getConsultantId","setConsultantId","getLikes","setLikes","getOrder","setOrder","getFabricBookCategoryId","setFabricBookCategoryId","getVisibility","setVisibility","getBookCoverImage","setBookCoverImage","getBookCoverColor","setBookCoverColor","getFabrics","setFabrics","getConsultant","setConsultant","getCategory","setCategory","parent_fabric_book_category_id","can_have_child","can_have_user_books","fabricBook","categoryBooks","getParentFabricBookCategoryId","setParentFabricBookCategoryId","getCanHaveChild","setCanHaveChild","getCanHaveUserBooks","setCanHaveUserBooks","getBooks","setBooks","book","first_name","last_name","getFirstName","setFirstName","getLastName","setLastName","FabricImage","fabric_id","variant","getFabricId","setFabricId","getVariant","setVariant","ShirtBootstrapData","configs","user_actions","getConfigs","setConfigs","getUserActions","setUserActions","gallery_added_date","gender","fabric_name","fabric_type","wishlists","has_contrast","other_fabrics","shirt_title","fabric_composition_label","price","is_sotw","is_current_sotw","sotw_dates","shirtImage","shirtImages","getThread","setThread","getButton","setButton","getImageVariants","setImageVariants","getImageVariant","getGalleryAddedDate","setGalleryAddedDate","getGender","setGender","getFabricName","setFabricName","getFabricType","setFabricType","getWishlists","setWishlists","getHasContrast","setHasContrast","getOtherFabrics","setOtherFabrics","getShirtTitle","setShirtTitle","getPrice","setPrice","getIsSotw","setIsSotw","getIsCurrentSotw","setIsCurrentSotw","getSotwDates","setSotwDates","ShirtImage","getSize","setSize","legacy_id","embroidery_only","chooseable","getLegacyId","setLegacyId","legacyId","getEmbroideryOnly","setEmbroideryOnly","getChooseable","setChooseable","EmbroideryThreadColor","ThreadTrait","getAllThreads","orderField","orderDirection","collection","resArr","ButtonTrait","getAllButtons","FabricTrait","getAllFabrics","statuses","cottonOnly","excludeSpecials","_excludeSpecialFabrics","getFabricsForDropdown","_this4","getFabricsListWithImages","_this6","getFabric","fabricId","coll","specialFabrics","getFabricPageFilterData","getAllFilteredFabrics","_this12","FabricBookTrait","getFabricBooks","perPage","fabrics","categories","searchTerm","my_favorites","myFavoriteOnly","my_books","myBooksOnly","curated_books","curatedBooksOnly","getMyBooks","fabricBookGetDetails","fabricBookId","fabricBookGetDetailsBySlug","fabricBookSlug","fabricBookCreate","categoryId","coverColor","coverImage","fabricBookUpdate","fabricBookUploadCover","fabricBookDelete","fabricBookAddFabrics","fabricBookRemoveFabrics","fabricBookUpdateFabricsOrder","fabricBookAddLike","fabricBookRemoveLike","fabricBookAddFavorite","fabricBookRemoveFavorite","getExplorerBootstrapData","fabricBookSendByEmail","recipientEmail","recipientName","subject","fabricData","recipient_email","recipient_name","message_body","FabricBookCategoryTrait","getFabricBookCategories","getFabricBookCategoryBooks","ShopDataTrait","shopDataIsFetched","shopData","getShopFabrics","fetchShopData","getShopThreadColors","_this5","threads","thread","getShopButtonColors","_this7","buttons","button","_this9","ShirtGalleryTrait","getShirtGalleryShirts","collarStyles","cuffStyles","my_shirts","myShirtOnly","sotw_only","sotwOnly","getShirtGalleryBootstrapData","getUserInteractions","addLike","shirtOrderId","removeLike","addToWishList","removeFromWishList","consultantId","clientId","AuthenticationTrait","refreshAccessToken","_loginToConsultantSystem","getUserAccessToken","email","userType","user_type","AccountTrait","updateConsultant","consultantData","extendStatics","d","setPrototypeOf","__proto__","p","__extends","String","__","ErrorKind","TYPE","SKELETON_TYPE","__assign","t","s","n","__spreadArray","to","from","pack","ar","isLiteralElement","el","literal","isArgumentElement","argument","isNumberElement","isDateElement","date","isTimeElement","time","isSelectElement","isPluralElement","plural","isPoundElement","pound","isTagElement","tag","isNumberSkeleton","isDateTimeSkeleton","dateTime","SPACE_SEPARATOR_REGEX","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","len","era","year","RangeError","month","day","weekday","hour12","hourCycle","hour","minute","second","timeZoneName","_a","WHITE_SPACE_REGEX","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","INTEGER_WIDTH_REGEX","CONCISE_INTEGER_WIDTH_REGEX","parseSignificantPrecision","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseConciseScientificAndEngineeringStem","stem","notation","minimumIntegerDigits","parseNotationOptions","opt","parseNumberSkeleton","tokens","_i","tokens_1","style","scale","currency","options","useGrouping","maximumFractionDigits","unit","compactDisplay","reduce","currencyDisplay","unitDisplay","parseFloat","g3","g4","g5","minimumFractionDigits","signOpts","conciseScientificAndEngineeringOpts","SPACE_SEPARATOR_START_REGEX","SPACE_SEPARATOR_END_REGEX","createLocation","start","end","hasNativeStartsWith","startsWith","hasNativeFromCodePoint","fromCodePoint","hasNativeFromEntries","fromEntries","hasNativeCodePointAt","codePointAt","hasTrimStart","trimStart","hasTrimEnd","trimEnd","isSafeInteger","Number","isFinite","Math","floor","abs","REGEX_SUPPORTS_U_AND_Y","RE","exec","matchIdentifierAtIndex","position","codePoints","elements","fromCharCode","entries","entries_1","first","flag","IDENTIFIER_PREFIX_RE_1","lastIndex","_isWhiteSpace","_isPatternSyntax","Parser","offset","column","ignoreTag","requiresOtherClause","shouldParseSkeletons","parseMessage","nestingLevel","parentArgType","expectingCloseTag","isEOF","char","parseArgument","err","peek","UNMATCHED_CLOSING_TAG","clonePosition","_isAlpha","parseTag","parseLiteral","bump","startPosition","tagName","parseTagName","bumpSpace","bumpIf","childrenResult","children","endTagStartPosition","INVALID_TAG","closingTagNameStartPosition","UNCLOSED_TAG","startOffset","parseQuoteResult","tryParseQuote","parseUnquotedResult","tryParseUnquoted","parseLeftAngleResult","tryParseLeftAngleBracket","codepoint","ch","openingBracePosition","EXPECT_ARGUMENT_CLOSING_BRACE","EMPTY_ARGUMENT","parseIdentifierIfPossible","MALFORMED_ARGUMENT","parseArgumentOptions","startingPosition","bumpTo","typeStartPosition","argType","typeEndPosition","EXPECT_ARGUMENT_TYPE","styleAndLocation","styleStartPosition","parseSimpleArgStyleIfPossible","EXPECT_ARGUMENT_STYLE","styleLocation","argCloseResult","tryParseArgumentClose","location_1","parseNumberSkeletonFromString","EXPECT_DATE_TIME_SKELETON","parsedOptions","typeEndPosition_1","EXPECT_SELECT_ARGUMENT_OPTIONS","identifierAndLocation","pluralOffset","EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE","tryParseDecimalInteger","INVALID_PLURAL_ARGUMENT_OFFSET_VALUE","optionsResult","tryParsePluralOrSelectOptions","location_2","pluralType","INVALID_ARGUMENT_TYPE","nestedBraces","apostrophePosition","bumpUntil","UNCLOSED_QUOTE_IN_ARGUMENT_STYLE","stringTokens_1","x","stemAndOptions","options_1","INVALID_NUMBER_SKELETON","expectCloseTag","parsedFirstIdentifier","hasOtherClause","parsedSelectors","Set","selector","selectorLocation","EXPECT_PLURAL_ARGUMENT_SELECTOR","INVALID_PLURAL_ARGUMENT_SELECTOR","has","DUPLICATE_SELECT_ARGUMENT_SELECTOR","DUPLICATE_PLURAL_ARGUMENT_SELECTOR","EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT","EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT","fragmentResult","add","EXPECT_SELECT_ARGUMENT_SELECTOR","MISSING_OTHER_CLAUSE","expectNumberError","invalidNumberError","sign","hasDigits","decimal","kind","prefix","currentOffset","targetOffset","min","nextCode","pruneLocation","els","k","opts","SyntaxError","originalMessage","captureLocation","memoize","strategy","strategyDefault","cacheDefault","serializer","serializerDefault","monadic","arg","cacheKey","computedValue","get","set","variadic","assemble","ObjectWithoutPrototypeCache","ErrorCode","strategies","PART_TYPE","FormatError","_super","msg","InvalidValueError","variableId","INVALID_VALUE","InvalidValueTypeError","MissingValueError","MISSING_VALUE","isFormatXMLElementFn","formatToParts","locales","formatters","formats","currentPluralValue","els_1","getNumberFormat","format","varName","object","getDateTimeFormat","value_1","formatFn","chunks","other","Intl","PluralRules","MISSING_INTL_API","rule","getPluralRules","part","lastPart","createFastMemoizeCache","store","IntlErrorCode","IntlMessageFormat","overrideFormats","defaultLocale","formatterCache","pluralRules","ast","resolvedOptions","locale","NumberFormat","supportedLocalesOf","getAst","__parse","c1","c2","DateTimeFormat","defineProperty","memoizedDefaultLocale","enumerable","configurable","integer","percent","short","medium","long","full","IntlError","exception","captureStackTrace","UnsupportedFormatterError","UNSUPPORTED_FORMATTER","InvalidConfigError","INVALID_CONFIG","MissingDataError","MISSING_DATA","MessageFormatError","descriptor","FORMAT_ERROR","defaultMessage","MissingTranslationError","MISSING_TRANSLATION","filterProps","props","whitelist","filtered","DEFAULT_INTL_CONFIG","messages","timeZone","defaultFormats","onError","console","getNamedFormat","formatType","setTimeZoneInOptions","deepMergeOptions","opts1","opts2","deepMergeFormatsAndSetTimeZone","f1","mfFormats","formatMessage","state","messageDescriptor","defaultRichTextElements","msgId","condition","Err","invariant","getMessageFormat","DATE_TIME_FORMAT_OPTIONS","getFormatter","filteredOptions","timeStyle","dateStyle","formatDate","_b","formatTime","formatDateTimeRange","formatRange","formatDateToParts","formatTimeToParts","DISPLAY_NAMES_OPTONS","formatDisplayName","getDisplayNames","DisplayNames","of","LIST_FORMAT_OPTIONS","formatList","getListFormat","formatListToParts","ListFormat","richValues_1","serializedValues","generateToken","PLURAL_FORMAT_OPTIONS","formatPlural","RELATIVE_TIME_FORMAT_OPTIONS","formatRelativeTime","getRelativeTimeFormat","RelativeTimeFormat","NUMBER_FORMAT_OPTIONS","formatNumber","formatNumberToParts","derivedCtor","translations","available","soon_sold_out_coming_back","soon_sold_out_not_coming_back","sold_out_coming_back","sold_out_not_coming_back","inactive","ClientBase","lang","translateCache","translator","relativeTime","list","displayNames","enMessages","deMessages","createFormatters","resolvedConfig","warn","verifyConfigMessages","createIntl","tt","string","translationKeys","translationArray","translatedKey","addTranslationMessages","baseCtor","getOwnPropertyDescriptor"],"mappings":"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ACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACM,MAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACM,OAANA,GACM,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,KACf,OAANA,GACM,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACpBA,GAAK,MAAUA,GAAK,MACf,OAANA,GACCA,GAAK,MAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACCA,GAAK,OAAUA,GAAK,OACpBA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,OACf,QAANA,GACM,QAANA,GACM,QAANA,GACM,QAANA,GACCA,GAAK,OAAUA,GAAK,ME7uC7B,SAASg1B,GAAcC,GACnBA,EAAI5jC,QAAQ,SAAUm1B,aACXA,EAAGxtB,SACNiuB,GAAgBT,IAAOU,GAAgBV,OAClC,IAAI0O,KAAK1O,EAAGgE,eACNhE,EAAGgE,QAAQ0K,GAAGl8B,SACrBg8B,GAAcxO,EAAGgE,QAAQ0K,GAAGv/B,YAG3BixB,GAAgBJ,IAAOgB,GAAiBhB,EAAG6D,SAG1CxD,GAAcL,IAAOO,GAAcP,KACzCiB,GAAmBjB,EAAG6D,cAHf7D,EAAG6D,MAAMrxB,SAMXsuB,GAAad,IAClBwO,G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"}